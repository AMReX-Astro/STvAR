#ifndef ET_INTEGRATION_DIAG_K_H
#define ET_INTEGRATION_DIAG_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_diagnostics(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& diag, 
        amrex::Array4<amrex::Real const> const& state_fab,
        const amrex::Real time_lev,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtildeLL00 = state_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLL01 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL02 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL10 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL11 = state_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLL12 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL20 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL21 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL22 = state_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);

        amrex::Real AtildeLL00 = state_fab(i, j, k, Idx::AtildeLL00);
        amrex::Real AtildeLL01 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL02 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL10 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL11 = state_fab(i, j, k, Idx::AtildeLL11);
        amrex::Real AtildeLL12 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL20 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL21 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL22 = state_fab(i, j, k, Idx::AtildeLL22);
        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real GamtildeU0 = state_fab(i, j, k, Idx::GamtildeU0);
        amrex::Real GamtildeU1 = state_fab(i, j, k, Idx::GamtildeU1);
        amrex::Real GamtildeU2 = state_fab(i, j, k, Idx::GamtildeU2);
        amrex::Real dchi0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dchi1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dchi2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];
        amrex::Real ddchi00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[0], 2);
        amrex::Real ddchi01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real ddchi02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real ddchi10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real ddchi11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[1], 2);
        amrex::Real ddchi12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real ddchi20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real ddchi21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real ddchi22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[2], 2);
        amrex::Real dgamtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real dgamtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real dgamtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL00))/dx[2];
        amrex::Real dgamtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real dgamtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real dgamtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL11))/dx[2];
        amrex::Real dgamtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dgamtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real dgamtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL22))/dx[2];
        amrex::Real ddgamtildeLL0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[2], 2);
        amrex::Real dKhat0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dKhat1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dKhat2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];
        amrex::Real dAtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real dAtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL00))/dx[1];
        amrex::Real dAtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL00))/dx[2];
        amrex::Real dAtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real dAtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL11))/dx[1];
        amrex::Real dAtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL11))/dx[2];
        amrex::Real dAtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real dAtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL22))/dx[1];
        amrex::Real dAtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL22))/dx[2];
        amrex::Real dtheta0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dtheta1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dtheta2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];
        amrex::Real dGamtildeU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real dGamtildeU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU0))/dx[1];
        amrex::Real dGamtildeU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU0))/dx[2];
        amrex::Real dGamtildeU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real dGamtildeU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU1))/dx[1];
        amrex::Real dGamtildeU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU1))/dx[2];
        amrex::Real dGamtildeU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dGamtildeU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU2))/dx[1];
        amrex::Real dGamtildeU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU2))/dx[2];
        amrex::Real gamtildeUU00 = (gamtildeLL11*gamtildeLL22 - gamtildeLL12*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU01 = (-gamtildeLL01*gamtildeLL22 + gamtildeLL02*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU02 = (gamtildeLL01*gamtildeLL12 - gamtildeLL02*gamtildeLL11)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU10 = (-gamtildeLL10*gamtildeLL22 + gamtildeLL12*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU11 = gamtildeLL00*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU12 = -gamtildeLL00*(gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU20 = (gamtildeLL10*gamtildeLL21 - gamtildeLL11*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU21 = -gamtildeLL00*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU22 = gamtildeLL00*(gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real DgambarLLL000 = dgamtildeLL000;
        amrex::Real DgambarLLL001 = dgamtildeLL001;
        amrex::Real DgambarLLL002 = dgamtildeLL002;
        amrex::Real DgambarLLL010 = dgamtildeLL010;
        amrex::Real DgambarLLL011 = dgamtildeLL011;
        amrex::Real DgambarLLL012 = dgamtildeLL012;
        amrex::Real DgambarLLL020 = dgamtildeLL020;
        amrex::Real DgambarLLL021 = dgamtildeLL021;
        amrex::Real DgambarLLL022 = dgamtildeLL022;
        amrex::Real DgambarLLL100 = dgamtildeLL100;
        amrex::Real DgambarLLL101 = dgamtildeLL101;
        amrex::Real DgambarLLL102 = dgamtildeLL102;
        amrex::Real DgambarLLL110 = dgamtildeLL110;
        amrex::Real DgambarLLL111 = dgamtildeLL111;
        amrex::Real DgambarLLL112 = dgamtildeLL112;
        amrex::Real DgambarLLL120 = dgamtildeLL120;
        amrex::Real DgambarLLL121 = dgamtildeLL121;
        amrex::Real DgambarLLL122 = dgamtildeLL122;
        amrex::Real DgambarLLL200 = dgamtildeLL200;
        amrex::Real DgambarLLL201 = dgamtildeLL201;
        amrex::Real DgambarLLL202 = dgamtildeLL202;
        amrex::Real DgambarLLL210 = dgamtildeLL210;
        amrex::Real DgambarLLL211 = dgamtildeLL211;
        amrex::Real DgambarLLL212 = dgamtildeLL212;
        amrex::Real DgambarLLL220 = dgamtildeLL220;
        amrex::Real DgambarLLL221 = dgamtildeLL221;
        amrex::Real DgambarLLL222 = dgamtildeLL222;
        amrex::Real GamtildeULL000 = 0.5*DgambarLLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU02*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL001 = 0.5*DgambarLLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU02*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL002 = 0.5*DgambarLLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU02*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL010 = 0.5*DgambarLLL110*gamtildeUU01 + 0.5*gamtildeUU00*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU02*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL011 = 0.5*DgambarLLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU02*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL012 = 0.5*DgambarLLL112*gamtildeUU01 + 0.5*gamtildeUU00*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU02*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL020 = 0.5*DgambarLLL220*gamtildeUU02 + 0.5*gamtildeUU00*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU01*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL021 = 0.5*DgambarLLL221*gamtildeUU02 + 0.5*gamtildeUU00*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU01*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL022 = 0.5*DgambarLLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU01*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeULL100 = 0.5*DgambarLLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU12*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL101 = 0.5*DgambarLLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU12*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL102 = 0.5*DgambarLLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU12*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL110 = 0.5*DgambarLLL110*gamtildeUU11 + 0.5*gamtildeUU10*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU12*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL111 = 0.5*DgambarLLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU12*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL112 = 0.5*DgambarLLL112*gamtildeUU11 + 0.5*gamtildeUU10*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU12*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL120 = 0.5*DgambarLLL220*gamtildeUU12 + 0.5*gamtildeUU10*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU11*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL121 = 0.5*DgambarLLL221*gamtildeUU12 + 0.5*gamtildeUU10*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU11*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL122 = 0.5*DgambarLLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU11*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeULL200 = 0.5*DgambarLLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU22*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL201 = 0.5*DgambarLLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU22*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL202 = 0.5*DgambarLLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU22*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL210 = 0.5*DgambarLLL110*gamtildeUU21 + 0.5*gamtildeUU20*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU22*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL211 = 0.5*DgambarLLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU22*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL212 = 0.5*DgambarLLL112*gamtildeUU21 + 0.5*gamtildeUU20*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU22*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL220 = 0.5*DgambarLLL220*gamtildeUU22 + 0.5*gamtildeUU20*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU21*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL221 = 0.5*DgambarLLL221*gamtildeUU22 + 0.5*gamtildeUU20*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU21*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL222 = 0.5*DgambarLLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU21*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeLLL000 = GamtildeULL000*gamtildeLL00 + GamtildeULL100*gamtildeLL01 + GamtildeULL200*gamtildeLL02;
        amrex::Real GamtildeLLL001 = GamtildeULL001*gamtildeLL00 + GamtildeULL101*gamtildeLL01 + GamtildeULL201*gamtildeLL02;
        amrex::Real GamtildeLLL002 = GamtildeULL002*gamtildeLL00 + GamtildeULL102*gamtildeLL01 + GamtildeULL202*gamtildeLL02;
        amrex::Real GamtildeLLL010 = GamtildeULL010*gamtildeLL00 + GamtildeULL110*gamtildeLL01 + GamtildeULL210*gamtildeLL02;
        amrex::Real GamtildeLLL011 = GamtildeULL011*gamtildeLL00 + GamtildeULL111*gamtildeLL01 + GamtildeULL211*gamtildeLL02;
        amrex::Real GamtildeLLL012 = GamtildeULL012*gamtildeLL00 + GamtildeULL112*gamtildeLL01 + GamtildeULL212*gamtildeLL02;
        amrex::Real GamtildeLLL020 = GamtildeULL020*gamtildeLL00 + GamtildeULL120*gamtildeLL01 + GamtildeULL220*gamtildeLL02;
        amrex::Real GamtildeLLL021 = GamtildeULL021*gamtildeLL00 + GamtildeULL121*gamtildeLL01 + GamtildeULL221*gamtildeLL02;
        amrex::Real GamtildeLLL022 = GamtildeULL022*gamtildeLL00 + GamtildeULL122*gamtildeLL01 + GamtildeULL222*gamtildeLL02;
        amrex::Real GamtildeLLL100 = GamtildeULL000*gamtildeLL10 + GamtildeULL100*gamtildeLL11 + GamtildeULL200*gamtildeLL12;
        amrex::Real GamtildeLLL101 = GamtildeULL001*gamtildeLL10 + GamtildeULL101*gamtildeLL11 + GamtildeULL201*gamtildeLL12;
        amrex::Real GamtildeLLL102 = GamtildeULL002*gamtildeLL10 + GamtildeULL102*gamtildeLL11 + GamtildeULL202*gamtildeLL12;
        amrex::Real GamtildeLLL110 = GamtildeULL010*gamtildeLL10 + GamtildeULL110*gamtildeLL11 + GamtildeULL210*gamtildeLL12;
        amrex::Real GamtildeLLL111 = GamtildeULL011*gamtildeLL10 + GamtildeULL111*gamtildeLL11 + GamtildeULL211*gamtildeLL12;
        amrex::Real GamtildeLLL112 = GamtildeULL012*gamtildeLL10 + GamtildeULL112*gamtildeLL11 + GamtildeULL212*gamtildeLL12;
        amrex::Real GamtildeLLL120 = GamtildeULL020*gamtildeLL10 + GamtildeULL120*gamtildeLL11 + GamtildeULL220*gamtildeLL12;
        amrex::Real GamtildeLLL121 = GamtildeULL021*gamtildeLL10 + GamtildeULL121*gamtildeLL11 + GamtildeULL221*gamtildeLL12;
        amrex::Real GamtildeLLL122 = GamtildeULL022*gamtildeLL10 + GamtildeULL122*gamtildeLL11 + GamtildeULL222*gamtildeLL12;
        amrex::Real GamtildeLLL200 = GamtildeULL000*gamtildeLL20 + GamtildeULL100*gamtildeLL21 + GamtildeULL200*gamtildeLL22;
        amrex::Real GamtildeLLL201 = GamtildeULL001*gamtildeLL20 + GamtildeULL101*gamtildeLL21 + GamtildeULL201*gamtildeLL22;
        amrex::Real GamtildeLLL202 = GamtildeULL002*gamtildeLL20 + GamtildeULL102*gamtildeLL21 + GamtildeULL202*gamtildeLL22;
        amrex::Real GamtildeLLL210 = GamtildeULL010*gamtildeLL20 + GamtildeULL110*gamtildeLL21 + GamtildeULL210*gamtildeLL22;
        amrex::Real GamtildeLLL211 = GamtildeULL011*gamtildeLL20 + GamtildeULL111*gamtildeLL21 + GamtildeULL211*gamtildeLL22;
        amrex::Real GamtildeLLL212 = GamtildeULL012*gamtildeLL20 + GamtildeULL112*gamtildeLL21 + GamtildeULL212*gamtildeLL22;
        amrex::Real GamtildeLLL220 = GamtildeULL020*gamtildeLL20 + GamtildeULL120*gamtildeLL21 + GamtildeULL220*gamtildeLL22;
        amrex::Real GamtildeLLL221 = GamtildeULL021*gamtildeLL20 + GamtildeULL121*gamtildeLL21 + GamtildeULL221*gamtildeLL22;
        amrex::Real GamtildeLLL222 = GamtildeULL022*gamtildeLL20 + GamtildeULL122*gamtildeLL21 + GamtildeULL222*gamtildeLL22;
        amrex::Real GamULL000 = GamtildeULL000 + 0.5*dchi0*gamtildeLL00*gamtildeUU00/chi - 1.0*dchi0/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU02/chi;
        amrex::Real GamULL001 = GamtildeULL001 + 0.5*dchi0*gamtildeLL01*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU01/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU02/chi;
        amrex::Real GamULL002 = GamtildeULL002 + 0.5*dchi0*gamtildeLL02*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU02/chi - 0.5*dchi2/chi;
        amrex::Real GamULL010 = GamtildeULL010 + 0.5*dchi0*gamtildeLL10*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU01/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU02/chi;
        amrex::Real GamULL011 = GamtildeULL011 + 0.5*dchi0*gamtildeLL11*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU02/chi;
        amrex::Real GamULL012 = GamtildeULL012 + 0.5*dchi0*gamtildeLL12*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU02/chi;
        amrex::Real GamULL020 = GamtildeULL020 + 0.5*dchi0*gamtildeLL20*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU02/chi - 0.5*dchi2/chi;
        amrex::Real GamULL021 = GamtildeULL021 + 0.5*dchi0*gamtildeLL21*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU02/chi;
        amrex::Real GamULL022 = GamtildeULL022 + 0.5*dchi0*gamtildeLL22*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU02/chi;
        amrex::Real GamULL100 = GamtildeULL100 + 0.5*dchi0*gamtildeLL00*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU12/chi;
        amrex::Real GamULL101 = GamtildeULL101 + 0.5*dchi0*gamtildeLL01*gamtildeUU10/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU12/chi;
        amrex::Real GamULL102 = GamtildeULL102 + 0.5*dchi0*gamtildeLL02*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU12/chi;
        amrex::Real GamULL110 = GamtildeULL110 + 0.5*dchi0*gamtildeLL10*gamtildeUU10/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU12/chi;
        amrex::Real GamULL111 = GamtildeULL111 + 0.5*dchi0*gamtildeLL11*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU11/chi - 1.0*dchi1/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU12/chi;
        amrex::Real GamULL112 = GamtildeULL112 + 0.5*dchi0*gamtildeLL12*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU12/chi - 0.5*dchi2/chi;
        amrex::Real GamULL120 = GamtildeULL120 + 0.5*dchi0*gamtildeLL20*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU12/chi;
        amrex::Real GamULL121 = GamtildeULL121 + 0.5*dchi0*gamtildeLL21*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU12/chi - 0.5*dchi2/chi;
        amrex::Real GamULL122 = GamtildeULL122 + 0.5*dchi0*gamtildeLL22*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU12/chi;
        amrex::Real GamULL200 = GamtildeULL200 + 0.5*dchi0*gamtildeLL00*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU22/chi;
        amrex::Real GamULL201 = GamtildeULL201 + 0.5*dchi0*gamtildeLL01*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU22/chi;
        amrex::Real GamULL202 = GamtildeULL202 + 0.5*dchi0*gamtildeLL02*gamtildeUU20/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU22/chi;
        amrex::Real GamULL210 = GamtildeULL210 + 0.5*dchi0*gamtildeLL10*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU22/chi;
        amrex::Real GamULL211 = GamtildeULL211 + 0.5*dchi0*gamtildeLL11*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU22/chi;
        amrex::Real GamULL212 = GamtildeULL212 + 0.5*dchi0*gamtildeLL12*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU21/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU22/chi;
        amrex::Real GamULL220 = GamtildeULL220 + 0.5*dchi0*gamtildeLL20*gamtildeUU20/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU22/chi;
        amrex::Real GamULL221 = GamtildeULL221 + 0.5*dchi0*gamtildeLL21*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU21/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU22/chi;
        amrex::Real GamULL222 = GamtildeULL222 + 0.5*dchi0*gamtildeLL22*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU22/chi - 1.0*dchi2/chi;
        amrex::Real gamLL00 = gamtildeLL00/chi;
        amrex::Real gamLL01 = gamtildeLL01/chi;
        amrex::Real gamLL02 = gamtildeLL02/chi;
        amrex::Real gamLL10 = gamtildeLL10/chi;
        amrex::Real gamLL11 = gamtildeLL11/chi;
        amrex::Real gamLL12 = gamtildeLL12/chi;
        amrex::Real gamLL20 = gamtildeLL20/chi;
        amrex::Real gamLL21 = gamtildeLL21/chi;
        amrex::Real gamLL22 = gamtildeLL22/chi;
        amrex::Real gamUU00 = chi*gamtildeUU00;
        amrex::Real gamUU01 = chi*gamtildeUU01;
        amrex::Real gamUU02 = chi*gamtildeUU02;
        amrex::Real gamUU10 = chi*gamtildeUU10;
        amrex::Real gamUU11 = chi*gamtildeUU11;
        amrex::Real gamUU12 = chi*gamtildeUU12;
        amrex::Real gamUU20 = chi*gamtildeUU20;
        amrex::Real gamUU21 = chi*gamtildeUU21;
        amrex::Real gamUU22 = chi*gamtildeUU22;
        amrex::Real AtildeUU00 = AtildeLL00*std::pow(gamtildeUU00, 2) + AtildeLL01*gamtildeUU00*gamtildeUU01 + AtildeLL02*gamtildeUU00*gamtildeUU02 + AtildeLL10*gamtildeUU00*gamtildeUU01 + AtildeLL11*std::pow(gamtildeUU01, 2) + AtildeLL12*gamtildeUU01*gamtildeUU02 + AtildeLL20*gamtildeUU00*gamtildeUU02 + AtildeLL21*gamtildeUU01*gamtildeUU02 + AtildeLL22*std::pow(gamtildeUU02, 2);
        amrex::Real AtildeUU01 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU00*gamtildeUU11 + AtildeLL02*gamtildeUU00*gamtildeUU12 + AtildeLL10*gamtildeUU01*gamtildeUU10 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU01*gamtildeUU12 + AtildeLL20*gamtildeUU02*gamtildeUU10 + AtildeLL21*gamtildeUU02*gamtildeUU11 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU02 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU00*gamtildeUU21 + AtildeLL02*gamtildeUU00*gamtildeUU22 + AtildeLL10*gamtildeUU01*gamtildeUU20 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU01*gamtildeUU22 + AtildeLL20*gamtildeUU02*gamtildeUU20 + AtildeLL21*gamtildeUU02*gamtildeUU21 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU10 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU01*gamtildeUU10 + AtildeLL02*gamtildeUU02*gamtildeUU10 + AtildeLL10*gamtildeUU00*gamtildeUU11 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU02*gamtildeUU11 + AtildeLL20*gamtildeUU00*gamtildeUU12 + AtildeLL21*gamtildeUU01*gamtildeUU12 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU11 = AtildeLL00*std::pow(gamtildeUU10, 2) + AtildeLL01*gamtildeUU10*gamtildeUU11 + AtildeLL02*gamtildeUU10*gamtildeUU12 + AtildeLL10*gamtildeUU10*gamtildeUU11 + AtildeLL11*std::pow(gamtildeUU11, 2) + AtildeLL12*gamtildeUU11*gamtildeUU12 + AtildeLL20*gamtildeUU10*gamtildeUU12 + AtildeLL21*gamtildeUU11*gamtildeUU12 + AtildeLL22*std::pow(gamtildeUU12, 2);
        amrex::Real AtildeUU12 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU10*gamtildeUU21 + AtildeLL02*gamtildeUU10*gamtildeUU22 + AtildeLL10*gamtildeUU11*gamtildeUU20 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU11*gamtildeUU22 + AtildeLL20*gamtildeUU12*gamtildeUU20 + AtildeLL21*gamtildeUU12*gamtildeUU21 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU20 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU01*gamtildeUU20 + AtildeLL02*gamtildeUU02*gamtildeUU20 + AtildeLL10*gamtildeUU00*gamtildeUU21 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU02*gamtildeUU21 + AtildeLL20*gamtildeUU00*gamtildeUU22 + AtildeLL21*gamtildeUU01*gamtildeUU22 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU21 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU11*gamtildeUU20 + AtildeLL02*gamtildeUU12*gamtildeUU20 + AtildeLL10*gamtildeUU10*gamtildeUU21 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU12*gamtildeUU21 + AtildeLL20*gamtildeUU10*gamtildeUU22 + AtildeLL21*gamtildeUU11*gamtildeUU22 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU22 = AtildeLL00*std::pow(gamtildeUU20, 2) + AtildeLL01*gamtildeUU20*gamtildeUU21 + AtildeLL02*gamtildeUU20*gamtildeUU22 + AtildeLL10*gamtildeUU20*gamtildeUU21 + AtildeLL11*std::pow(gamtildeUU21, 2) + AtildeLL12*gamtildeUU21*gamtildeUU22 + AtildeLL20*gamtildeUU20*gamtildeUU22 + AtildeLL21*gamtildeUU21*gamtildeUU22 + AtildeLL22*std::pow(gamtildeUU22, 2);
        amrex::Real AtildeUL00 = AtildeLL00*gamtildeUU00 + AtildeLL10*gamtildeUU01 + AtildeLL20*gamtildeUU02;
        amrex::Real AtildeUL01 = AtildeLL01*gamtildeUU00 + AtildeLL11*gamtildeUU01 + AtildeLL21*gamtildeUU02;
        amrex::Real AtildeUL02 = AtildeLL02*gamtildeUU00 + AtildeLL12*gamtildeUU01 + AtildeLL22*gamtildeUU02;
        amrex::Real AtildeUL10 = AtildeLL00*gamtildeUU10 + AtildeLL10*gamtildeUU11 + AtildeLL20*gamtildeUU12;
        amrex::Real AtildeUL11 = AtildeLL01*gamtildeUU10 + AtildeLL11*gamtildeUU11 + AtildeLL21*gamtildeUU12;
        amrex::Real AtildeUL12 = AtildeLL02*gamtildeUU10 + AtildeLL12*gamtildeUU11 + AtildeLL22*gamtildeUU12;
        amrex::Real AtildeUL20 = AtildeLL00*gamtildeUU20 + AtildeLL10*gamtildeUU21 + AtildeLL20*gamtildeUU22;
        amrex::Real AtildeUL21 = AtildeLL01*gamtildeUU20 + AtildeLL11*gamtildeUU21 + AtildeLL21*gamtildeUU22;
        amrex::Real AtildeUL22 = AtildeLL02*gamtildeUU20 + AtildeLL12*gamtildeUU21 + AtildeLL22*gamtildeUU22;
        amrex::Real GamtildeDU0 = GamtildeULL000*gamtildeUU00 + GamtildeULL001*gamtildeUU01 + GamtildeULL002*gamtildeUU02 + GamtildeULL010*gamtildeUU10 + GamtildeULL011*gamtildeUU11 + GamtildeULL012*gamtildeUU12 + GamtildeULL020*gamtildeUU20 + GamtildeULL021*gamtildeUU21 + GamtildeULL022*gamtildeUU22;
        amrex::Real GamtildeDU1 = GamtildeULL100*gamtildeUU00 + GamtildeULL101*gamtildeUU01 + GamtildeULL102*gamtildeUU02 + GamtildeULL110*gamtildeUU10 + GamtildeULL111*gamtildeUU11 + GamtildeULL112*gamtildeUU12 + GamtildeULL120*gamtildeUU20 + GamtildeULL121*gamtildeUU21 + GamtildeULL122*gamtildeUU22;
        amrex::Real GamtildeDU2 = GamtildeULL200*gamtildeUU00 + GamtildeULL201*gamtildeUU01 + GamtildeULL202*gamtildeUU02 + GamtildeULL210*gamtildeUU10 + GamtildeULL211*gamtildeUU11 + GamtildeULL212*gamtildeUU12 + GamtildeULL220*gamtildeUU20 + GamtildeULL221*gamtildeUU21 + GamtildeULL222*gamtildeUU22;
        amrex::Real RtildeLL00 = 1.0*GamtildeDU0*GamtildeLLL000 + 1.0*GamtildeDU1*GamtildeLLL001 + 1.0*GamtildeDU2*GamtildeLLL002 + 3*GamtildeLLL000*GamtildeULL000*gamtildeUU00 + GamtildeLLL000*GamtildeULL001*gamtildeUU01 + GamtildeLLL000*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL000*GamtildeULL010*gamtildeUU10 + 2*GamtildeLLL000*GamtildeULL020*gamtildeUU20 + 2*GamtildeLLL001*GamtildeULL000*gamtildeUU01 + 2*GamtildeLLL001*GamtildeULL010*gamtildeUU11 + 2*GamtildeLLL001*GamtildeULL020*gamtildeUU21 + 2*GamtildeLLL002*GamtildeULL000*gamtildeUU02 + 2*GamtildeLLL002*GamtildeULL010*gamtildeUU12 + 2*GamtildeLLL002*GamtildeULL020*gamtildeUU22 + GamtildeLLL010*GamtildeULL000*gamtildeUU10 + GamtildeLLL010*GamtildeULL001*gamtildeUU11 + GamtildeLLL010*GamtildeULL002*gamtildeUU12 + 2*GamtildeLLL010*GamtildeULL100*gamtildeUU00 + 2*GamtildeLLL010*GamtildeULL110*gamtildeUU10 + 2*GamtildeLLL010*GamtildeULL120*gamtildeUU20 + 2*GamtildeLLL011*GamtildeULL100*gamtildeUU01 + 2*GamtildeLLL011*GamtildeULL110*gamtildeUU11 + 2*GamtildeLLL011*GamtildeULL120*gamtildeUU21 + 2*GamtildeLLL012*GamtildeULL100*gamtildeUU02 + 2*GamtildeLLL012*GamtildeULL110*gamtildeUU12 + 2*GamtildeLLL012*GamtildeULL120*gamtildeUU22 + GamtildeLLL020*GamtildeULL000*gamtildeUU20 + GamtildeLLL020*GamtildeULL001*gamtildeUU21 + GamtildeLLL020*GamtildeULL002*gamtildeUU22 + 2*GamtildeLLL020*GamtildeULL200*gamtildeUU00 + 2*GamtildeLLL020*GamtildeULL210*gamtildeUU10 + 2*GamtildeLLL020*GamtildeULL220*gamtildeUU20 + 2*GamtildeLLL021*GamtildeULL200*gamtildeUU01 + 2*GamtildeLLL021*GamtildeULL210*gamtildeUU11 + 2*GamtildeLLL021*GamtildeULL220*gamtildeUU21 + 2*GamtildeLLL022*GamtildeULL200*gamtildeUU02 + 2*GamtildeLLL022*GamtildeULL210*gamtildeUU12 + 2*GamtildeLLL022*GamtildeULL220*gamtildeUU22 + GamtildeLLL100*GamtildeULL100*gamtildeUU00 + GamtildeLLL100*GamtildeULL101*gamtildeUU01 + GamtildeLLL100*GamtildeULL102*gamtildeUU02 + GamtildeLLL110*GamtildeULL100*gamtildeUU10 + GamtildeLLL110*GamtildeULL101*gamtildeUU11 + GamtildeLLL110*GamtildeULL102*gamtildeUU12 + GamtildeLLL120*GamtildeULL100*gamtildeUU20 + GamtildeLLL120*GamtildeULL101*gamtildeUU21 + GamtildeLLL120*GamtildeULL102*gamtildeUU22 + GamtildeLLL200*GamtildeULL200*gamtildeUU00 + GamtildeLLL200*GamtildeULL201*gamtildeUU01 + GamtildeLLL200*GamtildeULL202*gamtildeUU02 + GamtildeLLL210*GamtildeULL200*gamtildeUU10 + GamtildeLLL210*GamtildeULL201*gamtildeUU11 + GamtildeLLL210*GamtildeULL202*gamtildeUU12 + GamtildeLLL220*GamtildeULL200*gamtildeUU20 + GamtildeLLL220*GamtildeULL201*gamtildeUU21 + GamtildeLLL220*GamtildeULL202*gamtildeUU22 + 1.0*dGamtildeU00*gamtildeLL00 + 1.0*dGamtildeU10*gamtildeLL10 + 1.0*dGamtildeU20*gamtildeLL20 - 0.5*ddgamtildeLL0000*gamtildeUU00 - 0.5*ddgamtildeLL0001*gamtildeUU01 - 0.5*ddgamtildeLL0002*gamtildeUU02 - 0.5*ddgamtildeLL0010*gamtildeUU10 - 0.5*ddgamtildeLL0011*gamtildeUU11 - 0.5*ddgamtildeLL0012*gamtildeUU12 - 0.5*ddgamtildeLL0020*gamtildeUU20 - 0.5*ddgamtildeLL0021*gamtildeUU21 - 0.5*ddgamtildeLL0022*gamtildeUU22;
        amrex::Real RtildeLL01 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL001*GamtildeULL000*gamtildeUU00 + GamtildeLLL001*GamtildeULL001*gamtildeUU01 + GamtildeLLL001*GamtildeULL002*gamtildeUU02 + GamtildeLLL011*GamtildeULL000*gamtildeUU10 + GamtildeLLL011*GamtildeULL001*gamtildeUU11 + GamtildeLLL011*GamtildeULL002*gamtildeUU12 + GamtildeLLL021*GamtildeULL000*gamtildeUU20 + GamtildeLLL021*GamtildeULL001*gamtildeUU21 + GamtildeLLL021*GamtildeULL002*gamtildeUU22 + GamtildeLLL101*GamtildeULL100*gamtildeUU00 + GamtildeLLL101*GamtildeULL101*gamtildeUU01 + GamtildeLLL101*GamtildeULL102*gamtildeUU02 + GamtildeLLL111*GamtildeULL100*gamtildeUU10 + GamtildeLLL111*GamtildeULL101*gamtildeUU11 + GamtildeLLL111*GamtildeULL102*gamtildeUU12 + GamtildeLLL121*GamtildeULL100*gamtildeUU20 + GamtildeLLL121*GamtildeULL101*gamtildeUU21 + GamtildeLLL121*GamtildeULL102*gamtildeUU22 + GamtildeLLL201*GamtildeULL200*gamtildeUU00 + GamtildeLLL201*GamtildeULL201*gamtildeUU01 + GamtildeLLL201*GamtildeULL202*gamtildeUU02 + GamtildeLLL211*GamtildeULL200*gamtildeUU10 + GamtildeLLL211*GamtildeULL201*gamtildeUU11 + GamtildeLLL211*GamtildeULL202*gamtildeUU12 + GamtildeLLL221*GamtildeULL200*gamtildeUU20 + GamtildeLLL221*GamtildeULL201*gamtildeUU21 + GamtildeLLL221*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL0100*gamtildeUU00 - 0.5*ddgamtildeLL0101*gamtildeUU01 - 0.5*ddgamtildeLL0102*gamtildeUU02 - 0.5*ddgamtildeLL0110*gamtildeUU10 - 0.5*ddgamtildeLL0111*gamtildeUU11 - 0.5*ddgamtildeLL0112*gamtildeUU12 - 0.5*ddgamtildeLL0120*gamtildeUU20 - 0.5*ddgamtildeLL0121*gamtildeUU21 - 0.5*ddgamtildeLL0122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL02 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL002*GamtildeULL000*gamtildeUU00 + GamtildeLLL002*GamtildeULL001*gamtildeUU01 + GamtildeLLL002*GamtildeULL002*gamtildeUU02 + GamtildeLLL012*GamtildeULL000*gamtildeUU10 + GamtildeLLL012*GamtildeULL001*gamtildeUU11 + GamtildeLLL012*GamtildeULL002*gamtildeUU12 + GamtildeLLL022*GamtildeULL000*gamtildeUU20 + GamtildeLLL022*GamtildeULL001*gamtildeUU21 + GamtildeLLL022*GamtildeULL002*gamtildeUU22 + GamtildeLLL102*GamtildeULL100*gamtildeUU00 + GamtildeLLL102*GamtildeULL101*gamtildeUU01 + GamtildeLLL102*GamtildeULL102*gamtildeUU02 + GamtildeLLL112*GamtildeULL100*gamtildeUU10 + GamtildeLLL112*GamtildeULL101*gamtildeUU11 + GamtildeLLL112*GamtildeULL102*gamtildeUU12 + GamtildeLLL122*GamtildeULL100*gamtildeUU20 + GamtildeLLL122*GamtildeULL101*gamtildeUU21 + GamtildeLLL122*GamtildeULL102*gamtildeUU22 + GamtildeLLL202*GamtildeULL200*gamtildeUU00 + GamtildeLLL202*GamtildeULL201*gamtildeUU01 + GamtildeLLL202*GamtildeULL202*gamtildeUU02 + GamtildeLLL212*GamtildeULL200*gamtildeUU10 + GamtildeLLL212*GamtildeULL201*gamtildeUU11 + GamtildeLLL212*GamtildeULL202*gamtildeUU12 + GamtildeLLL222*GamtildeULL200*gamtildeUU20 + GamtildeLLL222*GamtildeULL201*gamtildeUU21 + GamtildeLLL222*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL0200*gamtildeUU00 - 0.5*ddgamtildeLL0201*gamtildeUU01 - 0.5*ddgamtildeLL0202*gamtildeUU02 - 0.5*ddgamtildeLL0210*gamtildeUU10 - 0.5*ddgamtildeLL0211*gamtildeUU11 - 0.5*ddgamtildeLL0212*gamtildeUU12 - 0.5*ddgamtildeLL0220*gamtildeUU20 - 0.5*ddgamtildeLL0221*gamtildeUU21 - 0.5*ddgamtildeLL0222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL10 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL000*GamtildeULL010*gamtildeUU00 + GamtildeLLL000*GamtildeULL011*gamtildeUU01 + GamtildeLLL000*GamtildeULL012*gamtildeUU02 + GamtildeLLL010*GamtildeULL010*gamtildeUU10 + GamtildeLLL010*GamtildeULL011*gamtildeUU11 + GamtildeLLL010*GamtildeULL012*gamtildeUU12 + GamtildeLLL020*GamtildeULL010*gamtildeUU20 + GamtildeLLL020*GamtildeULL011*gamtildeUU21 + GamtildeLLL020*GamtildeULL012*gamtildeUU22 + GamtildeLLL100*GamtildeULL110*gamtildeUU00 + GamtildeLLL100*GamtildeULL111*gamtildeUU01 + GamtildeLLL100*GamtildeULL112*gamtildeUU02 + GamtildeLLL110*GamtildeULL110*gamtildeUU10 + GamtildeLLL110*GamtildeULL111*gamtildeUU11 + GamtildeLLL110*GamtildeULL112*gamtildeUU12 + GamtildeLLL120*GamtildeULL110*gamtildeUU20 + GamtildeLLL120*GamtildeULL111*gamtildeUU21 + GamtildeLLL120*GamtildeULL112*gamtildeUU22 + GamtildeLLL200*GamtildeULL210*gamtildeUU00 + GamtildeLLL200*GamtildeULL211*gamtildeUU01 + GamtildeLLL200*GamtildeULL212*gamtildeUU02 + GamtildeLLL210*GamtildeULL210*gamtildeUU10 + GamtildeLLL210*GamtildeULL211*gamtildeUU11 + GamtildeLLL210*GamtildeULL212*gamtildeUU12 + GamtildeLLL220*GamtildeULL210*gamtildeUU20 + GamtildeLLL220*GamtildeULL211*gamtildeUU21 + GamtildeLLL220*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL1000*gamtildeUU00 - 0.5*ddgamtildeLL1001*gamtildeUU01 - 0.5*ddgamtildeLL1002*gamtildeUU02 - 0.5*ddgamtildeLL1010*gamtildeUU10 - 0.5*ddgamtildeLL1011*gamtildeUU11 - 0.5*ddgamtildeLL1012*gamtildeUU12 - 0.5*ddgamtildeLL1020*gamtildeUU20 - 0.5*ddgamtildeLL1021*gamtildeUU21 - 0.5*ddgamtildeLL1022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL11 = 1.0*GamtildeDU0*GamtildeLLL110 + 1.0*GamtildeDU1*GamtildeLLL111 + 1.0*GamtildeDU2*GamtildeLLL112 + GamtildeLLL001*GamtildeULL010*gamtildeUU00 + GamtildeLLL001*GamtildeULL011*gamtildeUU01 + GamtildeLLL001*GamtildeULL012*gamtildeUU02 + GamtildeLLL011*GamtildeULL010*gamtildeUU10 + GamtildeLLL011*GamtildeULL011*gamtildeUU11 + GamtildeLLL011*GamtildeULL012*gamtildeUU12 + GamtildeLLL021*GamtildeULL010*gamtildeUU20 + GamtildeLLL021*GamtildeULL011*gamtildeUU21 + GamtildeLLL021*GamtildeULL012*gamtildeUU22 + 2*GamtildeLLL100*GamtildeULL001*gamtildeUU00 + 2*GamtildeLLL100*GamtildeULL011*gamtildeUU10 + 2*GamtildeLLL100*GamtildeULL021*gamtildeUU20 + 2*GamtildeLLL101*GamtildeULL001*gamtildeUU01 + 2*GamtildeLLL101*GamtildeULL011*gamtildeUU11 + 2*GamtildeLLL101*GamtildeULL021*gamtildeUU21 + GamtildeLLL101*GamtildeULL110*gamtildeUU00 + GamtildeLLL101*GamtildeULL111*gamtildeUU01 + GamtildeLLL101*GamtildeULL112*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL001*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL011*gamtildeUU12 + 2*GamtildeLLL102*GamtildeULL021*gamtildeUU22 + 2*GamtildeLLL110*GamtildeULL101*gamtildeUU00 + 2*GamtildeLLL110*GamtildeULL111*gamtildeUU10 + 2*GamtildeLLL110*GamtildeULL121*gamtildeUU20 + 2*GamtildeLLL111*GamtildeULL101*gamtildeUU01 + GamtildeLLL111*GamtildeULL110*gamtildeUU10 + 3*GamtildeLLL111*GamtildeULL111*gamtildeUU11 + GamtildeLLL111*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL111*GamtildeULL121*gamtildeUU21 + 2*GamtildeLLL112*GamtildeULL101*gamtildeUU02 + 2*GamtildeLLL112*GamtildeULL111*gamtildeUU12 + 2*GamtildeLLL112*GamtildeULL121*gamtildeUU22 + 2*GamtildeLLL120*GamtildeULL201*gamtildeUU00 + 2*GamtildeLLL120*GamtildeULL211*gamtildeUU10 + 2*GamtildeLLL120*GamtildeULL221*gamtildeUU20 + GamtildeLLL121*GamtildeULL110*gamtildeUU20 + GamtildeLLL121*GamtildeULL111*gamtildeUU21 + GamtildeLLL121*GamtildeULL112*gamtildeUU22 + 2*GamtildeLLL121*GamtildeULL201*gamtildeUU01 + 2*GamtildeLLL121*GamtildeULL211*gamtildeUU11 + 2*GamtildeLLL121*GamtildeULL221*gamtildeUU21 + 2*GamtildeLLL122*GamtildeULL201*gamtildeUU02 + 2*GamtildeLLL122*GamtildeULL211*gamtildeUU12 + 2*GamtildeLLL122*GamtildeULL221*gamtildeUU22 + GamtildeLLL201*GamtildeULL210*gamtildeUU00 + GamtildeLLL201*GamtildeULL211*gamtildeUU01 + GamtildeLLL201*GamtildeULL212*gamtildeUU02 + GamtildeLLL211*GamtildeULL210*gamtildeUU10 + GamtildeLLL211*GamtildeULL211*gamtildeUU11 + GamtildeLLL211*GamtildeULL212*gamtildeUU12 + GamtildeLLL221*GamtildeULL210*gamtildeUU20 + GamtildeLLL221*GamtildeULL211*gamtildeUU21 + GamtildeLLL221*GamtildeULL212*gamtildeUU22 + 1.0*dGamtildeU01*gamtildeLL01 + 1.0*dGamtildeU11*gamtildeLL11 + 1.0*dGamtildeU21*gamtildeLL21 - 0.5*ddgamtildeLL1100*gamtildeUU00 - 0.5*ddgamtildeLL1101*gamtildeUU01 - 0.5*ddgamtildeLL1102*gamtildeUU02 - 0.5*ddgamtildeLL1110*gamtildeUU10 - 0.5*ddgamtildeLL1111*gamtildeUU11 - 0.5*ddgamtildeLL1112*gamtildeUU12 - 0.5*ddgamtildeLL1120*gamtildeUU20 - 0.5*ddgamtildeLL1121*gamtildeUU21 - 0.5*ddgamtildeLL1122*gamtildeUU22;
        amrex::Real RtildeLL12 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL002*GamtildeULL010*gamtildeUU00 + GamtildeLLL002*GamtildeULL011*gamtildeUU01 + GamtildeLLL002*GamtildeULL012*gamtildeUU02 + GamtildeLLL012*GamtildeULL010*gamtildeUU10 + GamtildeLLL012*GamtildeULL011*gamtildeUU11 + GamtildeLLL012*GamtildeULL012*gamtildeUU12 + GamtildeLLL022*GamtildeULL010*gamtildeUU20 + GamtildeLLL022*GamtildeULL011*gamtildeUU21 + GamtildeLLL022*GamtildeULL012*gamtildeUU22 + GamtildeLLL102*GamtildeULL110*gamtildeUU00 + GamtildeLLL102*GamtildeULL111*gamtildeUU01 + GamtildeLLL102*GamtildeULL112*gamtildeUU02 + GamtildeLLL112*GamtildeULL110*gamtildeUU10 + GamtildeLLL112*GamtildeULL111*gamtildeUU11 + GamtildeLLL112*GamtildeULL112*gamtildeUU12 + GamtildeLLL122*GamtildeULL110*gamtildeUU20 + GamtildeLLL122*GamtildeULL111*gamtildeUU21 + GamtildeLLL122*GamtildeULL112*gamtildeUU22 + GamtildeLLL202*GamtildeULL210*gamtildeUU00 + GamtildeLLL202*GamtildeULL211*gamtildeUU01 + GamtildeLLL202*GamtildeULL212*gamtildeUU02 + GamtildeLLL212*GamtildeULL210*gamtildeUU10 + GamtildeLLL212*GamtildeULL211*gamtildeUU11 + GamtildeLLL212*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL210*gamtildeUU20 + GamtildeLLL222*GamtildeULL211*gamtildeUU21 + GamtildeLLL222*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL1200*gamtildeUU00 - 0.5*ddgamtildeLL1201*gamtildeUU01 - 0.5*ddgamtildeLL1202*gamtildeUU02 - 0.5*ddgamtildeLL1210*gamtildeUU10 - 0.5*ddgamtildeLL1211*gamtildeUU11 - 0.5*ddgamtildeLL1212*gamtildeUU12 - 0.5*ddgamtildeLL1220*gamtildeUU20 - 0.5*ddgamtildeLL1221*gamtildeUU21 - 0.5*ddgamtildeLL1222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL20 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL000*GamtildeULL020*gamtildeUU00 + GamtildeLLL000*GamtildeULL021*gamtildeUU01 + GamtildeLLL000*GamtildeULL022*gamtildeUU02 + GamtildeLLL010*GamtildeULL020*gamtildeUU10 + GamtildeLLL010*GamtildeULL021*gamtildeUU11 + GamtildeLLL010*GamtildeULL022*gamtildeUU12 + GamtildeLLL020*GamtildeULL020*gamtildeUU20 + GamtildeLLL020*GamtildeULL021*gamtildeUU21 + GamtildeLLL020*GamtildeULL022*gamtildeUU22 + GamtildeLLL100*GamtildeULL120*gamtildeUU00 + GamtildeLLL100*GamtildeULL121*gamtildeUU01 + GamtildeLLL100*GamtildeULL122*gamtildeUU02 + GamtildeLLL110*GamtildeULL120*gamtildeUU10 + GamtildeLLL110*GamtildeULL121*gamtildeUU11 + GamtildeLLL110*GamtildeULL122*gamtildeUU12 + GamtildeLLL120*GamtildeULL120*gamtildeUU20 + GamtildeLLL120*GamtildeULL121*gamtildeUU21 + GamtildeLLL120*GamtildeULL122*gamtildeUU22 + GamtildeLLL200*GamtildeULL220*gamtildeUU00 + GamtildeLLL200*GamtildeULL221*gamtildeUU01 + GamtildeLLL200*GamtildeULL222*gamtildeUU02 + GamtildeLLL210*GamtildeULL220*gamtildeUU10 + GamtildeLLL210*GamtildeULL221*gamtildeUU11 + GamtildeLLL210*GamtildeULL222*gamtildeUU12 + GamtildeLLL220*GamtildeULL220*gamtildeUU20 + GamtildeLLL220*GamtildeULL221*gamtildeUU21 + GamtildeLLL220*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL2000*gamtildeUU00 - 0.5*ddgamtildeLL2001*gamtildeUU01 - 0.5*ddgamtildeLL2002*gamtildeUU02 - 0.5*ddgamtildeLL2010*gamtildeUU10 - 0.5*ddgamtildeLL2011*gamtildeUU11 - 0.5*ddgamtildeLL2012*gamtildeUU12 - 0.5*ddgamtildeLL2020*gamtildeUU20 - 0.5*ddgamtildeLL2021*gamtildeUU21 - 0.5*ddgamtildeLL2022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL21 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL001*GamtildeULL020*gamtildeUU00 + GamtildeLLL001*GamtildeULL021*gamtildeUU01 + GamtildeLLL001*GamtildeULL022*gamtildeUU02 + GamtildeLLL011*GamtildeULL020*gamtildeUU10 + GamtildeLLL011*GamtildeULL021*gamtildeUU11 + GamtildeLLL011*GamtildeULL022*gamtildeUU12 + GamtildeLLL021*GamtildeULL020*gamtildeUU20 + GamtildeLLL021*GamtildeULL021*gamtildeUU21 + GamtildeLLL021*GamtildeULL022*gamtildeUU22 + GamtildeLLL101*GamtildeULL120*gamtildeUU00 + GamtildeLLL101*GamtildeULL121*gamtildeUU01 + GamtildeLLL101*GamtildeULL122*gamtildeUU02 + GamtildeLLL111*GamtildeULL120*gamtildeUU10 + GamtildeLLL111*GamtildeULL121*gamtildeUU11 + GamtildeLLL111*GamtildeULL122*gamtildeUU12 + GamtildeLLL121*GamtildeULL120*gamtildeUU20 + GamtildeLLL121*GamtildeULL121*gamtildeUU21 + GamtildeLLL121*GamtildeULL122*gamtildeUU22 + GamtildeLLL201*GamtildeULL220*gamtildeUU00 + GamtildeLLL201*GamtildeULL221*gamtildeUU01 + GamtildeLLL201*GamtildeULL222*gamtildeUU02 + GamtildeLLL211*GamtildeULL220*gamtildeUU10 + GamtildeLLL211*GamtildeULL221*gamtildeUU11 + GamtildeLLL211*GamtildeULL222*gamtildeUU12 + GamtildeLLL221*GamtildeULL220*gamtildeUU20 + GamtildeLLL221*GamtildeULL221*gamtildeUU21 + GamtildeLLL221*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL2100*gamtildeUU00 - 0.5*ddgamtildeLL2101*gamtildeUU01 - 0.5*ddgamtildeLL2102*gamtildeUU02 - 0.5*ddgamtildeLL2110*gamtildeUU10 - 0.5*ddgamtildeLL2111*gamtildeUU11 - 0.5*ddgamtildeLL2112*gamtildeUU12 - 0.5*ddgamtildeLL2120*gamtildeUU20 - 0.5*ddgamtildeLL2121*gamtildeUU21 - 0.5*ddgamtildeLL2122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL22 = 1.0*GamtildeDU0*GamtildeLLL220 + 1.0*GamtildeDU1*GamtildeLLL221 + 1.0*GamtildeDU2*GamtildeLLL222 + GamtildeLLL002*GamtildeULL020*gamtildeUU00 + GamtildeLLL002*GamtildeULL021*gamtildeUU01 + GamtildeLLL002*GamtildeULL022*gamtildeUU02 + GamtildeLLL012*GamtildeULL020*gamtildeUU10 + GamtildeLLL012*GamtildeULL021*gamtildeUU11 + GamtildeLLL012*GamtildeULL022*gamtildeUU12 + GamtildeLLL022*GamtildeULL020*gamtildeUU20 + GamtildeLLL022*GamtildeULL021*gamtildeUU21 + GamtildeLLL022*GamtildeULL022*gamtildeUU22 + GamtildeLLL102*GamtildeULL120*gamtildeUU00 + GamtildeLLL102*GamtildeULL121*gamtildeUU01 + GamtildeLLL102*GamtildeULL122*gamtildeUU02 + GamtildeLLL112*GamtildeULL120*gamtildeUU10 + GamtildeLLL112*GamtildeULL121*gamtildeUU11 + GamtildeLLL112*GamtildeULL122*gamtildeUU12 + GamtildeLLL122*GamtildeULL120*gamtildeUU20 + GamtildeLLL122*GamtildeULL121*gamtildeUU21 + GamtildeLLL122*GamtildeULL122*gamtildeUU22 + 2*GamtildeLLL200*GamtildeULL002*gamtildeUU00 + 2*GamtildeLLL200*GamtildeULL012*gamtildeUU10 + 2*GamtildeLLL200*GamtildeULL022*gamtildeUU20 + 2*GamtildeLLL201*GamtildeULL002*gamtildeUU01 + 2*GamtildeLLL201*GamtildeULL012*gamtildeUU11 + 2*GamtildeLLL201*GamtildeULL022*gamtildeUU21 + 2*GamtildeLLL202*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL202*GamtildeULL012*gamtildeUU12 + 2*GamtildeLLL202*GamtildeULL022*gamtildeUU22 + GamtildeLLL202*GamtildeULL220*gamtildeUU00 + GamtildeLLL202*GamtildeULL221*gamtildeUU01 + GamtildeLLL202*GamtildeULL222*gamtildeUU02 + 2*GamtildeLLL210*GamtildeULL102*gamtildeUU00 + 2*GamtildeLLL210*GamtildeULL112*gamtildeUU10 + 2*GamtildeLLL210*GamtildeULL122*gamtildeUU20 + 2*GamtildeLLL211*GamtildeULL102*gamtildeUU01 + 2*GamtildeLLL211*GamtildeULL112*gamtildeUU11 + 2*GamtildeLLL211*GamtildeULL122*gamtildeUU21 + 2*GamtildeLLL212*GamtildeULL102*gamtildeUU02 + 2*GamtildeLLL212*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL212*GamtildeULL122*gamtildeUU22 + GamtildeLLL212*GamtildeULL220*gamtildeUU10 + GamtildeLLL212*GamtildeULL221*gamtildeUU11 + GamtildeLLL212*GamtildeULL222*gamtildeUU12 + 2*GamtildeLLL220*GamtildeULL202*gamtildeUU00 + 2*GamtildeLLL220*GamtildeULL212*gamtildeUU10 + 2*GamtildeLLL220*GamtildeULL222*gamtildeUU20 + 2*GamtildeLLL221*GamtildeULL202*gamtildeUU01 + 2*GamtildeLLL221*GamtildeULL212*gamtildeUU11 + 2*GamtildeLLL221*GamtildeULL222*gamtildeUU21 + 2*GamtildeLLL222*GamtildeULL202*gamtildeUU02 + 2*GamtildeLLL222*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL220*gamtildeUU20 + GamtildeLLL222*GamtildeULL221*gamtildeUU21 + 3*GamtildeLLL222*GamtildeULL222*gamtildeUU22 + 1.0*dGamtildeU02*gamtildeLL02 + 1.0*dGamtildeU12*gamtildeLL12 + 1.0*dGamtildeU22*gamtildeLL22 - 0.5*ddgamtildeLL2200*gamtildeUU00 - 0.5*ddgamtildeLL2201*gamtildeUU01 - 0.5*ddgamtildeLL2202*gamtildeUU02 - 0.5*ddgamtildeLL2210*gamtildeUU10 - 0.5*ddgamtildeLL2211*gamtildeUU11 - 0.5*ddgamtildeLL2212*gamtildeUU12 - 0.5*ddgamtildeLL2220*gamtildeUU20 - 0.5*ddgamtildeLL2221*gamtildeUU21 - 0.5*ddgamtildeLL2222*gamtildeUU22;
        amrex::Real DtildeDtildechiLL00 = -GamtildeULL000*dchi0 - GamtildeULL100*dchi1 - GamtildeULL200*dchi2 + ddchi00;
        amrex::Real DtildeDtildechiLL01 = -GamtildeULL001*dchi0 - GamtildeULL101*dchi1 - GamtildeULL201*dchi2 + ddchi01;
        amrex::Real DtildeDtildechiLL02 = -GamtildeULL002*dchi0 - GamtildeULL102*dchi1 - GamtildeULL202*dchi2 + ddchi02;
        amrex::Real DtildeDtildechiLL10 = -GamtildeULL010*dchi0 - GamtildeULL110*dchi1 - GamtildeULL210*dchi2 + ddchi10;
        amrex::Real DtildeDtildechiLL11 = -GamtildeULL011*dchi0 - GamtildeULL111*dchi1 - GamtildeULL211*dchi2 + ddchi11;
        amrex::Real DtildeDtildechiLL12 = -GamtildeULL012*dchi0 - GamtildeULL112*dchi1 - GamtildeULL212*dchi2 + ddchi12;
        amrex::Real DtildeDtildechiLL20 = -GamtildeULL020*dchi0 - GamtildeULL120*dchi1 - GamtildeULL220*dchi2 + ddchi20;
        amrex::Real DtildeDtildechiLL21 = -GamtildeULL021*dchi0 - GamtildeULL121*dchi1 - GamtildeULL221*dchi2 + ddchi21;
        amrex::Real DtildeDtildechiLL22 = -GamtildeULL022*dchi0 - GamtildeULL122*dchi1 - GamtildeULL222*dchi2 + ddchi22;
        amrex::Real TrDtildeDtildechi = DtildeDtildechiLL00*gamtildeUU00 + DtildeDtildechiLL01*gamtildeUU01 + DtildeDtildechiLL02*gamtildeUU02 + DtildeDtildechiLL10*gamtildeUU10 + DtildeDtildechiLL11*gamtildeUU11 + DtildeDtildechiLL12*gamtildeUU12 + DtildeDtildechiLL20*gamtildeUU20 + DtildeDtildechiLL21*gamtildeUU21 + DtildeDtildechiLL22*gamtildeUU22;

        amrex::Real RchiLL00 = 0.5*(DtildeDtildechiLL00 + TrDtildeDtildechi*gamtildeLL00)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL00*gamtildeUU00/std::pow(chi, 2) - 0.25*std::pow(dchi0, 2)/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL00*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL00*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL00*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL00*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL00*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL00*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL00*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL00*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL01 = 0.5*(DtildeDtildechiLL01 + TrDtildeDtildechi*gamtildeLL01)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL01*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL01*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL01*gamtildeUU10/std::pow(chi, 2) - 0.25*dchi0*dchi1/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL01*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL01*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL01*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL01*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL01*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL01*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL02 = 0.5*(DtildeDtildechiLL02 + TrDtildeDtildechi*gamtildeLL02)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL02*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL02*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL02*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL02*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL02*gamtildeUU20/std::pow(chi, 2) - 0.25*dchi0*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL02*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL02*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL02*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL02*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL10 = 0.5*(DtildeDtildechiLL10 + TrDtildeDtildechi*gamtildeLL10)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL10*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL10*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL10*gamtildeUU10/std::pow(chi, 2) - 0.25*dchi0*dchi1/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL10*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL10*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL10*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL10*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL10*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL10*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL11 = 0.5*(DtildeDtildechiLL11 + TrDtildeDtildechi*gamtildeLL11)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL11*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL11*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL11*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL11*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL11*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL11*gamtildeUU11/std::pow(chi, 2) - 0.25*std::pow(dchi1, 2)/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL11*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL11*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL11*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL12 = 0.5*(DtildeDtildechiLL12 + TrDtildeDtildechi*gamtildeLL12)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL12*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL12*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL12*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL12*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL12*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL12*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL12*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL12*gamtildeUU21/std::pow(chi, 2) - 0.25*dchi1*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL12*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL20 = 0.5*(DtildeDtildechiLL20 + TrDtildeDtildechi*gamtildeLL20)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL20*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL20*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL20*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL20*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL20*gamtildeUU20/std::pow(chi, 2) - 0.25*dchi0*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL20*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL20*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL20*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL20*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL21 = 0.5*(DtildeDtildechiLL21 + TrDtildeDtildechi*gamtildeLL21)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL21*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL21*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL21*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL21*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL21*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL21*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL21*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL21*gamtildeUU21/std::pow(chi, 2) - 0.25*dchi1*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL21*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL22 = 0.5*(DtildeDtildechiLL22 + TrDtildeDtildechi*gamtildeLL22)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL22*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL22*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL22*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL22*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL22*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL22*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL22*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL22*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL22*gamtildeUU22/std::pow(chi, 2) - 0.25*std::pow(dchi2, 2)/std::pow(chi, 2);
        amrex::Real RLL00 = RchiLL00 + RtildeLL00;
        amrex::Real RLL01 = RchiLL01 + RtildeLL01;
        amrex::Real RLL02 = RchiLL02 + RtildeLL02;
        amrex::Real RLL10 = RchiLL10 + RtildeLL10;
        amrex::Real RLL11 = RchiLL11 + RtildeLL11;
        amrex::Real RLL12 = RchiLL12 + RtildeLL12;
        amrex::Real RLL20 = RchiLL20 + RtildeLL20;
        amrex::Real RLL21 = RchiLL21 + RtildeLL21;
        amrex::Real RLL22 = RchiLL22 + RtildeLL22;
        amrex::Real Rsclr = RLL00*gamUU00 + RLL01*gamUU01 + RLL02*gamUU02 + RLL10*gamUU10 + RLL11*gamUU11 + RLL12*gamUU12 + RLL20*gamUU20 + RLL21*gamUU21 + RLL22*gamUU22;

        amrex::Real KLL00 = AtildeLL00/chi + 0.33333333333333331*gamLL00*(Khat + 2*theta);
        amrex::Real KLL01 = AtildeLL01/chi + 0.33333333333333331*gamLL01*(Khat + 2*theta);
        amrex::Real KLL02 = AtildeLL02/chi + 0.33333333333333331*gamLL02*(Khat + 2*theta);
        amrex::Real KLL10 = AtildeLL10/chi + 0.33333333333333331*gamLL10*(Khat + 2*theta);
        amrex::Real KLL11 = AtildeLL11/chi + 0.33333333333333331*gamLL11*(Khat + 2*theta);
        amrex::Real KLL12 = AtildeLL12/chi + 0.33333333333333331*gamLL12*(Khat + 2*theta);
        amrex::Real KLL20 = AtildeLL20/chi + 0.33333333333333331*gamLL20*(Khat + 2*theta);
        amrex::Real KLL21 = AtildeLL21/chi + 0.33333333333333331*gamLL21*(Khat + 2*theta);
        amrex::Real KLL22 = AtildeLL22/chi + 0.33333333333333331*gamLL22*(Khat + 2*theta);
        amrex::Real KUU00 = KLL00*std::pow(gamUU00, 2) + KLL01*gamUU00*gamUU01 + KLL02*gamUU00*gamUU02 + KLL10*gamUU00*gamUU01 + KLL11*std::pow(gamUU01, 2) + KLL12*gamUU01*gamUU02 + KLL20*gamUU00*gamUU02 + KLL21*gamUU01*gamUU02 + KLL22*std::pow(gamUU02, 2);
        amrex::Real KUU01 = KLL00*gamUU00*gamUU10 + KLL01*gamUU00*gamUU11 + KLL02*gamUU00*gamUU12 + KLL10*gamUU01*gamUU10 + KLL11*gamUU01*gamUU11 + KLL12*gamUU01*gamUU12 + KLL20*gamUU02*gamUU10 + KLL21*gamUU02*gamUU11 + KLL22*gamUU02*gamUU12;
        amrex::Real KUU02 = KLL00*gamUU00*gamUU20 + KLL01*gamUU00*gamUU21 + KLL02*gamUU00*gamUU22 + KLL10*gamUU01*gamUU20 + KLL11*gamUU01*gamUU21 + KLL12*gamUU01*gamUU22 + KLL20*gamUU02*gamUU20 + KLL21*gamUU02*gamUU21 + KLL22*gamUU02*gamUU22;
        amrex::Real KUU10 = KLL00*gamUU00*gamUU10 + KLL01*gamUU01*gamUU10 + KLL02*gamUU02*gamUU10 + KLL10*gamUU00*gamUU11 + KLL11*gamUU01*gamUU11 + KLL12*gamUU02*gamUU11 + KLL20*gamUU00*gamUU12 + KLL21*gamUU01*gamUU12 + KLL22*gamUU02*gamUU12;
        amrex::Real KUU11 = KLL00*std::pow(gamUU10, 2) + KLL01*gamUU10*gamUU11 + KLL02*gamUU10*gamUU12 + KLL10*gamUU10*gamUU11 + KLL11*std::pow(gamUU11, 2) + KLL12*gamUU11*gamUU12 + KLL20*gamUU10*gamUU12 + KLL21*gamUU11*gamUU12 + KLL22*std::pow(gamUU12, 2);
        amrex::Real KUU12 = KLL00*gamUU10*gamUU20 + KLL01*gamUU10*gamUU21 + KLL02*gamUU10*gamUU22 + KLL10*gamUU11*gamUU20 + KLL11*gamUU11*gamUU21 + KLL12*gamUU11*gamUU22 + KLL20*gamUU12*gamUU20 + KLL21*gamUU12*gamUU21 + KLL22*gamUU12*gamUU22;
        amrex::Real KUU20 = KLL00*gamUU00*gamUU20 + KLL01*gamUU01*gamUU20 + KLL02*gamUU02*gamUU20 + KLL10*gamUU00*gamUU21 + KLL11*gamUU01*gamUU21 + KLL12*gamUU02*gamUU21 + KLL20*gamUU00*gamUU22 + KLL21*gamUU01*gamUU22 + KLL22*gamUU02*gamUU22;
        amrex::Real KUU21 = KLL00*gamUU10*gamUU20 + KLL01*gamUU11*gamUU20 + KLL02*gamUU12*gamUU20 + KLL10*gamUU10*gamUU21 + KLL11*gamUU11*gamUU21 + KLL12*gamUU12*gamUU21 + KLL20*gamUU10*gamUU22 + KLL21*gamUU11*gamUU22 + KLL22*gamUU12*gamUU22;
        amrex::Real KUU22 = KLL00*std::pow(gamUU20, 2) + KLL01*gamUU20*gamUU21 + KLL02*gamUU20*gamUU22 + KLL10*gamUU20*gamUU21 + KLL11*std::pow(gamUU21, 2) + KLL12*gamUU21*gamUU22 + KLL20*gamUU20*gamUU22 + KLL21*gamUU21*gamUU22 + KLL22*std::pow(gamUU22, 2);
        diag(i, j, k, Diag::H) = -KLL00*KUU00 - KLL01*KUU01 - KLL02*KUU02 - KLL10*KUU10 - KLL11*KUU11 - KLL12*KUU12 - KLL20*KUU20 - KLL21*KUU21 - KLL22*KUU22 + Rsclr + std::pow(Khat + 2*theta, 2);

        amrex::Real H = diag(i, j, k, Diag::H);

        amrex::Real InterKLL00 = KLL00 - gamLL00*(Khat + 2*theta);
        amrex::Real InterKLL01 = KLL01 - gamLL01*(Khat + 2*theta);
        amrex::Real InterKLL02 = KLL02 - gamLL02*(Khat + 2*theta);
        amrex::Real InterKLL10 = KLL10 - gamLL10*(Khat + 2*theta);
        amrex::Real InterKLL11 = KLL11 - gamLL11*(Khat + 2*theta);
        amrex::Real InterKLL12 = KLL12 - gamLL12*(Khat + 2*theta);
        amrex::Real InterKLL20 = KLL20 - gamLL20*(Khat + 2*theta);
        amrex::Real InterKLL21 = KLL21 - gamLL21*(Khat + 2*theta);
        amrex::Real InterKLL22 = KLL22 - gamLL22*(Khat + 2*theta);
        amrex::Real dInterKLLL000 = (-InterKLL00*dchi0 + dAtildeLL000 - 0.66666666666666663*dgamtildeLL000*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL00*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL001 = (-InterKLL00*dchi1 + dAtildeLL001 - 0.66666666666666663*dgamtildeLL001*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL00*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL002 = (-InterKLL00*dchi2 + dAtildeLL002 - 0.66666666666666663*dgamtildeLL002*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL00*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL010 = (-InterKLL01*dchi0 + dAtildeLL010 - 0.66666666666666663*dgamtildeLL010*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL01*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL011 = (-InterKLL01*dchi1 + dAtildeLL011 - 0.66666666666666663*dgamtildeLL011*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL01*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL012 = (-InterKLL01*dchi2 + dAtildeLL012 - 0.66666666666666663*dgamtildeLL012*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL01*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL020 = (-InterKLL02*dchi0 + dAtildeLL020 - 0.66666666666666663*dgamtildeLL020*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL02*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL021 = (-InterKLL02*dchi1 + dAtildeLL021 - 0.66666666666666663*dgamtildeLL021*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL02*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL022 = (-InterKLL02*dchi2 + dAtildeLL022 - 0.66666666666666663*dgamtildeLL022*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL02*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL100 = (-InterKLL10*dchi0 + dAtildeLL100 - 0.66666666666666663*dgamtildeLL100*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL10*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL101 = (-InterKLL10*dchi1 + dAtildeLL101 - 0.66666666666666663*dgamtildeLL101*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL10*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL102 = (-InterKLL10*dchi2 + dAtildeLL102 - 0.66666666666666663*dgamtildeLL102*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL10*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL110 = (-InterKLL11*dchi0 + dAtildeLL110 - 0.66666666666666663*dgamtildeLL110*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL11*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL111 = (-InterKLL11*dchi1 + dAtildeLL111 - 0.66666666666666663*dgamtildeLL111*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL11*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL112 = (-InterKLL11*dchi2 + dAtildeLL112 - 0.66666666666666663*dgamtildeLL112*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL11*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL120 = (-InterKLL12*dchi0 + dAtildeLL120 - 0.66666666666666663*dgamtildeLL120*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL12*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL121 = (-InterKLL12*dchi1 + dAtildeLL121 - 0.66666666666666663*dgamtildeLL121*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL12*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL122 = (-InterKLL12*dchi2 + dAtildeLL122 - 0.66666666666666663*dgamtildeLL122*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL12*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL200 = (-InterKLL20*dchi0 + dAtildeLL200 - 0.66666666666666663*dgamtildeLL200*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL20*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL201 = (-InterKLL20*dchi1 + dAtildeLL201 - 0.66666666666666663*dgamtildeLL201*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL20*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL202 = (-InterKLL20*dchi2 + dAtildeLL202 - 0.66666666666666663*dgamtildeLL202*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL20*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL210 = (-InterKLL21*dchi0 + dAtildeLL210 - 0.66666666666666663*dgamtildeLL210*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL21*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL211 = (-InterKLL21*dchi1 + dAtildeLL211 - 0.66666666666666663*dgamtildeLL211*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL21*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL212 = (-InterKLL21*dchi2 + dAtildeLL212 - 0.66666666666666663*dgamtildeLL212*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL21*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real dInterKLLL220 = (-InterKLL22*dchi0 + dAtildeLL220 - 0.66666666666666663*dgamtildeLL220*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL22*(dKhat0 + 2*dtheta0))/chi;
        amrex::Real dInterKLLL221 = (-InterKLL22*dchi1 + dAtildeLL221 - 0.66666666666666663*dgamtildeLL221*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL22*(dKhat1 + 2*dtheta1))/chi;
        amrex::Real dInterKLLL222 = (-InterKLL22*dchi2 + dAtildeLL222 - 0.66666666666666663*dgamtildeLL222*(Khat + 2*theta) - 0.66666666666666663*gamtildeLL22*(dKhat2 + 2*dtheta2))/chi;
        amrex::Real DInterKL0 = -2*GamULL000*InterKLL00*gamUU00 - 2*GamULL001*InterKLL00*gamUU01 - 2*GamULL002*InterKLL00*gamUU02 + dInterKLLL000*gamUU00 + dInterKLLL001*gamUU01 + dInterKLLL002*gamUU02 + dInterKLLL010*gamUU10 + dInterKLLL011*gamUU11 + dInterKLLL012*gamUU12 + dInterKLLL020*gamUU20 + dInterKLLL021*gamUU21 + dInterKLLL022*gamUU22 - gamUU00*(GamULL100*InterKLL01 + GamULL100*InterKLL10) - gamUU00*(GamULL200*InterKLL02 + GamULL200*InterKLL20) - gamUU01*(GamULL101*InterKLL01 + GamULL101*InterKLL10) - gamUU01*(GamULL201*InterKLL02 + GamULL201*InterKLL20) - gamUU02*(GamULL102*InterKLL01 + GamULL102*InterKLL10) - gamUU02*(GamULL202*InterKLL02 + GamULL202*InterKLL20) - gamUU10*(GamULL000*InterKLL01 + GamULL010*InterKLL00) - gamUU10*(GamULL100*InterKLL11 + GamULL110*InterKLL01) - gamUU10*(GamULL200*InterKLL21 + GamULL210*InterKLL02) - gamUU11*(GamULL001*InterKLL01 + GamULL011*InterKLL00) - gamUU11*(GamULL101*InterKLL11 + GamULL111*InterKLL01) - gamUU11*(GamULL201*InterKLL21 + GamULL211*InterKLL02) - gamUU12*(GamULL002*InterKLL01 + GamULL012*InterKLL00) - gamUU12*(GamULL102*InterKLL11 + GamULL112*InterKLL01) - gamUU12*(GamULL202*InterKLL21 + GamULL212*InterKLL02) - gamUU20*(GamULL000*InterKLL02 + GamULL020*InterKLL00) - gamUU20*(GamULL100*InterKLL12 + GamULL120*InterKLL01) - gamUU20*(GamULL200*InterKLL22 + GamULL220*InterKLL02) - gamUU21*(GamULL001*InterKLL02 + GamULL021*InterKLL00) - gamUU21*(GamULL101*InterKLL12 + GamULL121*InterKLL01) - gamUU21*(GamULL201*InterKLL22 + GamULL221*InterKLL02) - gamUU22*(GamULL002*InterKLL02 + GamULL022*InterKLL00) - gamUU22*(GamULL102*InterKLL12 + GamULL122*InterKLL01) - gamUU22*(GamULL202*InterKLL22 + GamULL222*InterKLL02);
        amrex::Real DInterKL1 = -2*GamULL110*InterKLL11*gamUU10 - 2*GamULL111*InterKLL11*gamUU11 - 2*GamULL112*InterKLL11*gamUU12 + dInterKLLL100*gamUU00 + dInterKLLL101*gamUU01 + dInterKLLL102*gamUU02 + dInterKLLL110*gamUU10 + dInterKLLL111*gamUU11 + dInterKLLL112*gamUU12 + dInterKLLL120*gamUU20 + dInterKLLL121*gamUU21 + dInterKLLL122*gamUU22 - gamUU00*(GamULL000*InterKLL10 + GamULL010*InterKLL00) - gamUU00*(GamULL100*InterKLL11 + GamULL110*InterKLL10) - gamUU00*(GamULL200*InterKLL12 + GamULL210*InterKLL20) - gamUU01*(GamULL001*InterKLL10 + GamULL011*InterKLL00) - gamUU01*(GamULL101*InterKLL11 + GamULL111*InterKLL10) - gamUU01*(GamULL201*InterKLL12 + GamULL211*InterKLL20) - gamUU02*(GamULL002*InterKLL10 + GamULL012*InterKLL00) - gamUU02*(GamULL102*InterKLL11 + GamULL112*InterKLL10) - gamUU02*(GamULL202*InterKLL12 + GamULL212*InterKLL20) - gamUU10*(GamULL010*InterKLL01 + GamULL010*InterKLL10) - gamUU10*(GamULL210*InterKLL12 + GamULL210*InterKLL21) - gamUU11*(GamULL011*InterKLL01 + GamULL011*InterKLL10) - gamUU11*(GamULL211*InterKLL12 + GamULL211*InterKLL21) - gamUU12*(GamULL012*InterKLL01 + GamULL012*InterKLL10) - gamUU12*(GamULL212*InterKLL12 + GamULL212*InterKLL21) - gamUU20*(GamULL010*InterKLL02 + GamULL020*InterKLL10) - gamUU20*(GamULL110*InterKLL12 + GamULL120*InterKLL11) - gamUU20*(GamULL210*InterKLL22 + GamULL220*InterKLL12) - gamUU21*(GamULL011*InterKLL02 + GamULL021*InterKLL10) - gamUU21*(GamULL111*InterKLL12 + GamULL121*InterKLL11) - gamUU21*(GamULL211*InterKLL22 + GamULL221*InterKLL12) - gamUU22*(GamULL012*InterKLL02 + GamULL022*InterKLL10) - gamUU22*(GamULL112*InterKLL12 + GamULL122*InterKLL11) - gamUU22*(GamULL212*InterKLL22 + GamULL222*InterKLL12);
        amrex::Real DInterKL2 = -2*GamULL220*InterKLL22*gamUU20 - 2*GamULL221*InterKLL22*gamUU21 - 2*GamULL222*InterKLL22*gamUU22 + dInterKLLL200*gamUU00 + dInterKLLL201*gamUU01 + dInterKLLL202*gamUU02 + dInterKLLL210*gamUU10 + dInterKLLL211*gamUU11 + dInterKLLL212*gamUU12 + dInterKLLL220*gamUU20 + dInterKLLL221*gamUU21 + dInterKLLL222*gamUU22 - gamUU00*(GamULL000*InterKLL20 + GamULL020*InterKLL00) - gamUU00*(GamULL100*InterKLL21 + GamULL120*InterKLL10) - gamUU00*(GamULL200*InterKLL22 + GamULL220*InterKLL20) - gamUU01*(GamULL001*InterKLL20 + GamULL021*InterKLL00) - gamUU01*(GamULL101*InterKLL21 + GamULL121*InterKLL10) - gamUU01*(GamULL201*InterKLL22 + GamULL221*InterKLL20) - gamUU02*(GamULL002*InterKLL20 + GamULL022*InterKLL00) - gamUU02*(GamULL102*InterKLL21 + GamULL122*InterKLL10) - gamUU02*(GamULL202*InterKLL22 + GamULL222*InterKLL20) - gamUU10*(GamULL010*InterKLL20 + GamULL020*InterKLL01) - gamUU10*(GamULL110*InterKLL21 + GamULL120*InterKLL11) - gamUU10*(GamULL210*InterKLL22 + GamULL220*InterKLL21) - gamUU11*(GamULL011*InterKLL20 + GamULL021*InterKLL01) - gamUU11*(GamULL111*InterKLL21 + GamULL121*InterKLL11) - gamUU11*(GamULL211*InterKLL22 + GamULL221*InterKLL21) - gamUU12*(GamULL012*InterKLL20 + GamULL022*InterKLL01) - gamUU12*(GamULL112*InterKLL21 + GamULL122*InterKLL11) - gamUU12*(GamULL212*InterKLL22 + GamULL222*InterKLL21) - gamUU20*(GamULL020*InterKLL02 + GamULL020*InterKLL20) - gamUU20*(GamULL120*InterKLL12 + GamULL120*InterKLL21) - gamUU21*(GamULL021*InterKLL02 + GamULL021*InterKLL20) - gamUU21*(GamULL121*InterKLL12 + GamULL121*InterKLL21) - gamUU22*(GamULL022*InterKLL02 + GamULL022*InterKLL20) - gamUU22*(GamULL122*InterKLL12 + GamULL122*InterKLL21);
        diag(i, j, k, Diag::ML0) = DInterKL0;

        diag(i, j, k, Diag::ML1) = DInterKL1;

        diag(i, j, k, Diag::ML2) = DInterKL2;

        amrex::Real ML0 = diag(i, j, k, Diag::ML0);
        amrex::Real ML1 = diag(i, j, k, Diag::ML1);
        amrex::Real ML2 = diag(i, j, k, Diag::ML2);
        amrex::Real MU0 = ML0*gamUU00 + ML1*gamUU01 + ML2*gamUU02;
        amrex::Real MU1 = ML0*gamUU10 + ML1*gamUU11 + ML2*gamUU12;
        amrex::Real MU2 = ML0*gamUU20 + ML1*gamUU21 + ML2*gamUU22;
        amrex::Real Csqr = std::pow(H, 2) + ML0*MU0 + ML1*MU1 + ML2*MU2 + std::pow(theta, 2);

        diag(i, j, k, Diag::C) = std::sqrt(Csqr);

        diag(i, j, k, Diag::Ksclr) = Khat + 2*theta;

}
#endif