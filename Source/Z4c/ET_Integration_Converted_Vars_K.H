#ifndef ET_INTEGRATION_CONVERTED_VARS_K_H
#define ET_INTEGRATION_CONVERTED_VARS_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
fill_conv_vars_fab(int i, int j, int k, 
        amrex::Array4<const amrex::Real> const& state_fab,
        amrex::Array4<amrex::Real> const& rhs_fab,
        amrex::Array4<amrex::Real> const& conv_vars_arr,
        const amrex::Real time,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtildeLL00 = state_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLL01 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL02 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL10 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL11 = state_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLL12 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL20 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL21 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL22 = state_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real betaU0 = state_fab(i, j, k, Idx::betaU0);
        amrex::Real betaU1 = state_fab(i, j, k, Idx::betaU1);
        amrex::Real betaU2 = state_fab(i, j, k, Idx::betaU2);
        amrex::Real dchi0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dchi1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dchi2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];
        amrex::Real dgamtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real dgamtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real dgamtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL00))/dx[2];
        amrex::Real dgamtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real dgamtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real dgamtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL11))/dx[2];
        amrex::Real dgamtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dgamtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real dgamtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL22))/dx[2];
        amrex::Real dalpha0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
        amrex::Real dalpha1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
        amrex::Real dalpha2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];
        amrex::Real dbetaU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU0))/dx[0];
        amrex::Real dbetaU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU0))/dx[1];
        amrex::Real dbetaU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU0))/dx[2];
        amrex::Real dbetaU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU1))/dx[0];
        amrex::Real dbetaU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU1))/dx[1];
        amrex::Real dbetaU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU1))/dx[2];
        amrex::Real dbetaU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU2))/dx[0];
        amrex::Real dbetaU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU2))/dx[1];
        amrex::Real dbetaU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU2))/dx[2];
        amrex::Real chidot = rhs_fab(i, j, k, Idx::chi);

        amrex::Real gamtildeLLdot00 = rhs_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLLdot01 = rhs_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLLdot02 = rhs_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLLdot10 = rhs_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLLdot11 = rhs_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLLdot12 = rhs_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLLdot20 = rhs_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLLdot21 = rhs_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLLdot22 = rhs_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real alphadot = rhs_fab(i, j, k, Idx::alpha);

        amrex::Real betaUdot0 = rhs_fab(i, j, k, Idx::betaU0);
        amrex::Real betaUdot1 = rhs_fab(i, j, k, Idx::betaU1);
        amrex::Real betaUdot2 = rhs_fab(i, j, k, Idx::betaU2);
        amrex::Real gamtildeUU00 = (gamtildeLL11*gamtildeLL22 - gamtildeLL12*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU01 = (-gamtildeLL01*gamtildeLL22 + gamtildeLL02*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU02 = (gamtildeLL01*gamtildeLL12 - gamtildeLL02*gamtildeLL11)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU10 = (-gamtildeLL10*gamtildeLL22 + gamtildeLL12*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU11 = gamtildeLL00*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU12 = -gamtildeLL00*(gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU20 = (gamtildeLL10*gamtildeLL21 - gamtildeLL11*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU21 = -gamtildeLL00*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU22 = gamtildeLL00*(gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamLL00 = gamtildeLL00/chi;
        amrex::Real gamLL01 = gamtildeLL01/chi;
        amrex::Real gamLL02 = gamtildeLL02/chi;
        amrex::Real gamLL10 = gamtildeLL10/chi;
        amrex::Real gamLL11 = gamtildeLL11/chi;
        amrex::Real gamLL12 = gamtildeLL12/chi;
        amrex::Real gamLL20 = gamtildeLL20/chi;
        amrex::Real gamLL21 = gamtildeLL21/chi;
        amrex::Real gamLL22 = gamtildeLL22/chi;
        amrex::Real gamUU00 = chi*gamtildeUU00;
        amrex::Real gamUU01 = chi*gamtildeUU01;
        amrex::Real gamUU02 = chi*gamtildeUU02;
        amrex::Real gamUU10 = chi*gamtildeUU10;
        amrex::Real gamUU11 = chi*gamtildeUU11;
        amrex::Real gamUU12 = chi*gamtildeUU12;
        amrex::Real gamUU20 = chi*gamtildeUU20;
        amrex::Real gamUU21 = chi*gamtildeUU21;
        amrex::Real gamUU22 = chi*gamtildeUU22;
        amrex::Real betaL0 = betaU2*gamLL02;
        amrex::Real betaL1 = betaU2*gamLL12;
        amrex::Real betaL2 = betaU2*gamLL22;
        amrex::Real gLL00 = -std::pow(alpha, 2) + std::pow(betaU0, 2)*gamLL00 + betaU0*betaU1*gamLL01 + betaU0*betaU1*gamLL10 + betaU0*betaU2*gamLL02 + betaU0*betaU2*gamLL20 + std::pow(betaU1, 2)*gamLL11 + betaU1*betaU2*gamLL12 + betaU1*betaU2*gamLL21 + std::pow(betaU2, 2)*gamLL22;
        amrex::Real gLL01 = betaL0;
        amrex::Real gLL02 = betaL1;
        amrex::Real gLL03 = betaL2;
        amrex::Real gLL10 = betaL0;
        amrex::Real gLL11 = gamLL00;
        amrex::Real gLL12 = gamLL01;
        amrex::Real gLL13 = gamLL02;
        amrex::Real gLL20 = betaL1;
        amrex::Real gLL21 = gamLL10;
        amrex::Real gLL22 = gamLL11;
        amrex::Real gLL23 = gamLL12;
        amrex::Real gLL30 = betaL2;
        amrex::Real gLL31 = gamLL20;
        amrex::Real gLL32 = gamLL21;
        amrex::Real gLL33 = gamLL22;
        amrex::Real gUU00 = -1/std::pow(alpha, 2);
        amrex::Real gUU01 = betaU0/std::pow(alpha, 2);
        amrex::Real gUU02 = betaU1/std::pow(alpha, 2);
        amrex::Real gUU03 = betaU2/std::pow(alpha, 2);
        amrex::Real gUU10 = betaU0/std::pow(alpha, 2);
        amrex::Real gUU11 = gamUU00 - std::pow(betaU0, 2)/std::pow(alpha, 2);
        amrex::Real gUU12 = gamUU01 - betaU0*betaU1/std::pow(alpha, 2);
        amrex::Real gUU13 = gamUU02 - betaU0*betaU2/std::pow(alpha, 2);
        amrex::Real gUU20 = betaU1/std::pow(alpha, 2);
        amrex::Real gUU21 = gamUU10 - betaU0*betaU1/std::pow(alpha, 2);
        amrex::Real gUU22 = gamUU11 - std::pow(betaU1, 2)/std::pow(alpha, 2);
        amrex::Real gUU23 = gamUU12 - betaU1*betaU2/std::pow(alpha, 2);
        amrex::Real gUU30 = betaU2/std::pow(alpha, 2);
        amrex::Real gUU31 = gamUU20 - betaU0*betaU2/std::pow(alpha, 2);
        amrex::Real gUU32 = gamUU21 - betaU1*betaU2/std::pow(alpha, 2);
        amrex::Real gUU33 = gamUU22 - std::pow(betaU2, 2)/std::pow(alpha, 2);
        amrex::Real gamLLdot00 = gamtildeLLdot00/chi - chidot*gamtildeLL00/std::pow(chi, 2);
        amrex::Real gamLLdot01 = gamtildeLLdot01/chi - chidot*gamtildeLL01/std::pow(chi, 2);
        amrex::Real gamLLdot02 = gamtildeLLdot02/chi - chidot*gamtildeLL02/std::pow(chi, 2);
        amrex::Real gamLLdot10 = gamtildeLLdot10/chi - chidot*gamtildeLL10/std::pow(chi, 2);
        amrex::Real gamLLdot11 = gamtildeLLdot11/chi - chidot*gamtildeLL11/std::pow(chi, 2);
        amrex::Real gamLLdot12 = gamtildeLLdot12/chi - chidot*gamtildeLL12/std::pow(chi, 2);
        amrex::Real gamLLdot20 = gamtildeLLdot20/chi - chidot*gamtildeLL20/std::pow(chi, 2);
        amrex::Real gamLLdot21 = gamtildeLLdot21/chi - chidot*gamtildeLL21/std::pow(chi, 2);
        amrex::Real gamLLdot22 = gamtildeLLdot22/chi - chidot*gamtildeLL22/std::pow(chi, 2);
        amrex::Real betaLdot0 = betaU2*gamLLdot02 + betaUdot2*gamLL02;
        amrex::Real betaLdot1 = betaU2*gamLLdot12 + betaUdot2*gamLL12;
        amrex::Real betaLdot2 = betaU2*gamLLdot22 + betaUdot2*gamLL22;
        amrex::Real gMMdot00 = -2*alpha*alphadot + betaL0*betaUdot0 + betaL1*betaUdot1 + betaL2*betaUdot2 + betaLdot0*betaU0 + betaLdot1*betaU1 + betaLdot2*betaU2;
        amrex::Real gMMdot01 = betaLdot0;
        amrex::Real gMMdot02 = betaLdot1;
        amrex::Real gMMdot03 = betaLdot2;
        amrex::Real gMMdot10 = betaLdot0;
        amrex::Real gMMdot11 = gamLLdot00;
        amrex::Real gMMdot12 = gamLLdot01;
        amrex::Real gMMdot13 = gamLLdot02;
        amrex::Real gMMdot20 = betaLdot1;
        amrex::Real gMMdot21 = gamLLdot10;
        amrex::Real gMMdot22 = gamLLdot11;
        amrex::Real gMMdot23 = gamLLdot12;
        amrex::Real gMMdot30 = betaLdot2;
        amrex::Real gMMdot31 = gamLLdot20;
        amrex::Real gMMdot32 = gamLLdot21;
        amrex::Real gMMdot33 = gamLLdot22;
        amrex::Real DgamLLL000 = dgamtildeLL000/chi - dchi0*gamtildeLL00/std::pow(chi, 2);
        amrex::Real DgamLLL001 = dgamtildeLL001/chi - dchi1*gamtildeLL00/std::pow(chi, 2);
        amrex::Real DgamLLL002 = dgamtildeLL002/chi - dchi2*gamtildeLL00/std::pow(chi, 2);
        amrex::Real DgamLLL010 = dgamtildeLL010/chi - dchi0*gamtildeLL01/std::pow(chi, 2);
        amrex::Real DgamLLL011 = dgamtildeLL011/chi - dchi1*gamtildeLL01/std::pow(chi, 2);
        amrex::Real DgamLLL012 = dgamtildeLL012/chi - dchi2*gamtildeLL01/std::pow(chi, 2);
        amrex::Real DgamLLL020 = dgamtildeLL020/chi - dchi0*gamtildeLL02/std::pow(chi, 2);
        amrex::Real DgamLLL021 = dgamtildeLL021/chi - dchi1*gamtildeLL02/std::pow(chi, 2);
        amrex::Real DgamLLL022 = dgamtildeLL022/chi - dchi2*gamtildeLL02/std::pow(chi, 2);
        amrex::Real DgamLLL100 = dgamtildeLL100/chi - dchi0*gamtildeLL10/std::pow(chi, 2);
        amrex::Real DgamLLL101 = dgamtildeLL101/chi - dchi1*gamtildeLL10/std::pow(chi, 2);
        amrex::Real DgamLLL102 = dgamtildeLL102/chi - dchi2*gamtildeLL10/std::pow(chi, 2);
        amrex::Real DgamLLL110 = dgamtildeLL110/chi - dchi0*gamtildeLL11/std::pow(chi, 2);
        amrex::Real DgamLLL111 = dgamtildeLL111/chi - dchi1*gamtildeLL11/std::pow(chi, 2);
        amrex::Real DgamLLL112 = dgamtildeLL112/chi - dchi2*gamtildeLL11/std::pow(chi, 2);
        amrex::Real DgamLLL120 = dgamtildeLL120/chi - dchi0*gamtildeLL12/std::pow(chi, 2);
        amrex::Real DgamLLL121 = dgamtildeLL121/chi - dchi1*gamtildeLL12/std::pow(chi, 2);
        amrex::Real DgamLLL122 = dgamtildeLL122/chi - dchi2*gamtildeLL12/std::pow(chi, 2);
        amrex::Real DgamLLL200 = dgamtildeLL200/chi - dchi0*gamtildeLL20/std::pow(chi, 2);
        amrex::Real DgamLLL201 = dgamtildeLL201/chi - dchi1*gamtildeLL20/std::pow(chi, 2);
        amrex::Real DgamLLL202 = dgamtildeLL202/chi - dchi2*gamtildeLL20/std::pow(chi, 2);
        amrex::Real DgamLLL210 = dgamtildeLL210/chi - dchi0*gamtildeLL21/std::pow(chi, 2);
        amrex::Real DgamLLL211 = dgamtildeLL211/chi - dchi1*gamtildeLL21/std::pow(chi, 2);
        amrex::Real DgamLLL212 = dgamtildeLL212/chi - dchi2*gamtildeLL21/std::pow(chi, 2);
        amrex::Real DgamLLL220 = dgamtildeLL220/chi - dchi0*gamtildeLL22/std::pow(chi, 2);
        amrex::Real DgamLLL221 = dgamtildeLL221/chi - dchi1*gamtildeLL22/std::pow(chi, 2);
        amrex::Real DgamLLL222 = dgamtildeLL222/chi - dchi2*gamtildeLL22/std::pow(chi, 2);
        amrex::Real DbetaLL00 = DgamLLL000*betaU0 + DgamLLL010*betaU1 + DgamLLL020*betaU2 + dbetaU00*gamLL00 + dbetaU10*gamLL01 + dbetaU20*gamLL02;
        amrex::Real DbetaLL01 = DgamLLL001*betaU0 + DgamLLL011*betaU1 + DgamLLL021*betaU2 + dbetaU01*gamLL00 + dbetaU11*gamLL01 + dbetaU21*gamLL02;
        amrex::Real DbetaLL02 = DgamLLL002*betaU0 + DgamLLL012*betaU1 + DgamLLL022*betaU2 + dbetaU02*gamLL00 + dbetaU12*gamLL01 + dbetaU22*gamLL02;
        amrex::Real DbetaLL10 = DgamLLL100*betaU0 + DgamLLL110*betaU1 + DgamLLL120*betaU2 + dbetaU00*gamLL10 + dbetaU10*gamLL11 + dbetaU20*gamLL12;
        amrex::Real DbetaLL11 = DgamLLL101*betaU0 + DgamLLL111*betaU1 + DgamLLL121*betaU2 + dbetaU01*gamLL10 + dbetaU11*gamLL11 + dbetaU21*gamLL12;
        amrex::Real DbetaLL12 = DgamLLL102*betaU0 + DgamLLL112*betaU1 + DgamLLL122*betaU2 + dbetaU02*gamLL10 + dbetaU12*gamLL11 + dbetaU22*gamLL12;
        amrex::Real DbetaLL20 = DgamLLL200*betaU0 + DgamLLL210*betaU1 + DgamLLL220*betaU2 + dbetaU00*gamLL20 + dbetaU10*gamLL21 + dbetaU20*gamLL22;
        amrex::Real DbetaLL21 = DgamLLL201*betaU0 + DgamLLL211*betaU1 + DgamLLL221*betaU2 + dbetaU01*gamLL20 + dbetaU11*gamLL21 + dbetaU21*gamLL22;
        amrex::Real DbetaLL22 = DgamLLL202*betaU0 + DgamLLL212*betaU1 + DgamLLL222*betaU2 + dbetaU02*gamLL20 + dbetaU12*gamLL21 + dbetaU22*gamLL22;
        amrex::Real DgTLL00 = DbetaLL00;
        amrex::Real DgTLL01 = DbetaLL01;
        amrex::Real DgTLL02 = DbetaLL02;
        amrex::Real DgTLL10 = DbetaLL10;
        amrex::Real DgTLL11 = DbetaLL11;
        amrex::Real DgTLL12 = DbetaLL12;
        amrex::Real DgTLL20 = DbetaLL20;
        amrex::Real DgTLL21 = DbetaLL21;
        amrex::Real DgTLL22 = DbetaLL22;
        amrex::Real DgLTL00 = DbetaLL00;
        amrex::Real DgLTL01 = DbetaLL01;
        amrex::Real DgLTL02 = DbetaLL02;
        amrex::Real DgLTL10 = DbetaLL10;
        amrex::Real DgLTL11 = DbetaLL11;
        amrex::Real DgLTL12 = DbetaLL12;
        amrex::Real DgLTL20 = DbetaLL20;
        amrex::Real DgLTL21 = DbetaLL21;
        amrex::Real DgLTL22 = DbetaLL22;
        amrex::Real DgLLL000 = DgamLLL000;
        amrex::Real DgLLL001 = DgamLLL001;
        amrex::Real DgLLL002 = DgamLLL002;
        amrex::Real DgLLL010 = DgamLLL010;
        amrex::Real DgLLL011 = DgamLLL011;
        amrex::Real DgLLL012 = DgamLLL012;
        amrex::Real DgLLL020 = DgamLLL020;
        amrex::Real DgLLL021 = DgamLLL021;
        amrex::Real DgLLL022 = DgamLLL022;
        amrex::Real DgLLL100 = DgamLLL100;
        amrex::Real DgLLL101 = DgamLLL101;
        amrex::Real DgLLL102 = DgamLLL102;
        amrex::Real DgLLL110 = DgamLLL110;
        amrex::Real DgLLL111 = DgamLLL111;
        amrex::Real DgLLL112 = DgamLLL112;
        amrex::Real DgLLL120 = DgamLLL120;
        amrex::Real DgLLL121 = DgamLLL121;
        amrex::Real DgLLL122 = DgamLLL122;
        amrex::Real DgLLL200 = DgamLLL200;
        amrex::Real DgLLL201 = DgamLLL201;
        amrex::Real DgLLL202 = DgamLLL202;
        amrex::Real DgLLL210 = DgamLLL210;
        amrex::Real DgLLL211 = DgamLLL211;
        amrex::Real DgLLL212 = DgamLLL212;
        amrex::Real DgLLL220 = DgamLLL220;
        amrex::Real DgLLL221 = DgamLLL221;
        amrex::Real DgLLL222 = DgamLLL222;
        amrex::Real DgMMM000 = gMMdot00;
        amrex::Real DgMMM001 = DbetaLL00*betaU0 + DbetaLL10*betaU1 + DbetaLL20*betaU2 - 2*alpha*dalpha0 + betaL0*dbetaU00 + betaL1*dbetaU10 + betaL2*dbetaU20;
        amrex::Real DgMMM002 = DbetaLL01*betaU0 + DbetaLL11*betaU1 + DbetaLL21*betaU2 - 2*alpha*dalpha1 + betaL0*dbetaU01 + betaL1*dbetaU11 + betaL2*dbetaU21;
        amrex::Real DgMMM003 = DbetaLL02*betaU0 + DbetaLL12*betaU1 + DbetaLL22*betaU2 - 2*alpha*dalpha2 + betaL0*dbetaU02 + betaL1*dbetaU12 + betaL2*dbetaU22;
        amrex::Real DgMMM010 = gMMdot01;
        amrex::Real DgMMM011 = DgTLL00;
        amrex::Real DgMMM012 = DgTLL01;
        amrex::Real DgMMM013 = DgTLL02;
        amrex::Real DgMMM020 = gMMdot02;
        amrex::Real DgMMM021 = DgTLL10;
        amrex::Real DgMMM022 = DgTLL11;
        amrex::Real DgMMM023 = DgTLL12;
        amrex::Real DgMMM030 = gMMdot03;
        amrex::Real DgMMM031 = DgTLL20;
        amrex::Real DgMMM032 = DgTLL21;
        amrex::Real DgMMM033 = DgTLL22;
        amrex::Real DgMMM100 = gMMdot10;
        amrex::Real DgMMM101 = DgLTL00;
        amrex::Real DgMMM102 = DgLTL01;
        amrex::Real DgMMM103 = DgLTL02;
        amrex::Real DgMMM110 = gMMdot11;
        amrex::Real DgMMM111 = DgLLL000;
        amrex::Real DgMMM112 = DgLLL001;
        amrex::Real DgMMM113 = DgLLL002;
        amrex::Real DgMMM120 = gMMdot12;
        amrex::Real DgMMM121 = DgLLL010;
        amrex::Real DgMMM122 = DgLLL011;
        amrex::Real DgMMM123 = DgLLL012;
        amrex::Real DgMMM130 = gMMdot13;
        amrex::Real DgMMM131 = DgLLL020;
        amrex::Real DgMMM132 = DgLLL021;
        amrex::Real DgMMM133 = DgLLL022;
        amrex::Real DgMMM200 = gMMdot20;
        amrex::Real DgMMM201 = DgLTL10;
        amrex::Real DgMMM202 = DgLTL11;
        amrex::Real DgMMM203 = DgLTL12;
        amrex::Real DgMMM210 = gMMdot21;
        amrex::Real DgMMM211 = DgLLL100;
        amrex::Real DgMMM212 = DgLLL101;
        amrex::Real DgMMM213 = DgLLL102;
        amrex::Real DgMMM220 = gMMdot22;
        amrex::Real DgMMM221 = DgLLL110;
        amrex::Real DgMMM222 = DgLLL111;
        amrex::Real DgMMM223 = DgLLL112;
        amrex::Real DgMMM230 = gMMdot23;
        amrex::Real DgMMM231 = DgLLL120;
        amrex::Real DgMMM232 = DgLLL121;
        amrex::Real DgMMM233 = DgLLL122;
        amrex::Real DgMMM300 = gMMdot30;
        amrex::Real DgMMM301 = DgLTL20;
        amrex::Real DgMMM302 = DgLTL21;
        amrex::Real DgMMM303 = DgLTL22;
        amrex::Real DgMMM310 = gMMdot31;
        amrex::Real DgMMM311 = DgLLL200;
        amrex::Real DgMMM312 = DgLLL201;
        amrex::Real DgMMM313 = DgLLL202;
        amrex::Real DgMMM320 = gMMdot32;
        amrex::Real DgMMM321 = DgLLL210;
        amrex::Real DgMMM322 = DgLLL211;
        amrex::Real DgMMM323 = DgLLL212;
        amrex::Real DgMMM330 = gMMdot33;
        amrex::Real DgMMM331 = DgLLL220;
        amrex::Real DgMMM332 = DgLLL221;
        amrex::Real DgMMM333 = DgLLL222;
        amrex::Real GAM_NMM000 = 0.5*DgMMM000*gUU00 + 0.5*gUU01*(-DgMMM001 + 2*DgMMM100) + 0.5*gUU02*(-DgMMM002 + 2*DgMMM200) + 0.5*gUU03*(-DgMMM003 + 2*DgMMM300);
        amrex::Real GAM_NMM001 = 0.5*DgMMM001*gUU00 + 0.5*gUU01*(-DgMMM011 + DgMMM101 + DgMMM110) + 0.5*gUU02*(-DgMMM012 + DgMMM201 + DgMMM210) + 0.5*gUU03*(-DgMMM013 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM002 = 0.5*DgMMM002*gUU00 + 0.5*gUU01*(-DgMMM021 + DgMMM102 + DgMMM120) + 0.5*gUU02*(-DgMMM022 + DgMMM202 + DgMMM220) + 0.5*gUU03*(-DgMMM023 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM003 = 0.5*DgMMM003*gUU00 + 0.5*gUU01*(-DgMMM031 + DgMMM103 + DgMMM130) + 0.5*gUU02*(-DgMMM032 + DgMMM203 + DgMMM230) + 0.5*gUU03*(-DgMMM033 + DgMMM303 + DgMMM330);
        amrex::Real GAM_NMM010 = 0.5*DgMMM110*gUU01 + 0.5*gUU00*(DgMMM001 + DgMMM010 - DgMMM100) + 0.5*gUU02*(-DgMMM102 + DgMMM201 + DgMMM210) + 0.5*gUU03*(-DgMMM103 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM011 = 0.5*DgMMM111*gUU01 + 0.5*gUU00*(2*DgMMM011 - DgMMM110) + 0.5*gUU02*(-DgMMM112 + 2*DgMMM211) + 0.5*gUU03*(-DgMMM113 + 2*DgMMM311);
        amrex::Real GAM_NMM012 = 0.5*DgMMM112*gUU01 + 0.5*gUU00*(DgMMM012 + DgMMM021 - DgMMM120) + 0.5*gUU02*(-DgMMM122 + DgMMM212 + DgMMM221) + 0.5*gUU03*(-DgMMM123 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM013 = 0.5*DgMMM113*gUU01 + 0.5*gUU00*(DgMMM013 + DgMMM031 - DgMMM130) + 0.5*gUU02*(-DgMMM132 + DgMMM213 + DgMMM231) + 0.5*gUU03*(-DgMMM133 + DgMMM313 + DgMMM331);
        amrex::Real GAM_NMM020 = 0.5*DgMMM220*gUU02 + 0.5*gUU00*(DgMMM002 + DgMMM020 - DgMMM200) + 0.5*gUU01*(DgMMM102 + DgMMM120 - DgMMM201) + 0.5*gUU03*(-DgMMM203 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM021 = 0.5*DgMMM221*gUU02 + 0.5*gUU00*(DgMMM012 + DgMMM021 - DgMMM210) + 0.5*gUU01*(DgMMM112 + DgMMM121 - DgMMM211) + 0.5*gUU03*(-DgMMM213 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM022 = 0.5*DgMMM222*gUU02 + 0.5*gUU00*(2*DgMMM022 - DgMMM220) + 0.5*gUU01*(2*DgMMM122 - DgMMM221) + 0.5*gUU03*(-DgMMM223 + 2*DgMMM322);
        amrex::Real GAM_NMM023 = 0.5*DgMMM223*gUU02 + 0.5*gUU00*(DgMMM023 + DgMMM032 - DgMMM230) + 0.5*gUU01*(DgMMM123 + DgMMM132 - DgMMM231) + 0.5*gUU03*(-DgMMM233 + DgMMM323 + DgMMM332);
        amrex::Real GAM_NMM030 = 0.5*DgMMM330*gUU03 + 0.5*gUU00*(DgMMM003 + DgMMM030 - DgMMM300) + 0.5*gUU01*(DgMMM103 + DgMMM130 - DgMMM301) + 0.5*gUU02*(DgMMM203 + DgMMM230 - DgMMM302);
        amrex::Real GAM_NMM031 = 0.5*DgMMM331*gUU03 + 0.5*gUU00*(DgMMM013 + DgMMM031 - DgMMM310) + 0.5*gUU01*(DgMMM113 + DgMMM131 - DgMMM311) + 0.5*gUU02*(DgMMM213 + DgMMM231 - DgMMM312);
        amrex::Real GAM_NMM032 = 0.5*DgMMM332*gUU03 + 0.5*gUU00*(DgMMM023 + DgMMM032 - DgMMM320) + 0.5*gUU01*(DgMMM123 + DgMMM132 - DgMMM321) + 0.5*gUU02*(DgMMM223 + DgMMM232 - DgMMM322);
        amrex::Real GAM_NMM033 = 0.5*DgMMM333*gUU03 + 0.5*gUU00*(2*DgMMM033 - DgMMM330) + 0.5*gUU01*(2*DgMMM133 - DgMMM331) + 0.5*gUU02*(2*DgMMM233 - DgMMM332);
        amrex::Real GAM_NMM100 = 0.5*DgMMM000*gUU10 + 0.5*gUU11*(-DgMMM001 + 2*DgMMM100) + 0.5*gUU12*(-DgMMM002 + 2*DgMMM200) + 0.5*gUU13*(-DgMMM003 + 2*DgMMM300);
        amrex::Real GAM_NMM101 = 0.5*DgMMM001*gUU10 + 0.5*gUU11*(-DgMMM011 + DgMMM101 + DgMMM110) + 0.5*gUU12*(-DgMMM012 + DgMMM201 + DgMMM210) + 0.5*gUU13*(-DgMMM013 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM102 = 0.5*DgMMM002*gUU10 + 0.5*gUU11*(-DgMMM021 + DgMMM102 + DgMMM120) + 0.5*gUU12*(-DgMMM022 + DgMMM202 + DgMMM220) + 0.5*gUU13*(-DgMMM023 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM103 = 0.5*DgMMM003*gUU10 + 0.5*gUU11*(-DgMMM031 + DgMMM103 + DgMMM130) + 0.5*gUU12*(-DgMMM032 + DgMMM203 + DgMMM230) + 0.5*gUU13*(-DgMMM033 + DgMMM303 + DgMMM330);
        amrex::Real GAM_NMM110 = 0.5*DgMMM110*gUU11 + 0.5*gUU10*(DgMMM001 + DgMMM010 - DgMMM100) + 0.5*gUU12*(-DgMMM102 + DgMMM201 + DgMMM210) + 0.5*gUU13*(-DgMMM103 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM111 = 0.5*DgMMM111*gUU11 + 0.5*gUU10*(2*DgMMM011 - DgMMM110) + 0.5*gUU12*(-DgMMM112 + 2*DgMMM211) + 0.5*gUU13*(-DgMMM113 + 2*DgMMM311);
        amrex::Real GAM_NMM112 = 0.5*DgMMM112*gUU11 + 0.5*gUU10*(DgMMM012 + DgMMM021 - DgMMM120) + 0.5*gUU12*(-DgMMM122 + DgMMM212 + DgMMM221) + 0.5*gUU13*(-DgMMM123 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM113 = 0.5*DgMMM113*gUU11 + 0.5*gUU10*(DgMMM013 + DgMMM031 - DgMMM130) + 0.5*gUU12*(-DgMMM132 + DgMMM213 + DgMMM231) + 0.5*gUU13*(-DgMMM133 + DgMMM313 + DgMMM331);
        amrex::Real GAM_NMM120 = 0.5*DgMMM220*gUU12 + 0.5*gUU10*(DgMMM002 + DgMMM020 - DgMMM200) + 0.5*gUU11*(DgMMM102 + DgMMM120 - DgMMM201) + 0.5*gUU13*(-DgMMM203 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM121 = 0.5*DgMMM221*gUU12 + 0.5*gUU10*(DgMMM012 + DgMMM021 - DgMMM210) + 0.5*gUU11*(DgMMM112 + DgMMM121 - DgMMM211) + 0.5*gUU13*(-DgMMM213 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM122 = 0.5*DgMMM222*gUU12 + 0.5*gUU10*(2*DgMMM022 - DgMMM220) + 0.5*gUU11*(2*DgMMM122 - DgMMM221) + 0.5*gUU13*(-DgMMM223 + 2*DgMMM322);
        amrex::Real GAM_NMM123 = 0.5*DgMMM223*gUU12 + 0.5*gUU10*(DgMMM023 + DgMMM032 - DgMMM230) + 0.5*gUU11*(DgMMM123 + DgMMM132 - DgMMM231) + 0.5*gUU13*(-DgMMM233 + DgMMM323 + DgMMM332);
        amrex::Real GAM_NMM130 = 0.5*DgMMM330*gUU13 + 0.5*gUU10*(DgMMM003 + DgMMM030 - DgMMM300) + 0.5*gUU11*(DgMMM103 + DgMMM130 - DgMMM301) + 0.5*gUU12*(DgMMM203 + DgMMM230 - DgMMM302);
        amrex::Real GAM_NMM131 = 0.5*DgMMM331*gUU13 + 0.5*gUU10*(DgMMM013 + DgMMM031 - DgMMM310) + 0.5*gUU11*(DgMMM113 + DgMMM131 - DgMMM311) + 0.5*gUU12*(DgMMM213 + DgMMM231 - DgMMM312);
        amrex::Real GAM_NMM132 = 0.5*DgMMM332*gUU13 + 0.5*gUU10*(DgMMM023 + DgMMM032 - DgMMM320) + 0.5*gUU11*(DgMMM123 + DgMMM132 - DgMMM321) + 0.5*gUU12*(DgMMM223 + DgMMM232 - DgMMM322);
        amrex::Real GAM_NMM133 = 0.5*DgMMM333*gUU13 + 0.5*gUU10*(2*DgMMM033 - DgMMM330) + 0.5*gUU11*(2*DgMMM133 - DgMMM331) + 0.5*gUU12*(2*DgMMM233 - DgMMM332);
        amrex::Real GAM_NMM200 = 0.5*DgMMM000*gUU20 + 0.5*gUU21*(-DgMMM001 + 2*DgMMM100) + 0.5*gUU22*(-DgMMM002 + 2*DgMMM200) + 0.5*gUU23*(-DgMMM003 + 2*DgMMM300);
        amrex::Real GAM_NMM201 = 0.5*DgMMM001*gUU20 + 0.5*gUU21*(-DgMMM011 + DgMMM101 + DgMMM110) + 0.5*gUU22*(-DgMMM012 + DgMMM201 + DgMMM210) + 0.5*gUU23*(-DgMMM013 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM202 = 0.5*DgMMM002*gUU20 + 0.5*gUU21*(-DgMMM021 + DgMMM102 + DgMMM120) + 0.5*gUU22*(-DgMMM022 + DgMMM202 + DgMMM220) + 0.5*gUU23*(-DgMMM023 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM203 = 0.5*DgMMM003*gUU20 + 0.5*gUU21*(-DgMMM031 + DgMMM103 + DgMMM130) + 0.5*gUU22*(-DgMMM032 + DgMMM203 + DgMMM230) + 0.5*gUU23*(-DgMMM033 + DgMMM303 + DgMMM330);
        amrex::Real GAM_NMM210 = 0.5*DgMMM110*gUU21 + 0.5*gUU20*(DgMMM001 + DgMMM010 - DgMMM100) + 0.5*gUU22*(-DgMMM102 + DgMMM201 + DgMMM210) + 0.5*gUU23*(-DgMMM103 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM211 = 0.5*DgMMM111*gUU21 + 0.5*gUU20*(2*DgMMM011 - DgMMM110) + 0.5*gUU22*(-DgMMM112 + 2*DgMMM211) + 0.5*gUU23*(-DgMMM113 + 2*DgMMM311);
        amrex::Real GAM_NMM212 = 0.5*DgMMM112*gUU21 + 0.5*gUU20*(DgMMM012 + DgMMM021 - DgMMM120) + 0.5*gUU22*(-DgMMM122 + DgMMM212 + DgMMM221) + 0.5*gUU23*(-DgMMM123 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM213 = 0.5*DgMMM113*gUU21 + 0.5*gUU20*(DgMMM013 + DgMMM031 - DgMMM130) + 0.5*gUU22*(-DgMMM132 + DgMMM213 + DgMMM231) + 0.5*gUU23*(-DgMMM133 + DgMMM313 + DgMMM331);
        amrex::Real GAM_NMM220 = 0.5*DgMMM220*gUU22 + 0.5*gUU20*(DgMMM002 + DgMMM020 - DgMMM200) + 0.5*gUU21*(DgMMM102 + DgMMM120 - DgMMM201) + 0.5*gUU23*(-DgMMM203 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM221 = 0.5*DgMMM221*gUU22 + 0.5*gUU20*(DgMMM012 + DgMMM021 - DgMMM210) + 0.5*gUU21*(DgMMM112 + DgMMM121 - DgMMM211) + 0.5*gUU23*(-DgMMM213 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM222 = 0.5*DgMMM222*gUU22 + 0.5*gUU20*(2*DgMMM022 - DgMMM220) + 0.5*gUU21*(2*DgMMM122 - DgMMM221) + 0.5*gUU23*(-DgMMM223 + 2*DgMMM322);
        amrex::Real GAM_NMM223 = 0.5*DgMMM223*gUU22 + 0.5*gUU20*(DgMMM023 + DgMMM032 - DgMMM230) + 0.5*gUU21*(DgMMM123 + DgMMM132 - DgMMM231) + 0.5*gUU23*(-DgMMM233 + DgMMM323 + DgMMM332);
        amrex::Real GAM_NMM230 = 0.5*DgMMM330*gUU23 + 0.5*gUU20*(DgMMM003 + DgMMM030 - DgMMM300) + 0.5*gUU21*(DgMMM103 + DgMMM130 - DgMMM301) + 0.5*gUU22*(DgMMM203 + DgMMM230 - DgMMM302);
        amrex::Real GAM_NMM231 = 0.5*DgMMM331*gUU23 + 0.5*gUU20*(DgMMM013 + DgMMM031 - DgMMM310) + 0.5*gUU21*(DgMMM113 + DgMMM131 - DgMMM311) + 0.5*gUU22*(DgMMM213 + DgMMM231 - DgMMM312);
        amrex::Real GAM_NMM232 = 0.5*DgMMM332*gUU23 + 0.5*gUU20*(DgMMM023 + DgMMM032 - DgMMM320) + 0.5*gUU21*(DgMMM123 + DgMMM132 - DgMMM321) + 0.5*gUU22*(DgMMM223 + DgMMM232 - DgMMM322);
        amrex::Real GAM_NMM233 = 0.5*DgMMM333*gUU23 + 0.5*gUU20*(2*DgMMM033 - DgMMM330) + 0.5*gUU21*(2*DgMMM133 - DgMMM331) + 0.5*gUU22*(2*DgMMM233 - DgMMM332);
        amrex::Real GAM_NMM300 = 0.5*DgMMM000*gUU30 + 0.5*gUU31*(-DgMMM001 + 2*DgMMM100) + 0.5*gUU32*(-DgMMM002 + 2*DgMMM200) + 0.5*gUU33*(-DgMMM003 + 2*DgMMM300);
        amrex::Real GAM_NMM301 = 0.5*DgMMM001*gUU30 + 0.5*gUU31*(-DgMMM011 + DgMMM101 + DgMMM110) + 0.5*gUU32*(-DgMMM012 + DgMMM201 + DgMMM210) + 0.5*gUU33*(-DgMMM013 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM302 = 0.5*DgMMM002*gUU30 + 0.5*gUU31*(-DgMMM021 + DgMMM102 + DgMMM120) + 0.5*gUU32*(-DgMMM022 + DgMMM202 + DgMMM220) + 0.5*gUU33*(-DgMMM023 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM303 = 0.5*DgMMM003*gUU30 + 0.5*gUU31*(-DgMMM031 + DgMMM103 + DgMMM130) + 0.5*gUU32*(-DgMMM032 + DgMMM203 + DgMMM230) + 0.5*gUU33*(-DgMMM033 + DgMMM303 + DgMMM330);
        amrex::Real GAM_NMM310 = 0.5*DgMMM110*gUU31 + 0.5*gUU30*(DgMMM001 + DgMMM010 - DgMMM100) + 0.5*gUU32*(-DgMMM102 + DgMMM201 + DgMMM210) + 0.5*gUU33*(-DgMMM103 + DgMMM301 + DgMMM310);
        amrex::Real GAM_NMM311 = 0.5*DgMMM111*gUU31 + 0.5*gUU30*(2*DgMMM011 - DgMMM110) + 0.5*gUU32*(-DgMMM112 + 2*DgMMM211) + 0.5*gUU33*(-DgMMM113 + 2*DgMMM311);
        amrex::Real GAM_NMM312 = 0.5*DgMMM112*gUU31 + 0.5*gUU30*(DgMMM012 + DgMMM021 - DgMMM120) + 0.5*gUU32*(-DgMMM122 + DgMMM212 + DgMMM221) + 0.5*gUU33*(-DgMMM123 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM313 = 0.5*DgMMM113*gUU31 + 0.5*gUU30*(DgMMM013 + DgMMM031 - DgMMM130) + 0.5*gUU32*(-DgMMM132 + DgMMM213 + DgMMM231) + 0.5*gUU33*(-DgMMM133 + DgMMM313 + DgMMM331);
        amrex::Real GAM_NMM320 = 0.5*DgMMM220*gUU32 + 0.5*gUU30*(DgMMM002 + DgMMM020 - DgMMM200) + 0.5*gUU31*(DgMMM102 + DgMMM120 - DgMMM201) + 0.5*gUU33*(-DgMMM203 + DgMMM302 + DgMMM320);
        amrex::Real GAM_NMM321 = 0.5*DgMMM221*gUU32 + 0.5*gUU30*(DgMMM012 + DgMMM021 - DgMMM210) + 0.5*gUU31*(DgMMM112 + DgMMM121 - DgMMM211) + 0.5*gUU33*(-DgMMM213 + DgMMM312 + DgMMM321);
        amrex::Real GAM_NMM322 = 0.5*DgMMM222*gUU32 + 0.5*gUU30*(2*DgMMM022 - DgMMM220) + 0.5*gUU31*(2*DgMMM122 - DgMMM221) + 0.5*gUU33*(-DgMMM223 + 2*DgMMM322);
        amrex::Real GAM_NMM323 = 0.5*DgMMM223*gUU32 + 0.5*gUU30*(DgMMM023 + DgMMM032 - DgMMM230) + 0.5*gUU31*(DgMMM123 + DgMMM132 - DgMMM231) + 0.5*gUU33*(-DgMMM233 + DgMMM323 + DgMMM332);
        amrex::Real GAM_NMM330 = 0.5*DgMMM330*gUU33 + 0.5*gUU30*(DgMMM003 + DgMMM030 - DgMMM300) + 0.5*gUU31*(DgMMM103 + DgMMM130 - DgMMM301) + 0.5*gUU32*(DgMMM203 + DgMMM230 - DgMMM302);
        amrex::Real GAM_NMM331 = 0.5*DgMMM331*gUU33 + 0.5*gUU30*(DgMMM013 + DgMMM031 - DgMMM310) + 0.5*gUU31*(DgMMM113 + DgMMM131 - DgMMM311) + 0.5*gUU32*(DgMMM213 + DgMMM231 - DgMMM312);
        amrex::Real GAM_NMM332 = 0.5*DgMMM332*gUU33 + 0.5*gUU30*(DgMMM023 + DgMMM032 - DgMMM320) + 0.5*gUU31*(DgMMM123 + DgMMM132 - DgMMM321) + 0.5*gUU32*(DgMMM223 + DgMMM232 - DgMMM322);
        amrex::Real GAM_NMM333 = 0.5*DgMMM333*gUU33 + 0.5*gUU30*(2*DgMMM033 - DgMMM330) + 0.5*gUU31*(2*DgMMM133 - DgMMM331) + 0.5*gUU32*(2*DgMMM233 - DgMMM332);
        conv_vars_arr(i, j, k, ConvIdx::Source10) = DgMMM000*gUU00 + DgMMM001*gUU01 + DgMMM002*gUU02 + DgMMM003*gUU03 + DgMMM100*gUU10 + DgMMM101*gUU11 + DgMMM102*gUU12 + DgMMM103*gUU13 + DgMMM200*gUU20 + DgMMM201*gUU21 + DgMMM202*gUU22 + DgMMM203*gUU23 + DgMMM300*gUU30 + DgMMM301*gUU31 + DgMMM302*gUU32 + DgMMM303*gUU33 - GAM_NMM000*gLL00*gUU00 - GAM_NMM001*gLL00*gUU01 - GAM_NMM002*gLL00*gUU02 - GAM_NMM003*gLL00*gUU03 - GAM_NMM010*gLL00*gUU10 - GAM_NMM011*gLL00*gUU11 - GAM_NMM012*gLL00*gUU12 - GAM_NMM013*gLL00*gUU13 - GAM_NMM020*gLL00*gUU20 - GAM_NMM021*gLL00*gUU21 - GAM_NMM022*gLL00*gUU22 - GAM_NMM023*gLL00*gUU23 - GAM_NMM030*gLL00*gUU30 - GAM_NMM031*gLL00*gUU31 - GAM_NMM032*gLL00*gUU32 - GAM_NMM033*gLL00*gUU33 - GAM_NMM100*gLL10*gUU00 - GAM_NMM101*gLL10*gUU01 - GAM_NMM102*gLL10*gUU02 - GAM_NMM103*gLL10*gUU03 - GAM_NMM110*gLL10*gUU10 - GAM_NMM111*gLL10*gUU11 - GAM_NMM112*gLL10*gUU12 - GAM_NMM113*gLL10*gUU13 - GAM_NMM120*gLL10*gUU20 - GAM_NMM121*gLL10*gUU21 - GAM_NMM122*gLL10*gUU22 - GAM_NMM123*gLL10*gUU23 - GAM_NMM130*gLL10*gUU30 - GAM_NMM131*gLL10*gUU31 - GAM_NMM132*gLL10*gUU32 - GAM_NMM133*gLL10*gUU33 - GAM_NMM200*gLL20*gUU00 - GAM_NMM201*gLL20*gUU01 - GAM_NMM202*gLL20*gUU02 - GAM_NMM203*gLL20*gUU03 - GAM_NMM210*gLL20*gUU10 - GAM_NMM211*gLL20*gUU11 - GAM_NMM212*gLL20*gUU12 - GAM_NMM213*gLL20*gUU13 - GAM_NMM220*gLL20*gUU20 - GAM_NMM221*gLL20*gUU21 - GAM_NMM222*gLL20*gUU22 - GAM_NMM223*gLL20*gUU23 - GAM_NMM230*gLL20*gUU30 - GAM_NMM231*gLL20*gUU31 - GAM_NMM232*gLL20*gUU32 - GAM_NMM233*gLL20*gUU33 - GAM_NMM300*gLL30*gUU00 - GAM_NMM301*gLL30*gUU01 - GAM_NMM302*gLL30*gUU02 - GAM_NMM303*gLL30*gUU03 - GAM_NMM310*gLL30*gUU10 - GAM_NMM311*gLL30*gUU11 - GAM_NMM312*gLL30*gUU12 - GAM_NMM313*gLL30*gUU13 - GAM_NMM320*gLL30*gUU20 - GAM_NMM321*gLL30*gUU21 - GAM_NMM322*gLL30*gUU22 - GAM_NMM323*gLL30*gUU23 - GAM_NMM330*gLL30*gUU30 - GAM_NMM331*gLL30*gUU31 - GAM_NMM332*gLL30*gUU32 - GAM_NMM333*gLL30*gUU33 + conv_vars_arr(i, j, k, ConvIdx::Source10);

        conv_vars_arr(i, j, k, ConvIdx::Source11) = DgMMM010*gUU00 + DgMMM011*gUU01 + DgMMM012*gUU02 + DgMMM013*gUU03 + DgMMM110*gUU10 + DgMMM111*gUU11 + DgMMM112*gUU12 + DgMMM113*gUU13 + DgMMM210*gUU20 + DgMMM211*gUU21 + DgMMM212*gUU22 + DgMMM213*gUU23 + DgMMM310*gUU30 + DgMMM311*gUU31 + DgMMM312*gUU32 + DgMMM313*gUU33 - GAM_NMM000*gLL01*gUU00 - GAM_NMM001*gLL01*gUU01 - GAM_NMM002*gLL01*gUU02 - GAM_NMM003*gLL01*gUU03 - GAM_NMM010*gLL01*gUU10 - GAM_NMM011*gLL01*gUU11 - GAM_NMM012*gLL01*gUU12 - GAM_NMM013*gLL01*gUU13 - GAM_NMM020*gLL01*gUU20 - GAM_NMM021*gLL01*gUU21 - GAM_NMM022*gLL01*gUU22 - GAM_NMM023*gLL01*gUU23 - GAM_NMM030*gLL01*gUU30 - GAM_NMM031*gLL01*gUU31 - GAM_NMM032*gLL01*gUU32 - GAM_NMM033*gLL01*gUU33 - GAM_NMM100*gLL11*gUU00 - GAM_NMM101*gLL11*gUU01 - GAM_NMM102*gLL11*gUU02 - GAM_NMM103*gLL11*gUU03 - GAM_NMM110*gLL11*gUU10 - GAM_NMM111*gLL11*gUU11 - GAM_NMM112*gLL11*gUU12 - GAM_NMM113*gLL11*gUU13 - GAM_NMM120*gLL11*gUU20 - GAM_NMM121*gLL11*gUU21 - GAM_NMM122*gLL11*gUU22 - GAM_NMM123*gLL11*gUU23 - GAM_NMM130*gLL11*gUU30 - GAM_NMM131*gLL11*gUU31 - GAM_NMM132*gLL11*gUU32 - GAM_NMM133*gLL11*gUU33 - GAM_NMM200*gLL21*gUU00 - GAM_NMM201*gLL21*gUU01 - GAM_NMM202*gLL21*gUU02 - GAM_NMM203*gLL21*gUU03 - GAM_NMM210*gLL21*gUU10 - GAM_NMM211*gLL21*gUU11 - GAM_NMM212*gLL21*gUU12 - GAM_NMM213*gLL21*gUU13 - GAM_NMM220*gLL21*gUU20 - GAM_NMM221*gLL21*gUU21 - GAM_NMM222*gLL21*gUU22 - GAM_NMM223*gLL21*gUU23 - GAM_NMM230*gLL21*gUU30 - GAM_NMM231*gLL21*gUU31 - GAM_NMM232*gLL21*gUU32 - GAM_NMM233*gLL21*gUU33 - GAM_NMM300*gLL31*gUU00 - GAM_NMM301*gLL31*gUU01 - GAM_NMM302*gLL31*gUU02 - GAM_NMM303*gLL31*gUU03 - GAM_NMM310*gLL31*gUU10 - GAM_NMM311*gLL31*gUU11 - GAM_NMM312*gLL31*gUU12 - GAM_NMM313*gLL31*gUU13 - GAM_NMM320*gLL31*gUU20 - GAM_NMM321*gLL31*gUU21 - GAM_NMM322*gLL31*gUU22 - GAM_NMM323*gLL31*gUU23 - GAM_NMM330*gLL31*gUU30 - GAM_NMM331*gLL31*gUU31 - GAM_NMM332*gLL31*gUU32 - GAM_NMM333*gLL31*gUU33 + conv_vars_arr(i, j, k, ConvIdx::Source11);

        conv_vars_arr(i, j, k, ConvIdx::Source12) = DgMMM020*gUU00 + DgMMM021*gUU01 + DgMMM022*gUU02 + DgMMM023*gUU03 + DgMMM120*gUU10 + DgMMM121*gUU11 + DgMMM122*gUU12 + DgMMM123*gUU13 + DgMMM220*gUU20 + DgMMM221*gUU21 + DgMMM222*gUU22 + DgMMM223*gUU23 + DgMMM320*gUU30 + DgMMM321*gUU31 + DgMMM322*gUU32 + DgMMM323*gUU33 - GAM_NMM000*gLL02*gUU00 - GAM_NMM001*gLL02*gUU01 - GAM_NMM002*gLL02*gUU02 - GAM_NMM003*gLL02*gUU03 - GAM_NMM010*gLL02*gUU10 - GAM_NMM011*gLL02*gUU11 - GAM_NMM012*gLL02*gUU12 - GAM_NMM013*gLL02*gUU13 - GAM_NMM020*gLL02*gUU20 - GAM_NMM021*gLL02*gUU21 - GAM_NMM022*gLL02*gUU22 - GAM_NMM023*gLL02*gUU23 - GAM_NMM030*gLL02*gUU30 - GAM_NMM031*gLL02*gUU31 - GAM_NMM032*gLL02*gUU32 - GAM_NMM033*gLL02*gUU33 - GAM_NMM100*gLL12*gUU00 - GAM_NMM101*gLL12*gUU01 - GAM_NMM102*gLL12*gUU02 - GAM_NMM103*gLL12*gUU03 - GAM_NMM110*gLL12*gUU10 - GAM_NMM111*gLL12*gUU11 - GAM_NMM112*gLL12*gUU12 - GAM_NMM113*gLL12*gUU13 - GAM_NMM120*gLL12*gUU20 - GAM_NMM121*gLL12*gUU21 - GAM_NMM122*gLL12*gUU22 - GAM_NMM123*gLL12*gUU23 - GAM_NMM130*gLL12*gUU30 - GAM_NMM131*gLL12*gUU31 - GAM_NMM132*gLL12*gUU32 - GAM_NMM133*gLL12*gUU33 - GAM_NMM200*gLL22*gUU00 - GAM_NMM201*gLL22*gUU01 - GAM_NMM202*gLL22*gUU02 - GAM_NMM203*gLL22*gUU03 - GAM_NMM210*gLL22*gUU10 - GAM_NMM211*gLL22*gUU11 - GAM_NMM212*gLL22*gUU12 - GAM_NMM213*gLL22*gUU13 - GAM_NMM220*gLL22*gUU20 - GAM_NMM221*gLL22*gUU21 - GAM_NMM222*gLL22*gUU22 - GAM_NMM223*gLL22*gUU23 - GAM_NMM230*gLL22*gUU30 - GAM_NMM231*gLL22*gUU31 - GAM_NMM232*gLL22*gUU32 - GAM_NMM233*gLL22*gUU33 - GAM_NMM300*gLL32*gUU00 - GAM_NMM301*gLL32*gUU01 - GAM_NMM302*gLL32*gUU02 - GAM_NMM303*gLL32*gUU03 - GAM_NMM310*gLL32*gUU10 - GAM_NMM311*gLL32*gUU11 - GAM_NMM312*gLL32*gUU12 - GAM_NMM313*gLL32*gUU13 - GAM_NMM320*gLL32*gUU20 - GAM_NMM321*gLL32*gUU21 - GAM_NMM322*gLL32*gUU22 - GAM_NMM323*gLL32*gUU23 - GAM_NMM330*gLL32*gUU30 - GAM_NMM331*gLL32*gUU31 - GAM_NMM332*gLL32*gUU32 - GAM_NMM333*gLL32*gUU33 + conv_vars_arr(i, j, k, ConvIdx::Source12);

        conv_vars_arr(i, j, k, ConvIdx::Source2) = -GAM_NMM000*alpha*gUU00 - GAM_NMM001*alpha*gUU01 - GAM_NMM002*alpha*gUU02 - GAM_NMM003*alpha*gUU03 - GAM_NMM010*alpha*gUU10 - GAM_NMM011*alpha*gUU11 - GAM_NMM012*alpha*gUU12 - GAM_NMM013*alpha*gUU13 - GAM_NMM020*alpha*gUU20 - GAM_NMM021*alpha*gUU21 - GAM_NMM022*alpha*gUU22 - GAM_NMM023*alpha*gUU23 - GAM_NMM030*alpha*gUU30 - GAM_NMM031*alpha*gUU31 - GAM_NMM032*alpha*gUU32 - GAM_NMM033*alpha*gUU33 + alphadot*gUU00 + dalpha0*gUU00 + dalpha1*gUU10 + dalpha2*gUU20;

}
#endif