#ifndef ET_INTEGRATION_CONSTRAINTS_K_H 
#define ET_INTEGRATION_CONSTRAINTS_K_H 

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_diagnostics(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& diag, 
        amrex::Array4<amrex::Real const> const& state_fab, 
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx) noexcept 
{
        amrex::Real phi = state_fab(i, j, k, Idx::phi);
        amrex::Real gamtildeLL00 = state_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLL01 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL02 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL10 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL11 = state_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLL12 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL20 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL21 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL22 = state_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);
        amrex::Real AtildeLL00 = state_fab(i, j, k, Idx::AtildeLL00);
        amrex::Real AtildeLL01 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL02 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL10 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL11 = state_fab(i, j, k, Idx::AtildeLL11);
        amrex::Real AtildeLL12 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL20 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL21 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL22 = state_fab(i, j, k, Idx::AtildeLL22);
        amrex::Real theta = state_fab(i, j, k, Idx::theta);
        amrex::Real GamtildeU0 = state_fab(i, j, k, Idx::GamtildeU0);
        amrex::Real GamtildeU1 = state_fab(i, j, k, Idx::GamtildeU1);
        amrex::Real GamtildeU2 = state_fab(i, j, k, Idx::GamtildeU2);
        amrex::Real chi = std::exp(-4*phi);
        amrex::Real dphi0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::phi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::phi))/dx[0];
        amrex::Real dphi1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::phi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::phi))/dx[1];
        amrex::Real dphi2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::phi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::phi))/dx[2];
        amrex::Real ddphi00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[0], 2);
        amrex::Real ddphi01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi))/(dx[0]*dx[1]);
        amrex::Real ddphi02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi))/(dx[0]*dx[2]);
        amrex::Real ddphi10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi))/(dx[0]*dx[1]);
        amrex::Real ddphi11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[1], 2);
        amrex::Real ddphi12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi))/(dx[1]*dx[2]);
        amrex::Real ddphi20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi))/(dx[0]*dx[2]);
        amrex::Real ddphi21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi))/(dx[1]*dx[2]);
        amrex::Real ddphi22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[2], 2);
        amrex::Real dgamtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real dgamtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real dgamtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL00))/dx[2];
        amrex::Real dgamtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real dgamtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real dgamtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL11))/dx[2];
        amrex::Real dgamtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dgamtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real dgamtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL22))/dx[2];
        amrex::Real ddgamtildeLL0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[2], 2);
        amrex::Real dKhat0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dKhat1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dKhat2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];
        amrex::Real dtheta0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dtheta1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dtheta2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];
        amrex::Real dGamtildeU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real dGamtildeU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU0))/dx[1];
        amrex::Real dGamtildeU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU0))/dx[2];
        amrex::Real dGamtildeU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real dGamtildeU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU1))/dx[1];
        amrex::Real dGamtildeU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU1))/dx[2];
        amrex::Real dGamtildeU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dGamtildeU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU2))/dx[1];
        amrex::Real dGamtildeU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU2))/dx[2];
        amrex::Real gamtildeUU00 = (gamtildeLL11*gamtildeLL22 - gamtildeLL12*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU01 = (-gamtildeLL01*gamtildeLL22 + gamtildeLL02*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU02 = (gamtildeLL01*gamtildeLL12 - gamtildeLL02*gamtildeLL11)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU10 = (-gamtildeLL10*gamtildeLL22 + gamtildeLL12*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU11 = gamtildeLL00*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU12 = -gamtildeLL00*(gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU20 = (gamtildeLL10*gamtildeLL21 - gamtildeLL11*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU21 = -gamtildeLL00*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU22 = gamtildeLL00*(gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real AtildeUU00 = AtildeLL00*std::pow(gamtildeUU00, 2) + AtildeLL01*gamtildeUU00*gamtildeUU01 + AtildeLL02*gamtildeUU00*gamtildeUU02 + AtildeLL10*gamtildeUU00*gamtildeUU01 + AtildeLL11*std::pow(gamtildeUU01, 2) + AtildeLL12*gamtildeUU01*gamtildeUU02 + AtildeLL20*gamtildeUU00*gamtildeUU02 + AtildeLL21*gamtildeUU01*gamtildeUU02 + AtildeLL22*std::pow(gamtildeUU02, 2);
        amrex::Real AtildeUU01 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU00*gamtildeUU11 + AtildeLL02*gamtildeUU00*gamtildeUU12 + AtildeLL10*gamtildeUU01*gamtildeUU10 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU01*gamtildeUU12 + AtildeLL20*gamtildeUU02*gamtildeUU10 + AtildeLL21*gamtildeUU02*gamtildeUU11 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU02 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU00*gamtildeUU21 + AtildeLL02*gamtildeUU00*gamtildeUU22 + AtildeLL10*gamtildeUU01*gamtildeUU20 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU01*gamtildeUU22 + AtildeLL20*gamtildeUU02*gamtildeUU20 + AtildeLL21*gamtildeUU02*gamtildeUU21 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU10 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU01*gamtildeUU10 + AtildeLL02*gamtildeUU02*gamtildeUU10 + AtildeLL10*gamtildeUU00*gamtildeUU11 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU02*gamtildeUU11 + AtildeLL20*gamtildeUU00*gamtildeUU12 + AtildeLL21*gamtildeUU01*gamtildeUU12 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU11 = AtildeLL00*std::pow(gamtildeUU10, 2) + AtildeLL01*gamtildeUU10*gamtildeUU11 + AtildeLL02*gamtildeUU10*gamtildeUU12 + AtildeLL10*gamtildeUU10*gamtildeUU11 + AtildeLL11*std::pow(gamtildeUU11, 2) + AtildeLL12*gamtildeUU11*gamtildeUU12 + AtildeLL20*gamtildeUU10*gamtildeUU12 + AtildeLL21*gamtildeUU11*gamtildeUU12 + AtildeLL22*std::pow(gamtildeUU12, 2);
        amrex::Real AtildeUU12 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU10*gamtildeUU21 + AtildeLL02*gamtildeUU10*gamtildeUU22 + AtildeLL10*gamtildeUU11*gamtildeUU20 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU11*gamtildeUU22 + AtildeLL20*gamtildeUU12*gamtildeUU20 + AtildeLL21*gamtildeUU12*gamtildeUU21 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU20 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU01*gamtildeUU20 + AtildeLL02*gamtildeUU02*gamtildeUU20 + AtildeLL10*gamtildeUU00*gamtildeUU21 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU02*gamtildeUU21 + AtildeLL20*gamtildeUU00*gamtildeUU22 + AtildeLL21*gamtildeUU01*gamtildeUU22 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU21 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU11*gamtildeUU20 + AtildeLL02*gamtildeUU12*gamtildeUU20 + AtildeLL10*gamtildeUU10*gamtildeUU21 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU12*gamtildeUU21 + AtildeLL20*gamtildeUU10*gamtildeUU22 + AtildeLL21*gamtildeUU11*gamtildeUU22 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU22 = AtildeLL00*std::pow(gamtildeUU20, 2) + AtildeLL01*gamtildeUU20*gamtildeUU21 + AtildeLL02*gamtildeUU20*gamtildeUU22 + AtildeLL10*gamtildeUU20*gamtildeUU21 + AtildeLL11*std::pow(gamtildeUU21, 2) + AtildeLL12*gamtildeUU21*gamtildeUU22 + AtildeLL20*gamtildeUU20*gamtildeUU22 + AtildeLL21*gamtildeUU21*gamtildeUU22 + AtildeLL22*std::pow(gamtildeUU22, 2);
        amrex::Real GamtildeULL000 = 0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL001 = 0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL002 = 0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL010 = 0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL011 = 0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL012 = 0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL020 = 0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL021 = 0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL022 = 0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeULL100 = 0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL101 = 0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL102 = 0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL110 = 0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL111 = 0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL112 = 0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL120 = 0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL121 = 0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL122 = 0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeULL200 = 0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL201 = 0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL202 = 0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL210 = 0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL211 = 0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL212 = 0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL220 = 0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL221 = 0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL222 = 0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeLLL000 = gamtildeLL00*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL01*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL02*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL001 = gamtildeLL00*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL01*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL02*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL002 = gamtildeLL00*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL01*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL02*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL010 = gamtildeLL00*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL01*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL02*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL011 = gamtildeLL00*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL01*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL02*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL012 = gamtildeLL00*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL01*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL02*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL020 = gamtildeLL00*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL01*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL02*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL021 = gamtildeLL00*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL01*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL02*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL022 = gamtildeLL00*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL01*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL02*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamtildeLLL100 = gamtildeLL10*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL11*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL12*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL101 = gamtildeLL10*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL11*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL12*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL102 = gamtildeLL10*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL11*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL12*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL110 = gamtildeLL10*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL11*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL12*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL111 = gamtildeLL10*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL11*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL12*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL112 = gamtildeLL10*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL11*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL12*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL120 = gamtildeLL10*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL11*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL12*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL121 = gamtildeLL10*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL11*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL12*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL122 = gamtildeLL10*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL11*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL12*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamtildeLLL200 = gamtildeLL20*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL21*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL22*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL201 = gamtildeLL20*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL21*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL22*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL202 = gamtildeLL20*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL21*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL22*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL210 = gamtildeLL20*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL21*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL22*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL211 = gamtildeLL20*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL21*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL22*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL212 = gamtildeLL20*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL21*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL22*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL220 = gamtildeLL20*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL21*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL22*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL221 = gamtildeLL20*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL21*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL22*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL222 = gamtildeLL20*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL21*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL22*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamtildeDU0 = GamtildeULL000*gamtildeUU00 + GamtildeULL001*gamtildeUU01 + GamtildeULL002*gamtildeUU02 + GamtildeULL010*gamtildeUU10 + GamtildeULL011*gamtildeUU11 + GamtildeULL012*gamtildeUU12 + GamtildeULL020*gamtildeUU20 + GamtildeULL021*gamtildeUU21 + GamtildeULL022*gamtildeUU22;
        amrex::Real GamtildeDU1 = GamtildeULL100*gamtildeUU00 + GamtildeULL101*gamtildeUU01 + GamtildeULL102*gamtildeUU02 + GamtildeULL110*gamtildeUU10 + GamtildeULL111*gamtildeUU11 + GamtildeULL112*gamtildeUU12 + GamtildeULL120*gamtildeUU20 + GamtildeULL121*gamtildeUU21 + GamtildeULL122*gamtildeUU22;
        amrex::Real GamtildeDU2 = GamtildeULL200*gamtildeUU00 + GamtildeULL201*gamtildeUU01 + GamtildeULL202*gamtildeUU02 + GamtildeULL210*gamtildeUU10 + GamtildeULL211*gamtildeUU11 + GamtildeULL212*gamtildeUU12 + GamtildeULL220*gamtildeUU20 + GamtildeULL221*gamtildeUU21 + GamtildeULL222*gamtildeUU22;
        amrex::Real RtildeLL00 = 1.0*GamtildeDU0*GamtildeLLL000 + 1.0*GamtildeDU1*GamtildeLLL001 + 1.0*GamtildeDU2*GamtildeLLL002 + 3*GamtildeLLL000*GamtildeULL000*gamtildeUU00 + GamtildeLLL000*GamtildeULL001*gamtildeUU01 + GamtildeLLL000*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL000*GamtildeULL010*gamtildeUU10 + 2*GamtildeLLL000*GamtildeULL020*gamtildeUU20 + 2*GamtildeLLL001*GamtildeULL000*gamtildeUU01 + 2*GamtildeLLL001*GamtildeULL010*gamtildeUU11 + 2*GamtildeLLL001*GamtildeULL020*gamtildeUU21 + 2*GamtildeLLL002*GamtildeULL000*gamtildeUU02 + 2*GamtildeLLL002*GamtildeULL010*gamtildeUU12 + 2*GamtildeLLL002*GamtildeULL020*gamtildeUU22 + GamtildeLLL010*GamtildeULL000*gamtildeUU10 + GamtildeLLL010*GamtildeULL001*gamtildeUU11 + GamtildeLLL010*GamtildeULL002*gamtildeUU12 + 2*GamtildeLLL010*GamtildeULL100*gamtildeUU00 + 2*GamtildeLLL010*GamtildeULL110*gamtildeUU10 + 2*GamtildeLLL010*GamtildeULL120*gamtildeUU20 + 2*GamtildeLLL011*GamtildeULL100*gamtildeUU01 + 2*GamtildeLLL011*GamtildeULL110*gamtildeUU11 + 2*GamtildeLLL011*GamtildeULL120*gamtildeUU21 + 2*GamtildeLLL012*GamtildeULL100*gamtildeUU02 + 2*GamtildeLLL012*GamtildeULL110*gamtildeUU12 + 2*GamtildeLLL012*GamtildeULL120*gamtildeUU22 + GamtildeLLL020*GamtildeULL000*gamtildeUU20 + GamtildeLLL020*GamtildeULL001*gamtildeUU21 + GamtildeLLL020*GamtildeULL002*gamtildeUU22 + 2*GamtildeLLL020*GamtildeULL200*gamtildeUU00 + 2*GamtildeLLL020*GamtildeULL210*gamtildeUU10 + 2*GamtildeLLL020*GamtildeULL220*gamtildeUU20 + 2*GamtildeLLL021*GamtildeULL200*gamtildeUU01 + 2*GamtildeLLL021*GamtildeULL210*gamtildeUU11 + 2*GamtildeLLL021*GamtildeULL220*gamtildeUU21 + 2*GamtildeLLL022*GamtildeULL200*gamtildeUU02 + 2*GamtildeLLL022*GamtildeULL210*gamtildeUU12 + 2*GamtildeLLL022*GamtildeULL220*gamtildeUU22 + GamtildeLLL100*GamtildeULL100*gamtildeUU00 + GamtildeLLL100*GamtildeULL101*gamtildeUU01 + GamtildeLLL100*GamtildeULL102*gamtildeUU02 + GamtildeLLL110*GamtildeULL100*gamtildeUU10 + GamtildeLLL110*GamtildeULL101*gamtildeUU11 + GamtildeLLL110*GamtildeULL102*gamtildeUU12 + GamtildeLLL120*GamtildeULL100*gamtildeUU20 + GamtildeLLL120*GamtildeULL101*gamtildeUU21 + GamtildeLLL120*GamtildeULL102*gamtildeUU22 + GamtildeLLL200*GamtildeULL200*gamtildeUU00 + GamtildeLLL200*GamtildeULL201*gamtildeUU01 + GamtildeLLL200*GamtildeULL202*gamtildeUU02 + GamtildeLLL210*GamtildeULL200*gamtildeUU10 + GamtildeLLL210*GamtildeULL201*gamtildeUU11 + GamtildeLLL210*GamtildeULL202*gamtildeUU12 + GamtildeLLL220*GamtildeULL200*gamtildeUU20 + GamtildeLLL220*GamtildeULL201*gamtildeUU21 + GamtildeLLL220*GamtildeULL202*gamtildeUU22 + 1.0*dGamtildeU00*gamtildeLL00 + 1.0*dGamtildeU10*gamtildeLL10 + 1.0*dGamtildeU20*gamtildeLL20 - 0.5*ddgamtildeLL0000*gamtildeUU00 - 0.5*ddgamtildeLL0001*gamtildeUU01 - 0.5*ddgamtildeLL0002*gamtildeUU02 - 0.5*ddgamtildeLL0010*gamtildeUU10 - 0.5*ddgamtildeLL0011*gamtildeUU11 - 0.5*ddgamtildeLL0012*gamtildeUU12 - 0.5*ddgamtildeLL0020*gamtildeUU20 - 0.5*ddgamtildeLL0021*gamtildeUU21 - 0.5*ddgamtildeLL0022*gamtildeUU22;
        amrex::Real RtildeLL01 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL001*GamtildeULL000*gamtildeUU00 + GamtildeLLL001*GamtildeULL001*gamtildeUU01 + GamtildeLLL001*GamtildeULL002*gamtildeUU02 + GamtildeLLL011*GamtildeULL000*gamtildeUU10 + GamtildeLLL011*GamtildeULL001*gamtildeUU11 + GamtildeLLL011*GamtildeULL002*gamtildeUU12 + GamtildeLLL021*GamtildeULL000*gamtildeUU20 + GamtildeLLL021*GamtildeULL001*gamtildeUU21 + GamtildeLLL021*GamtildeULL002*gamtildeUU22 + GamtildeLLL101*GamtildeULL100*gamtildeUU00 + GamtildeLLL101*GamtildeULL101*gamtildeUU01 + GamtildeLLL101*GamtildeULL102*gamtildeUU02 + GamtildeLLL111*GamtildeULL100*gamtildeUU10 + GamtildeLLL111*GamtildeULL101*gamtildeUU11 + GamtildeLLL111*GamtildeULL102*gamtildeUU12 + GamtildeLLL121*GamtildeULL100*gamtildeUU20 + GamtildeLLL121*GamtildeULL101*gamtildeUU21 + GamtildeLLL121*GamtildeULL102*gamtildeUU22 + GamtildeLLL201*GamtildeULL200*gamtildeUU00 + GamtildeLLL201*GamtildeULL201*gamtildeUU01 + GamtildeLLL201*GamtildeULL202*gamtildeUU02 + GamtildeLLL211*GamtildeULL200*gamtildeUU10 + GamtildeLLL211*GamtildeULL201*gamtildeUU11 + GamtildeLLL211*GamtildeULL202*gamtildeUU12 + GamtildeLLL221*GamtildeULL200*gamtildeUU20 + GamtildeLLL221*GamtildeULL201*gamtildeUU21 + GamtildeLLL221*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL0100*gamtildeUU00 - 0.5*ddgamtildeLL0101*gamtildeUU01 - 0.5*ddgamtildeLL0102*gamtildeUU02 - 0.5*ddgamtildeLL0110*gamtildeUU10 - 0.5*ddgamtildeLL0111*gamtildeUU11 - 0.5*ddgamtildeLL0112*gamtildeUU12 - 0.5*ddgamtildeLL0120*gamtildeUU20 - 0.5*ddgamtildeLL0121*gamtildeUU21 - 0.5*ddgamtildeLL0122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL02 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL002*GamtildeULL000*gamtildeUU00 + GamtildeLLL002*GamtildeULL001*gamtildeUU01 + GamtildeLLL002*GamtildeULL002*gamtildeUU02 + GamtildeLLL012*GamtildeULL000*gamtildeUU10 + GamtildeLLL012*GamtildeULL001*gamtildeUU11 + GamtildeLLL012*GamtildeULL002*gamtildeUU12 + GamtildeLLL022*GamtildeULL000*gamtildeUU20 + GamtildeLLL022*GamtildeULL001*gamtildeUU21 + GamtildeLLL022*GamtildeULL002*gamtildeUU22 + GamtildeLLL102*GamtildeULL100*gamtildeUU00 + GamtildeLLL102*GamtildeULL101*gamtildeUU01 + GamtildeLLL102*GamtildeULL102*gamtildeUU02 + GamtildeLLL112*GamtildeULL100*gamtildeUU10 + GamtildeLLL112*GamtildeULL101*gamtildeUU11 + GamtildeLLL112*GamtildeULL102*gamtildeUU12 + GamtildeLLL122*GamtildeULL100*gamtildeUU20 + GamtildeLLL122*GamtildeULL101*gamtildeUU21 + GamtildeLLL122*GamtildeULL102*gamtildeUU22 + GamtildeLLL202*GamtildeULL200*gamtildeUU00 + GamtildeLLL202*GamtildeULL201*gamtildeUU01 + GamtildeLLL202*GamtildeULL202*gamtildeUU02 + GamtildeLLL212*GamtildeULL200*gamtildeUU10 + GamtildeLLL212*GamtildeULL201*gamtildeUU11 + GamtildeLLL212*GamtildeULL202*gamtildeUU12 + GamtildeLLL222*GamtildeULL200*gamtildeUU20 + GamtildeLLL222*GamtildeULL201*gamtildeUU21 + GamtildeLLL222*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL0200*gamtildeUU00 - 0.5*ddgamtildeLL0201*gamtildeUU01 - 0.5*ddgamtildeLL0202*gamtildeUU02 - 0.5*ddgamtildeLL0210*gamtildeUU10 - 0.5*ddgamtildeLL0211*gamtildeUU11 - 0.5*ddgamtildeLL0212*gamtildeUU12 - 0.5*ddgamtildeLL0220*gamtildeUU20 - 0.5*ddgamtildeLL0221*gamtildeUU21 - 0.5*ddgamtildeLL0222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL10 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL000*GamtildeULL010*gamtildeUU00 + GamtildeLLL000*GamtildeULL011*gamtildeUU01 + GamtildeLLL000*GamtildeULL012*gamtildeUU02 + GamtildeLLL010*GamtildeULL010*gamtildeUU10 + GamtildeLLL010*GamtildeULL011*gamtildeUU11 + GamtildeLLL010*GamtildeULL012*gamtildeUU12 + GamtildeLLL020*GamtildeULL010*gamtildeUU20 + GamtildeLLL020*GamtildeULL011*gamtildeUU21 + GamtildeLLL020*GamtildeULL012*gamtildeUU22 + GamtildeLLL100*GamtildeULL110*gamtildeUU00 + GamtildeLLL100*GamtildeULL111*gamtildeUU01 + GamtildeLLL100*GamtildeULL112*gamtildeUU02 + GamtildeLLL110*GamtildeULL110*gamtildeUU10 + GamtildeLLL110*GamtildeULL111*gamtildeUU11 + GamtildeLLL110*GamtildeULL112*gamtildeUU12 + GamtildeLLL120*GamtildeULL110*gamtildeUU20 + GamtildeLLL120*GamtildeULL111*gamtildeUU21 + GamtildeLLL120*GamtildeULL112*gamtildeUU22 + GamtildeLLL200*GamtildeULL210*gamtildeUU00 + GamtildeLLL200*GamtildeULL211*gamtildeUU01 + GamtildeLLL200*GamtildeULL212*gamtildeUU02 + GamtildeLLL210*GamtildeULL210*gamtildeUU10 + GamtildeLLL210*GamtildeULL211*gamtildeUU11 + GamtildeLLL210*GamtildeULL212*gamtildeUU12 + GamtildeLLL220*GamtildeULL210*gamtildeUU20 + GamtildeLLL220*GamtildeULL211*gamtildeUU21 + GamtildeLLL220*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL1000*gamtildeUU00 - 0.5*ddgamtildeLL1001*gamtildeUU01 - 0.5*ddgamtildeLL1002*gamtildeUU02 - 0.5*ddgamtildeLL1010*gamtildeUU10 - 0.5*ddgamtildeLL1011*gamtildeUU11 - 0.5*ddgamtildeLL1012*gamtildeUU12 - 0.5*ddgamtildeLL1020*gamtildeUU20 - 0.5*ddgamtildeLL1021*gamtildeUU21 - 0.5*ddgamtildeLL1022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL11 = 1.0*GamtildeDU0*GamtildeLLL110 + 1.0*GamtildeDU1*GamtildeLLL111 + 1.0*GamtildeDU2*GamtildeLLL112 + GamtildeLLL001*GamtildeULL010*gamtildeUU00 + GamtildeLLL001*GamtildeULL011*gamtildeUU01 + GamtildeLLL001*GamtildeULL012*gamtildeUU02 + GamtildeLLL011*GamtildeULL010*gamtildeUU10 + GamtildeLLL011*GamtildeULL011*gamtildeUU11 + GamtildeLLL011*GamtildeULL012*gamtildeUU12 + GamtildeLLL021*GamtildeULL010*gamtildeUU20 + GamtildeLLL021*GamtildeULL011*gamtildeUU21 + GamtildeLLL021*GamtildeULL012*gamtildeUU22 + 2*GamtildeLLL100*GamtildeULL001*gamtildeUU00 + 2*GamtildeLLL100*GamtildeULL011*gamtildeUU10 + 2*GamtildeLLL100*GamtildeULL021*gamtildeUU20 + 2*GamtildeLLL101*GamtildeULL001*gamtildeUU01 + 2*GamtildeLLL101*GamtildeULL011*gamtildeUU11 + 2*GamtildeLLL101*GamtildeULL021*gamtildeUU21 + GamtildeLLL101*GamtildeULL110*gamtildeUU00 + GamtildeLLL101*GamtildeULL111*gamtildeUU01 + GamtildeLLL101*GamtildeULL112*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL001*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL011*gamtildeUU12 + 2*GamtildeLLL102*GamtildeULL021*gamtildeUU22 + 2*GamtildeLLL110*GamtildeULL101*gamtildeUU00 + 2*GamtildeLLL110*GamtildeULL111*gamtildeUU10 + 2*GamtildeLLL110*GamtildeULL121*gamtildeUU20 + 2*GamtildeLLL111*GamtildeULL101*gamtildeUU01 + GamtildeLLL111*GamtildeULL110*gamtildeUU10 + 3*GamtildeLLL111*GamtildeULL111*gamtildeUU11 + GamtildeLLL111*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL111*GamtildeULL121*gamtildeUU21 + 2*GamtildeLLL112*GamtildeULL101*gamtildeUU02 + 2*GamtildeLLL112*GamtildeULL111*gamtildeUU12 + 2*GamtildeLLL112*GamtildeULL121*gamtildeUU22 + 2*GamtildeLLL120*GamtildeULL201*gamtildeUU00 + 2*GamtildeLLL120*GamtildeULL211*gamtildeUU10 + 2*GamtildeLLL120*GamtildeULL221*gamtildeUU20 + GamtildeLLL121*GamtildeULL110*gamtildeUU20 + GamtildeLLL121*GamtildeULL111*gamtildeUU21 + GamtildeLLL121*GamtildeULL112*gamtildeUU22 + 2*GamtildeLLL121*GamtildeULL201*gamtildeUU01 + 2*GamtildeLLL121*GamtildeULL211*gamtildeUU11 + 2*GamtildeLLL121*GamtildeULL221*gamtildeUU21 + 2*GamtildeLLL122*GamtildeULL201*gamtildeUU02 + 2*GamtildeLLL122*GamtildeULL211*gamtildeUU12 + 2*GamtildeLLL122*GamtildeULL221*gamtildeUU22 + GamtildeLLL201*GamtildeULL210*gamtildeUU00 + GamtildeLLL201*GamtildeULL211*gamtildeUU01 + GamtildeLLL201*GamtildeULL212*gamtildeUU02 + GamtildeLLL211*GamtildeULL210*gamtildeUU10 + GamtildeLLL211*GamtildeULL211*gamtildeUU11 + GamtildeLLL211*GamtildeULL212*gamtildeUU12 + GamtildeLLL221*GamtildeULL210*gamtildeUU20 + GamtildeLLL221*GamtildeULL211*gamtildeUU21 + GamtildeLLL221*GamtildeULL212*gamtildeUU22 + 1.0*dGamtildeU01*gamtildeLL01 + 1.0*dGamtildeU11*gamtildeLL11 + 1.0*dGamtildeU21*gamtildeLL21 - 0.5*ddgamtildeLL1100*gamtildeUU00 - 0.5*ddgamtildeLL1101*gamtildeUU01 - 0.5*ddgamtildeLL1102*gamtildeUU02 - 0.5*ddgamtildeLL1110*gamtildeUU10 - 0.5*ddgamtildeLL1111*gamtildeUU11 - 0.5*ddgamtildeLL1112*gamtildeUU12 - 0.5*ddgamtildeLL1120*gamtildeUU20 - 0.5*ddgamtildeLL1121*gamtildeUU21 - 0.5*ddgamtildeLL1122*gamtildeUU22;
        amrex::Real RtildeLL12 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL002*GamtildeULL010*gamtildeUU00 + GamtildeLLL002*GamtildeULL011*gamtildeUU01 + GamtildeLLL002*GamtildeULL012*gamtildeUU02 + GamtildeLLL012*GamtildeULL010*gamtildeUU10 + GamtildeLLL012*GamtildeULL011*gamtildeUU11 + GamtildeLLL012*GamtildeULL012*gamtildeUU12 + GamtildeLLL022*GamtildeULL010*gamtildeUU20 + GamtildeLLL022*GamtildeULL011*gamtildeUU21 + GamtildeLLL022*GamtildeULL012*gamtildeUU22 + GamtildeLLL102*GamtildeULL110*gamtildeUU00 + GamtildeLLL102*GamtildeULL111*gamtildeUU01 + GamtildeLLL102*GamtildeULL112*gamtildeUU02 + GamtildeLLL112*GamtildeULL110*gamtildeUU10 + GamtildeLLL112*GamtildeULL111*gamtildeUU11 + GamtildeLLL112*GamtildeULL112*gamtildeUU12 + GamtildeLLL122*GamtildeULL110*gamtildeUU20 + GamtildeLLL122*GamtildeULL111*gamtildeUU21 + GamtildeLLL122*GamtildeULL112*gamtildeUU22 + GamtildeLLL202*GamtildeULL210*gamtildeUU00 + GamtildeLLL202*GamtildeULL211*gamtildeUU01 + GamtildeLLL202*GamtildeULL212*gamtildeUU02 + GamtildeLLL212*GamtildeULL210*gamtildeUU10 + GamtildeLLL212*GamtildeULL211*gamtildeUU11 + GamtildeLLL212*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL210*gamtildeUU20 + GamtildeLLL222*GamtildeULL211*gamtildeUU21 + GamtildeLLL222*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL1200*gamtildeUU00 - 0.5*ddgamtildeLL1201*gamtildeUU01 - 0.5*ddgamtildeLL1202*gamtildeUU02 - 0.5*ddgamtildeLL1210*gamtildeUU10 - 0.5*ddgamtildeLL1211*gamtildeUU11 - 0.5*ddgamtildeLL1212*gamtildeUU12 - 0.5*ddgamtildeLL1220*gamtildeUU20 - 0.5*ddgamtildeLL1221*gamtildeUU21 - 0.5*ddgamtildeLL1222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL20 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL000*GamtildeULL020*gamtildeUU00 + GamtildeLLL000*GamtildeULL021*gamtildeUU01 + GamtildeLLL000*GamtildeULL022*gamtildeUU02 + GamtildeLLL010*GamtildeULL020*gamtildeUU10 + GamtildeLLL010*GamtildeULL021*gamtildeUU11 + GamtildeLLL010*GamtildeULL022*gamtildeUU12 + GamtildeLLL020*GamtildeULL020*gamtildeUU20 + GamtildeLLL020*GamtildeULL021*gamtildeUU21 + GamtildeLLL020*GamtildeULL022*gamtildeUU22 + GamtildeLLL100*GamtildeULL120*gamtildeUU00 + GamtildeLLL100*GamtildeULL121*gamtildeUU01 + GamtildeLLL100*GamtildeULL122*gamtildeUU02 + GamtildeLLL110*GamtildeULL120*gamtildeUU10 + GamtildeLLL110*GamtildeULL121*gamtildeUU11 + GamtildeLLL110*GamtildeULL122*gamtildeUU12 + GamtildeLLL120*GamtildeULL120*gamtildeUU20 + GamtildeLLL120*GamtildeULL121*gamtildeUU21 + GamtildeLLL120*GamtildeULL122*gamtildeUU22 + GamtildeLLL200*GamtildeULL220*gamtildeUU00 + GamtildeLLL200*GamtildeULL221*gamtildeUU01 + GamtildeLLL200*GamtildeULL222*gamtildeUU02 + GamtildeLLL210*GamtildeULL220*gamtildeUU10 + GamtildeLLL210*GamtildeULL221*gamtildeUU11 + GamtildeLLL210*GamtildeULL222*gamtildeUU12 + GamtildeLLL220*GamtildeULL220*gamtildeUU20 + GamtildeLLL220*GamtildeULL221*gamtildeUU21 + GamtildeLLL220*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL2000*gamtildeUU00 - 0.5*ddgamtildeLL2001*gamtildeUU01 - 0.5*ddgamtildeLL2002*gamtildeUU02 - 0.5*ddgamtildeLL2010*gamtildeUU10 - 0.5*ddgamtildeLL2011*gamtildeUU11 - 0.5*ddgamtildeLL2012*gamtildeUU12 - 0.5*ddgamtildeLL2020*gamtildeUU20 - 0.5*ddgamtildeLL2021*gamtildeUU21 - 0.5*ddgamtildeLL2022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL21 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL001*GamtildeULL020*gamtildeUU00 + GamtildeLLL001*GamtildeULL021*gamtildeUU01 + GamtildeLLL001*GamtildeULL022*gamtildeUU02 + GamtildeLLL011*GamtildeULL020*gamtildeUU10 + GamtildeLLL011*GamtildeULL021*gamtildeUU11 + GamtildeLLL011*GamtildeULL022*gamtildeUU12 + GamtildeLLL021*GamtildeULL020*gamtildeUU20 + GamtildeLLL021*GamtildeULL021*gamtildeUU21 + GamtildeLLL021*GamtildeULL022*gamtildeUU22 + GamtildeLLL101*GamtildeULL120*gamtildeUU00 + GamtildeLLL101*GamtildeULL121*gamtildeUU01 + GamtildeLLL101*GamtildeULL122*gamtildeUU02 + GamtildeLLL111*GamtildeULL120*gamtildeUU10 + GamtildeLLL111*GamtildeULL121*gamtildeUU11 + GamtildeLLL111*GamtildeULL122*gamtildeUU12 + GamtildeLLL121*GamtildeULL120*gamtildeUU20 + GamtildeLLL121*GamtildeULL121*gamtildeUU21 + GamtildeLLL121*GamtildeULL122*gamtildeUU22 + GamtildeLLL201*GamtildeULL220*gamtildeUU00 + GamtildeLLL201*GamtildeULL221*gamtildeUU01 + GamtildeLLL201*GamtildeULL222*gamtildeUU02 + GamtildeLLL211*GamtildeULL220*gamtildeUU10 + GamtildeLLL211*GamtildeULL221*gamtildeUU11 + GamtildeLLL211*GamtildeULL222*gamtildeUU12 + GamtildeLLL221*GamtildeULL220*gamtildeUU20 + GamtildeLLL221*GamtildeULL221*gamtildeUU21 + GamtildeLLL221*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL2100*gamtildeUU00 - 0.5*ddgamtildeLL2101*gamtildeUU01 - 0.5*ddgamtildeLL2102*gamtildeUU02 - 0.5*ddgamtildeLL2110*gamtildeUU10 - 0.5*ddgamtildeLL2111*gamtildeUU11 - 0.5*ddgamtildeLL2112*gamtildeUU12 - 0.5*ddgamtildeLL2120*gamtildeUU20 - 0.5*ddgamtildeLL2121*gamtildeUU21 - 0.5*ddgamtildeLL2122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL22 = 1.0*GamtildeDU0*GamtildeLLL220 + 1.0*GamtildeDU1*GamtildeLLL221 + 1.0*GamtildeDU2*GamtildeLLL222 + GamtildeLLL002*GamtildeULL020*gamtildeUU00 + GamtildeLLL002*GamtildeULL021*gamtildeUU01 + GamtildeLLL002*GamtildeULL022*gamtildeUU02 + GamtildeLLL012*GamtildeULL020*gamtildeUU10 + GamtildeLLL012*GamtildeULL021*gamtildeUU11 + GamtildeLLL012*GamtildeULL022*gamtildeUU12 + GamtildeLLL022*GamtildeULL020*gamtildeUU20 + GamtildeLLL022*GamtildeULL021*gamtildeUU21 + GamtildeLLL022*GamtildeULL022*gamtildeUU22 + GamtildeLLL102*GamtildeULL120*gamtildeUU00 + GamtildeLLL102*GamtildeULL121*gamtildeUU01 + GamtildeLLL102*GamtildeULL122*gamtildeUU02 + GamtildeLLL112*GamtildeULL120*gamtildeUU10 + GamtildeLLL112*GamtildeULL121*gamtildeUU11 + GamtildeLLL112*GamtildeULL122*gamtildeUU12 + GamtildeLLL122*GamtildeULL120*gamtildeUU20 + GamtildeLLL122*GamtildeULL121*gamtildeUU21 + GamtildeLLL122*GamtildeULL122*gamtildeUU22 + 2*GamtildeLLL200*GamtildeULL002*gamtildeUU00 + 2*GamtildeLLL200*GamtildeULL012*gamtildeUU10 + 2*GamtildeLLL200*GamtildeULL022*gamtildeUU20 + 2*GamtildeLLL201*GamtildeULL002*gamtildeUU01 + 2*GamtildeLLL201*GamtildeULL012*gamtildeUU11 + 2*GamtildeLLL201*GamtildeULL022*gamtildeUU21 + 2*GamtildeLLL202*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL202*GamtildeULL012*gamtildeUU12 + 2*GamtildeLLL202*GamtildeULL022*gamtildeUU22 + GamtildeLLL202*GamtildeULL220*gamtildeUU00 + GamtildeLLL202*GamtildeULL221*gamtildeUU01 + GamtildeLLL202*GamtildeULL222*gamtildeUU02 + 2*GamtildeLLL210*GamtildeULL102*gamtildeUU00 + 2*GamtildeLLL210*GamtildeULL112*gamtildeUU10 + 2*GamtildeLLL210*GamtildeULL122*gamtildeUU20 + 2*GamtildeLLL211*GamtildeULL102*gamtildeUU01 + 2*GamtildeLLL211*GamtildeULL112*gamtildeUU11 + 2*GamtildeLLL211*GamtildeULL122*gamtildeUU21 + 2*GamtildeLLL212*GamtildeULL102*gamtildeUU02 + 2*GamtildeLLL212*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL212*GamtildeULL122*gamtildeUU22 + GamtildeLLL212*GamtildeULL220*gamtildeUU10 + GamtildeLLL212*GamtildeULL221*gamtildeUU11 + GamtildeLLL212*GamtildeULL222*gamtildeUU12 + 2*GamtildeLLL220*GamtildeULL202*gamtildeUU00 + 2*GamtildeLLL220*GamtildeULL212*gamtildeUU10 + 2*GamtildeLLL220*GamtildeULL222*gamtildeUU20 + 2*GamtildeLLL221*GamtildeULL202*gamtildeUU01 + 2*GamtildeLLL221*GamtildeULL212*gamtildeUU11 + 2*GamtildeLLL221*GamtildeULL222*gamtildeUU21 + 2*GamtildeLLL222*GamtildeULL202*gamtildeUU02 + 2*GamtildeLLL222*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL220*gamtildeUU20 + GamtildeLLL222*GamtildeULL221*gamtildeUU21 + 3*GamtildeLLL222*GamtildeULL222*gamtildeUU22 + 1.0*dGamtildeU02*gamtildeLL02 + 1.0*dGamtildeU12*gamtildeLL12 + 1.0*dGamtildeU22*gamtildeLL22 - 0.5*ddgamtildeLL2200*gamtildeUU00 - 0.5*ddgamtildeLL2201*gamtildeUU01 - 0.5*ddgamtildeLL2202*gamtildeUU02 - 0.5*ddgamtildeLL2210*gamtildeUU10 - 0.5*ddgamtildeLL2211*gamtildeUU11 - 0.5*ddgamtildeLL2212*gamtildeUU12 - 0.5*ddgamtildeLL2220*gamtildeUU20 - 0.5*ddgamtildeLL2221*gamtildeUU21 - 0.5*ddgamtildeLL2222*gamtildeUU22;
        amrex::Real Rtildesclr = 0 + RtildeLL00*gamtildeUU00 + RtildeLL01*gamtildeUU01 + RtildeLL02*gamtildeUU02 + RtildeLL10*gamtildeUU10 + RtildeLL11*gamtildeUU11 + RtildeLL12*gamtildeUU12 + RtildeLL20*gamtildeUU20 + RtildeLL21*gamtildeUU21 + RtildeLL22*gamtildeUU22;
        amrex::Real DtildeDtildephiLL00 = -GamtildeULL000*dphi0 - GamtildeULL100*dphi1 - GamtildeULL200*dphi2 + ddphi00;
        amrex::Real DtildeDtildephiLL01 = -GamtildeULL001*dphi0 - GamtildeULL101*dphi1 - GamtildeULL201*dphi2 + ddphi01;
        amrex::Real DtildeDtildephiLL02 = -GamtildeULL002*dphi0 - GamtildeULL102*dphi1 - GamtildeULL202*dphi2 + ddphi02;
        amrex::Real DtildeDtildephiLL10 = -GamtildeULL010*dphi0 - GamtildeULL110*dphi1 - GamtildeULL210*dphi2 + ddphi10;
        amrex::Real DtildeDtildephiLL11 = -GamtildeULL011*dphi0 - GamtildeULL111*dphi1 - GamtildeULL211*dphi2 + ddphi11;
        amrex::Real DtildeDtildephiLL12 = -GamtildeULL012*dphi0 - GamtildeULL112*dphi1 - GamtildeULL212*dphi2 + ddphi12;
        amrex::Real DtildeDtildephiLL20 = -GamtildeULL020*dphi0 - GamtildeULL120*dphi1 - GamtildeULL220*dphi2 + ddphi20;
        amrex::Real DtildeDtildephiLL21 = -GamtildeULL021*dphi0 - GamtildeULL121*dphi1 - GamtildeULL221*dphi2 + ddphi21;
        amrex::Real DtildeDtildephiLL22 = -GamtildeULL022*dphi0 - GamtildeULL122*dphi1 - GamtildeULL222*dphi2 + ddphi22;
        diag(i, j, k, Diag::H) = 0 + (1.0/8.0)*AtildeLL00*AtildeUU00*std::exp(5*phi) + (1.0/8.0)*AtildeLL01*AtildeUU01*std::exp(5*phi) + (1.0/8.0)*AtildeLL02*AtildeUU02*std::exp(5*phi) + (1.0/8.0)*AtildeLL10*AtildeUU10*std::exp(5*phi) + (1.0/8.0)*AtildeLL11*AtildeUU11*std::exp(5*phi) + (1.0/8.0)*AtildeLL12*AtildeUU12*std::exp(5*phi) + (1.0/8.0)*AtildeLL20*AtildeUU20*std::exp(5*phi) + (1.0/8.0)*AtildeLL21*AtildeUU21*std::exp(5*phi) + (1.0/8.0)*AtildeLL22*AtildeUU22*std::exp(5*phi) + (1.0/8.0)*Rtildesclr*std::exp(phi) + gamtildeUU00*(DtildeDtildephiLL00 + ddphi00)*std::exp(phi) + gamtildeUU01*(DtildeDtildephiLL01 + ddphi01)*std::exp(phi) + gamtildeUU02*(DtildeDtildephiLL02 + ddphi02)*std::exp(phi) + gamtildeUU10*(DtildeDtildephiLL10 + ddphi10)*std::exp(phi) + gamtildeUU11*(DtildeDtildephiLL11 + ddphi11)*std::exp(phi) + gamtildeUU12*(DtildeDtildephiLL12 + ddphi12)*std::exp(phi) + gamtildeUU20*(DtildeDtildephiLL20 + ddphi20)*std::exp(phi) + gamtildeUU21*(DtildeDtildephiLL21 + ddphi21)*std::exp(phi) + gamtildeUU22*(DtildeDtildephiLL22 + ddphi22)*std::exp(phi) - 1.0/12.0*std::pow(Khat + 2*theta, 2)*std::exp(phi);

}
#endif