#ifndef ET_INTEGRATION_RHS_K_H 
#define ET_INTEGRATION_RHS_K_H 

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_rhs(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& rhs_fab, 
        amrex::Array4<amrex::Real const> const& state_fab, 
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo(); 

        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(0) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(0) + domain_xlo[2]; 

        amrex::Real phi = state_fab(i, j, k, Idx::phi);
        amrex::Real gamtildeLL00 = state_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLL01 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL02 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL10 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL11 = state_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLL12 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL20 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL21 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL22 = state_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);
        amrex::Real AtildeLL00 = state_fab(i, j, k, Idx::AtildeLL00);
        amrex::Real AtildeLL01 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL02 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL10 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL11 = state_fab(i, j, k, Idx::AtildeLL11);
        amrex::Real AtildeLL12 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL20 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL21 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL22 = state_fab(i, j, k, Idx::AtildeLL22);
        amrex::Real theta = state_fab(i, j, k, Idx::theta);
        amrex::Real GamtildeU0 = state_fab(i, j, k, Idx::GamtildeU0);
        amrex::Real GamtildeU1 = state_fab(i, j, k, Idx::GamtildeU1);
        amrex::Real GamtildeU2 = state_fab(i, j, k, Idx::GamtildeU2);
        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);
        amrex::Real betaU0 = state_fab(i, j, k, Idx::betaU0);
        amrex::Real betaU1 = state_fab(i, j, k, Idx::betaU1);
        amrex::Real betaU2 = state_fab(i, j, k, Idx::betaU2);
        amrex::Real BU0 = state_fab(i, j, k, Idx::BU0);
        amrex::Real BU1 = state_fab(i, j, k, Idx::BU1);
        amrex::Real BU2 = state_fab(i, j, k, Idx::BU2);
        amrex::Real chi = std::exp(-4*phi);
        amrex::Real dphi0 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/2.0*state_fab(i - 1, j, k, Idx::phi))/dx[0];
        amrex::Real dphi1 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/2.0*state_fab(i, j - 1, k, Idx::phi))/dx[1];
        amrex::Real dphi2 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/2.0*state_fab(i, j, k - 1, Idx::phi))/dx[2];
        amrex::Real ddphi00 = (state_fab(i + 1, j, k, Idx::phi) + state_fab(i - 1, j, k, Idx::phi) - 2*state_fab(i, j, k, Idx::phi))/std::pow(dx[0], 2);
        amrex::Real ddphi01 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::phi) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::phi))/(dx[0]*dx[1]);
        amrex::Real ddphi02 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::phi) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::phi))/(dx[0]*dx[2]);
        amrex::Real ddphi10 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::phi) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::phi))/(dx[0]*dx[1]);
        amrex::Real ddphi11 = (state_fab(i, j + 1, k, Idx::phi) + state_fab(i, j - 1, k, Idx::phi) - 2*state_fab(i, j, k, Idx::phi))/std::pow(dx[1], 2);
        amrex::Real ddphi12 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::phi) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::phi))/(dx[1]*dx[2]);
        amrex::Real ddphi20 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::phi) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::phi))/(dx[0]*dx[2]);
        amrex::Real ddphi21 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::phi) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::phi))/(dx[1]*dx[2]);
        amrex::Real ddphi22 = (state_fab(i, j, k + 1, Idx::phi) + state_fab(i, j, k - 1, Idx::phi) - 2*state_fab(i, j, k, Idx::phi))/std::pow(dx[2], 2);
        amrex::Real KOphi = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::phi) + state_fab(i, j, k + 2, Idx::phi) - 4*state_fab(i, j, k - 1, Idx::phi) + state_fab(i, j, k - 2, Idx::phi) + 6*state_fab(i, j, k, Idx::phi))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::phi) + state_fab(i, j + 2, k, Idx::phi) - 4*state_fab(i, j - 1, k, Idx::phi) + state_fab(i, j - 2, k, Idx::phi) + 6*state_fab(i, j, k, Idx::phi))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::phi) + state_fab(i + 2, j, k, Idx::phi) - 4*state_fab(i - 1, j, k, Idx::phi) + state_fab(i - 2, j, k, Idx::phi) + 6*state_fab(i, j, k, Idx::phi))/dx[0];
        amrex::Real dgamtildeLL000 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real dgamtildeLL001 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real dgamtildeLL002 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL00))/dx[2];
        amrex::Real dgamtildeLL010 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL011 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL012 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL020 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL021 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL022 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL100 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL101 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL102 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL110 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real dgamtildeLL111 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real dgamtildeLL112 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL11))/dx[2];
        amrex::Real dgamtildeLL120 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL121 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL122 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL200 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL201 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL202 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL210 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL211 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL212 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL220 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dgamtildeLL221 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real dgamtildeLL222 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL22))/dx[2];
        amrex::Real ddgamtildeLL0000 = (state_fab(i + 1, j, k, Idx::gamtildeLL00) + state_fab(i - 1, j, k, Idx::gamtildeLL00) - 2*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0001 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0002 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0010 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0011 = (state_fab(i, j + 1, k, Idx::gamtildeLL00) + state_fab(i, j - 1, k, Idx::gamtildeLL00) - 2*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0012 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0020 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0021 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0022 = (state_fab(i, j, k + 1, Idx::gamtildeLL00) + state_fab(i, j, k - 1, Idx::gamtildeLL00) - 2*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0100 = (state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i - 1, j, k, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0101 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0102 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0110 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0111 = (state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j - 1, k, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0112 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0120 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0121 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0122 = (state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k - 1, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0200 = (state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i - 1, j, k, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0201 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0202 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0210 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0211 = (state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j - 1, k, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0212 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0220 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0221 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0222 = (state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k - 1, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1000 = (state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i - 1, j, k, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1001 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1002 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1010 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1011 = (state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j - 1, k, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1012 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1020 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1021 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1022 = (state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k - 1, Idx::gamtildeLL01) - 2*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1100 = (state_fab(i + 1, j, k, Idx::gamtildeLL11) + state_fab(i - 1, j, k, Idx::gamtildeLL11) - 2*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1101 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1102 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1110 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1111 = (state_fab(i, j + 1, k, Idx::gamtildeLL11) + state_fab(i, j - 1, k, Idx::gamtildeLL11) - 2*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1112 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1120 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1121 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1122 = (state_fab(i, j, k + 1, Idx::gamtildeLL11) + state_fab(i, j, k - 1, Idx::gamtildeLL11) - 2*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1200 = (state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i - 1, j, k, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1201 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1202 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1210 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1211 = (state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j - 1, k, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1212 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1220 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1221 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1222 = (state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k - 1, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2000 = (state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i - 1, j, k, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2001 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2002 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2010 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2011 = (state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j - 1, k, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2012 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2020 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2021 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2022 = (state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k - 1, Idx::gamtildeLL02) - 2*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2100 = (state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i - 1, j, k, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2101 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2102 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2110 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2111 = (state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j - 1, k, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2112 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2120 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2121 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2122 = (state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k - 1, Idx::gamtildeLL12) - 2*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2200 = (state_fab(i + 1, j, k, Idx::gamtildeLL22) + state_fab(i - 1, j, k, Idx::gamtildeLL22) - 2*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2201 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2202 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2210 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2211 = (state_fab(i, j + 1, k, Idx::gamtildeLL22) + state_fab(i, j - 1, k, Idx::gamtildeLL22) - 2*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2212 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2220 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2221 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2222 = (state_fab(i, j, k + 1, Idx::gamtildeLL22) + state_fab(i, j, k - 1, Idx::gamtildeLL22) - 2*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[2], 2);
        amrex::Real KOgamtildeLL00 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL00) + state_fab(i, j, k + 2, Idx::gamtildeLL00) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL00) + state_fab(i, j, k - 2, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL00) + state_fab(i, j + 2, k, Idx::gamtildeLL00) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL00) + state_fab(i, j - 2, k, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL00) + state_fab(i + 2, j, k, Idx::gamtildeLL00) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL00) + state_fab(i - 2, j, k, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real KOgamtildeLL01 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k + 2, Idx::gamtildeLL01) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL01) + state_fab(i, j, k - 2, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j + 2, k, Idx::gamtildeLL01) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL01) + state_fab(i, j - 2, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i + 2, j, k, Idx::gamtildeLL01) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL01) + state_fab(i - 2, j, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real KOgamtildeLL02 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k + 2, Idx::gamtildeLL02) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL02) + state_fab(i, j, k - 2, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j + 2, k, Idx::gamtildeLL02) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL02) + state_fab(i, j - 2, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i + 2, j, k, Idx::gamtildeLL02) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL02) + state_fab(i - 2, j, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real KOgamtildeLL10 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k + 2, Idx::gamtildeLL01) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL01) + state_fab(i, j, k - 2, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j + 2, k, Idx::gamtildeLL01) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL01) + state_fab(i, j - 2, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i + 2, j, k, Idx::gamtildeLL01) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL01) + state_fab(i - 2, j, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real KOgamtildeLL11 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL11) + state_fab(i, j, k + 2, Idx::gamtildeLL11) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL11) + state_fab(i, j, k - 2, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL11) + state_fab(i, j + 2, k, Idx::gamtildeLL11) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL11) + state_fab(i, j - 2, k, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL11) + state_fab(i + 2, j, k, Idx::gamtildeLL11) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL11) + state_fab(i - 2, j, k, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real KOgamtildeLL12 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k + 2, Idx::gamtildeLL12) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL12) + state_fab(i, j, k - 2, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j + 2, k, Idx::gamtildeLL12) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL12) + state_fab(i, j - 2, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i + 2, j, k, Idx::gamtildeLL12) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL12) + state_fab(i - 2, j, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real KOgamtildeLL20 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k + 2, Idx::gamtildeLL02) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL02) + state_fab(i, j, k - 2, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j + 2, k, Idx::gamtildeLL02) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL02) + state_fab(i, j - 2, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i + 2, j, k, Idx::gamtildeLL02) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL02) + state_fab(i - 2, j, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real KOgamtildeLL21 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k + 2, Idx::gamtildeLL12) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL12) + state_fab(i, j, k - 2, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j + 2, k, Idx::gamtildeLL12) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL12) + state_fab(i, j - 2, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i + 2, j, k, Idx::gamtildeLL12) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL12) + state_fab(i - 2, j, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real KOgamtildeLL22 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL22) + state_fab(i, j, k + 2, Idx::gamtildeLL22) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL22) + state_fab(i, j, k - 2, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL22) + state_fab(i, j + 2, k, Idx::gamtildeLL22) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL22) + state_fab(i, j - 2, k, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL22) + state_fab(i + 2, j, k, Idx::gamtildeLL22) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL22) + state_fab(i - 2, j, k, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dKhat0 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/2.0*state_fab(i - 1, j, k, Idx::Khat))/dx[0];
        amrex::Real dKhat1 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/2.0*state_fab(i, j - 1, k, Idx::Khat))/dx[1];
        amrex::Real dKhat2 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/2.0*state_fab(i, j, k - 1, Idx::Khat))/dx[2];
        amrex::Real KOKhat = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::Khat) + state_fab(i, j, k + 2, Idx::Khat) - 4*state_fab(i, j, k - 1, Idx::Khat) + state_fab(i, j, k - 2, Idx::Khat) + 6*state_fab(i, j, k, Idx::Khat))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::Khat) + state_fab(i, j + 2, k, Idx::Khat) - 4*state_fab(i, j - 1, k, Idx::Khat) + state_fab(i, j - 2, k, Idx::Khat) + 6*state_fab(i, j, k, Idx::Khat))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::Khat) + state_fab(i + 2, j, k, Idx::Khat) - 4*state_fab(i - 1, j, k, Idx::Khat) + state_fab(i - 2, j, k, Idx::Khat) + 6*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real dAtildeLL000 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL00) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real dAtildeLL001 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL00) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL00))/dx[1];
        amrex::Real dAtildeLL002 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL00) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL00))/dx[2];
        amrex::Real dAtildeLL010 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL011 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL012 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL020 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL021 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL022 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL100 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL101 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL102 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL110 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL11) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real dAtildeLL111 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL11) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL11))/dx[1];
        amrex::Real dAtildeLL112 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL11) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL11))/dx[2];
        amrex::Real dAtildeLL120 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL121 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL122 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL200 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL201 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL202 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL210 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL211 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL212 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL220 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL22) - 1.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real dAtildeLL221 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL22) - 1.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL22))/dx[1];
        amrex::Real dAtildeLL222 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL22) - 1.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL22))/dx[2];
        amrex::Real KOAtildeLL00 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL00) + state_fab(i, j, k + 2, Idx::AtildeLL00) - 4*state_fab(i, j, k - 1, Idx::AtildeLL00) + state_fab(i, j, k - 2, Idx::AtildeLL00) + 6*state_fab(i, j, k, Idx::AtildeLL00))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL00) + state_fab(i, j + 2, k, Idx::AtildeLL00) - 4*state_fab(i, j - 1, k, Idx::AtildeLL00) + state_fab(i, j - 2, k, Idx::AtildeLL00) + 6*state_fab(i, j, k, Idx::AtildeLL00))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL00) + state_fab(i + 2, j, k, Idx::AtildeLL00) - 4*state_fab(i - 1, j, k, Idx::AtildeLL00) + state_fab(i - 2, j, k, Idx::AtildeLL00) + 6*state_fab(i, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real KOAtildeLL01 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL01) + state_fab(i, j, k + 2, Idx::AtildeLL01) - 4*state_fab(i, j, k - 1, Idx::AtildeLL01) + state_fab(i, j, k - 2, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL01) + state_fab(i, j + 2, k, Idx::AtildeLL01) - 4*state_fab(i, j - 1, k, Idx::AtildeLL01) + state_fab(i, j - 2, k, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL01) + state_fab(i + 2, j, k, Idx::AtildeLL01) - 4*state_fab(i - 1, j, k, Idx::AtildeLL01) + state_fab(i - 2, j, k, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real KOAtildeLL02 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL02) + state_fab(i, j, k + 2, Idx::AtildeLL02) - 4*state_fab(i, j, k - 1, Idx::AtildeLL02) + state_fab(i, j, k - 2, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL02) + state_fab(i, j + 2, k, Idx::AtildeLL02) - 4*state_fab(i, j - 1, k, Idx::AtildeLL02) + state_fab(i, j - 2, k, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL02) + state_fab(i + 2, j, k, Idx::AtildeLL02) - 4*state_fab(i - 1, j, k, Idx::AtildeLL02) + state_fab(i - 2, j, k, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real KOAtildeLL10 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL01) + state_fab(i, j, k + 2, Idx::AtildeLL01) - 4*state_fab(i, j, k - 1, Idx::AtildeLL01) + state_fab(i, j, k - 2, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL01) + state_fab(i, j + 2, k, Idx::AtildeLL01) - 4*state_fab(i, j - 1, k, Idx::AtildeLL01) + state_fab(i, j - 2, k, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL01) + state_fab(i + 2, j, k, Idx::AtildeLL01) - 4*state_fab(i - 1, j, k, Idx::AtildeLL01) + state_fab(i - 2, j, k, Idx::AtildeLL01) + 6*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real KOAtildeLL11 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL11) + state_fab(i, j, k + 2, Idx::AtildeLL11) - 4*state_fab(i, j, k - 1, Idx::AtildeLL11) + state_fab(i, j, k - 2, Idx::AtildeLL11) + 6*state_fab(i, j, k, Idx::AtildeLL11))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL11) + state_fab(i, j + 2, k, Idx::AtildeLL11) - 4*state_fab(i, j - 1, k, Idx::AtildeLL11) + state_fab(i, j - 2, k, Idx::AtildeLL11) + 6*state_fab(i, j, k, Idx::AtildeLL11))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL11) + state_fab(i + 2, j, k, Idx::AtildeLL11) - 4*state_fab(i - 1, j, k, Idx::AtildeLL11) + state_fab(i - 2, j, k, Idx::AtildeLL11) + 6*state_fab(i, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real KOAtildeLL12 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL12) + state_fab(i, j, k + 2, Idx::AtildeLL12) - 4*state_fab(i, j, k - 1, Idx::AtildeLL12) + state_fab(i, j, k - 2, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL12) + state_fab(i, j + 2, k, Idx::AtildeLL12) - 4*state_fab(i, j - 1, k, Idx::AtildeLL12) + state_fab(i, j - 2, k, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL12) + state_fab(i + 2, j, k, Idx::AtildeLL12) - 4*state_fab(i - 1, j, k, Idx::AtildeLL12) + state_fab(i - 2, j, k, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real KOAtildeLL20 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL02) + state_fab(i, j, k + 2, Idx::AtildeLL02) - 4*state_fab(i, j, k - 1, Idx::AtildeLL02) + state_fab(i, j, k - 2, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL02) + state_fab(i, j + 2, k, Idx::AtildeLL02) - 4*state_fab(i, j - 1, k, Idx::AtildeLL02) + state_fab(i, j - 2, k, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL02) + state_fab(i + 2, j, k, Idx::AtildeLL02) - 4*state_fab(i - 1, j, k, Idx::AtildeLL02) + state_fab(i - 2, j, k, Idx::AtildeLL02) + 6*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real KOAtildeLL21 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL12) + state_fab(i, j, k + 2, Idx::AtildeLL12) - 4*state_fab(i, j, k - 1, Idx::AtildeLL12) + state_fab(i, j, k - 2, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL12) + state_fab(i, j + 2, k, Idx::AtildeLL12) - 4*state_fab(i, j - 1, k, Idx::AtildeLL12) + state_fab(i, j - 2, k, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL12) + state_fab(i + 2, j, k, Idx::AtildeLL12) - 4*state_fab(i - 1, j, k, Idx::AtildeLL12) + state_fab(i - 2, j, k, Idx::AtildeLL12) + 6*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real KOAtildeLL22 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::AtildeLL22) + state_fab(i, j, k + 2, Idx::AtildeLL22) - 4*state_fab(i, j, k - 1, Idx::AtildeLL22) + state_fab(i, j, k - 2, Idx::AtildeLL22) + 6*state_fab(i, j, k, Idx::AtildeLL22))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::AtildeLL22) + state_fab(i, j + 2, k, Idx::AtildeLL22) - 4*state_fab(i, j - 1, k, Idx::AtildeLL22) + state_fab(i, j - 2, k, Idx::AtildeLL22) + 6*state_fab(i, j, k, Idx::AtildeLL22))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::AtildeLL22) + state_fab(i + 2, j, k, Idx::AtildeLL22) - 4*state_fab(i - 1, j, k, Idx::AtildeLL22) + state_fab(i - 2, j, k, Idx::AtildeLL22) + 6*state_fab(i, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real dtheta0 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/2.0*state_fab(i - 1, j, k, Idx::theta))/dx[0];
        amrex::Real dtheta1 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/2.0*state_fab(i, j - 1, k, Idx::theta))/dx[1];
        amrex::Real dtheta2 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/2.0*state_fab(i, j, k - 1, Idx::theta))/dx[2];
        amrex::Real KOtheta = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::theta) + state_fab(i, j, k + 2, Idx::theta) - 4*state_fab(i, j, k - 1, Idx::theta) + state_fab(i, j, k - 2, Idx::theta) + 6*state_fab(i, j, k, Idx::theta))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::theta) + state_fab(i, j + 2, k, Idx::theta) - 4*state_fab(i, j - 1, k, Idx::theta) + state_fab(i, j - 2, k, Idx::theta) + 6*state_fab(i, j, k, Idx::theta))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::theta) + state_fab(i + 2, j, k, Idx::theta) - 4*state_fab(i - 1, j, k, Idx::theta) + state_fab(i - 2, j, k, Idx::theta) + 6*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real dGamtildeU00 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 1.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real dGamtildeU01 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 1.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU0))/dx[1];
        amrex::Real dGamtildeU02 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 1.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU0))/dx[2];
        amrex::Real dGamtildeU10 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 1.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real dGamtildeU11 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 1.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU1))/dx[1];
        amrex::Real dGamtildeU12 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 1.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU1))/dx[2];
        amrex::Real dGamtildeU20 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 1.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dGamtildeU21 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 1.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU2))/dx[1];
        amrex::Real dGamtildeU22 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 1.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU2))/dx[2];
        amrex::Real KOGamtildeU0 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::GamtildeU0) + state_fab(i, j, k + 2, Idx::GamtildeU0) - 4*state_fab(i, j, k - 1, Idx::GamtildeU0) + state_fab(i, j, k - 2, Idx::GamtildeU0) + 6*state_fab(i, j, k, Idx::GamtildeU0))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::GamtildeU0) + state_fab(i, j + 2, k, Idx::GamtildeU0) - 4*state_fab(i, j - 1, k, Idx::GamtildeU0) + state_fab(i, j - 2, k, Idx::GamtildeU0) + 6*state_fab(i, j, k, Idx::GamtildeU0))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::GamtildeU0) + state_fab(i + 2, j, k, Idx::GamtildeU0) - 4*state_fab(i - 1, j, k, Idx::GamtildeU0) + state_fab(i - 2, j, k, Idx::GamtildeU0) + 6*state_fab(i, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real KOGamtildeU1 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::GamtildeU1) + state_fab(i, j, k + 2, Idx::GamtildeU1) - 4*state_fab(i, j, k - 1, Idx::GamtildeU1) + state_fab(i, j, k - 2, Idx::GamtildeU1) + 6*state_fab(i, j, k, Idx::GamtildeU1))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::GamtildeU1) + state_fab(i, j + 2, k, Idx::GamtildeU1) - 4*state_fab(i, j - 1, k, Idx::GamtildeU1) + state_fab(i, j - 2, k, Idx::GamtildeU1) + 6*state_fab(i, j, k, Idx::GamtildeU1))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::GamtildeU1) + state_fab(i + 2, j, k, Idx::GamtildeU1) - 4*state_fab(i - 1, j, k, Idx::GamtildeU1) + state_fab(i - 2, j, k, Idx::GamtildeU1) + 6*state_fab(i, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real KOGamtildeU2 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::GamtildeU2) + state_fab(i, j, k + 2, Idx::GamtildeU2) - 4*state_fab(i, j, k - 1, Idx::GamtildeU2) + state_fab(i, j, k - 2, Idx::GamtildeU2) + 6*state_fab(i, j, k, Idx::GamtildeU2))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::GamtildeU2) + state_fab(i, j + 2, k, Idx::GamtildeU2) - 4*state_fab(i, j - 1, k, Idx::GamtildeU2) + state_fab(i, j - 2, k, Idx::GamtildeU2) + 6*state_fab(i, j, k, Idx::GamtildeU2))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::GamtildeU2) + state_fab(i + 2, j, k, Idx::GamtildeU2) - 4*state_fab(i - 1, j, k, Idx::GamtildeU2) + state_fab(i - 2, j, k, Idx::GamtildeU2) + 6*state_fab(i, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dalpha0 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/2.0*state_fab(i - 1, j, k, Idx::alpha))/dx[0];
        amrex::Real dalpha1 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/2.0*state_fab(i, j - 1, k, Idx::alpha))/dx[1];
        amrex::Real dalpha2 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/2.0*state_fab(i, j, k - 1, Idx::alpha))/dx[2];
        amrex::Real ddalpha00 = (state_fab(i + 1, j, k, Idx::alpha) + state_fab(i - 1, j, k, Idx::alpha) - 2*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
        amrex::Real ddalpha01 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real ddalpha02 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real ddalpha10 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real ddalpha11 = (state_fab(i, j + 1, k, Idx::alpha) + state_fab(i, j - 1, k, Idx::alpha) - 2*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
        amrex::Real ddalpha12 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real ddalpha20 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real ddalpha21 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real ddalpha22 = (state_fab(i, j, k + 1, Idx::alpha) + state_fab(i, j, k - 1, Idx::alpha) - 2*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);
        amrex::Real KOalpha = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::alpha) + state_fab(i, j, k + 2, Idx::alpha) - 4*state_fab(i, j, k - 1, Idx::alpha) + state_fab(i, j, k - 2, Idx::alpha) + 6*state_fab(i, j, k, Idx::alpha))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::alpha) + state_fab(i, j + 2, k, Idx::alpha) - 4*state_fab(i, j - 1, k, Idx::alpha) + state_fab(i, j - 2, k, Idx::alpha) + 6*state_fab(i, j, k, Idx::alpha))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::alpha) + state_fab(i + 2, j, k, Idx::alpha) - 4*state_fab(i - 1, j, k, Idx::alpha) + state_fab(i - 2, j, k, Idx::alpha) + 6*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real dbetaU00 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/2.0*state_fab(i - 1, j, k, Idx::betaU0))/dx[0];
        amrex::Real dbetaU01 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/2.0*state_fab(i, j - 1, k, Idx::betaU0))/dx[1];
        amrex::Real dbetaU02 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/2.0*state_fab(i, j, k - 1, Idx::betaU0))/dx[2];
        amrex::Real dbetaU10 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/2.0*state_fab(i - 1, j, k, Idx::betaU1))/dx[0];
        amrex::Real dbetaU11 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/2.0*state_fab(i, j - 1, k, Idx::betaU1))/dx[1];
        amrex::Real dbetaU12 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/2.0*state_fab(i, j, k - 1, Idx::betaU1))/dx[2];
        amrex::Real dbetaU20 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/2.0*state_fab(i - 1, j, k, Idx::betaU2))/dx[0];
        amrex::Real dbetaU21 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/2.0*state_fab(i, j - 1, k, Idx::betaU2))/dx[1];
        amrex::Real dbetaU22 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/2.0*state_fab(i, j, k - 1, Idx::betaU2))/dx[2];
        amrex::Real ddbetaU000 = (state_fab(i + 1, j, k, Idx::betaU0) + state_fab(i - 1, j, k, Idx::betaU0) - 2*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[0], 2);
        amrex::Real ddbetaU001 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU0) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU0))/(dx[0]*dx[1]);
        amrex::Real ddbetaU002 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU0) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU0))/(dx[0]*dx[2]);
        amrex::Real ddbetaU010 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU0) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU0))/(dx[0]*dx[1]);
        amrex::Real ddbetaU011 = (state_fab(i, j + 1, k, Idx::betaU0) + state_fab(i, j - 1, k, Idx::betaU0) - 2*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[1], 2);
        amrex::Real ddbetaU012 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU0) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU0))/(dx[1]*dx[2]);
        amrex::Real ddbetaU020 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU0) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU0))/(dx[0]*dx[2]);
        amrex::Real ddbetaU021 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU0) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU0))/(dx[1]*dx[2]);
        amrex::Real ddbetaU022 = (state_fab(i, j, k + 1, Idx::betaU0) + state_fab(i, j, k - 1, Idx::betaU0) - 2*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[2], 2);
        amrex::Real ddbetaU100 = (state_fab(i + 1, j, k, Idx::betaU1) + state_fab(i - 1, j, k, Idx::betaU1) - 2*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[0], 2);
        amrex::Real ddbetaU101 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU1) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU1))/(dx[0]*dx[1]);
        amrex::Real ddbetaU102 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU1) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU1))/(dx[0]*dx[2]);
        amrex::Real ddbetaU110 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU1) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU1))/(dx[0]*dx[1]);
        amrex::Real ddbetaU111 = (state_fab(i, j + 1, k, Idx::betaU1) + state_fab(i, j - 1, k, Idx::betaU1) - 2*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[1], 2);
        amrex::Real ddbetaU112 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU1) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU1))/(dx[1]*dx[2]);
        amrex::Real ddbetaU120 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU1) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU1))/(dx[0]*dx[2]);
        amrex::Real ddbetaU121 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU1) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU1))/(dx[1]*dx[2]);
        amrex::Real ddbetaU122 = (state_fab(i, j, k + 1, Idx::betaU1) + state_fab(i, j, k - 1, Idx::betaU1) - 2*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[2], 2);
        amrex::Real ddbetaU200 = (state_fab(i + 1, j, k, Idx::betaU2) + state_fab(i - 1, j, k, Idx::betaU2) - 2*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[0], 2);
        amrex::Real ddbetaU201 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU2) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU2))/(dx[0]*dx[1]);
        amrex::Real ddbetaU202 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU2) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU2))/(dx[0]*dx[2]);
        amrex::Real ddbetaU210 = ((1.0/4.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/4.0*state_fab(i + 1, j - 1, k, Idx::betaU2) - 1.0/4.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/4.0)*state_fab(i - 1, j - 1, k, Idx::betaU2))/(dx[0]*dx[1]);
        amrex::Real ddbetaU211 = (state_fab(i, j + 1, k, Idx::betaU2) + state_fab(i, j - 1, k, Idx::betaU2) - 2*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[1], 2);
        amrex::Real ddbetaU212 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU2) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU2))/(dx[1]*dx[2]);
        amrex::Real ddbetaU220 = ((1.0/4.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/4.0*state_fab(i + 1, j, k - 1, Idx::betaU2) - 1.0/4.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/4.0)*state_fab(i - 1, j, k - 1, Idx::betaU2))/(dx[0]*dx[2]);
        amrex::Real ddbetaU221 = ((1.0/4.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/4.0*state_fab(i, j + 1, k - 1, Idx::betaU2) - 1.0/4.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/4.0)*state_fab(i, j - 1, k - 1, Idx::betaU2))/(dx[1]*dx[2]);
        amrex::Real ddbetaU222 = (state_fab(i, j, k + 1, Idx::betaU2) + state_fab(i, j, k - 1, Idx::betaU2) - 2*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[2], 2);
        amrex::Real KObetaU0 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::betaU0) + state_fab(i, j, k + 2, Idx::betaU0) - 4*state_fab(i, j, k - 1, Idx::betaU0) + state_fab(i, j, k - 2, Idx::betaU0) + 6*state_fab(i, j, k, Idx::betaU0))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::betaU0) + state_fab(i, j + 2, k, Idx::betaU0) - 4*state_fab(i, j - 1, k, Idx::betaU0) + state_fab(i, j - 2, k, Idx::betaU0) + 6*state_fab(i, j, k, Idx::betaU0))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::betaU0) + state_fab(i + 2, j, k, Idx::betaU0) - 4*state_fab(i - 1, j, k, Idx::betaU0) + state_fab(i - 2, j, k, Idx::betaU0) + 6*state_fab(i, j, k, Idx::betaU0))/dx[0];
        amrex::Real KObetaU1 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::betaU1) + state_fab(i, j, k + 2, Idx::betaU1) - 4*state_fab(i, j, k - 1, Idx::betaU1) + state_fab(i, j, k - 2, Idx::betaU1) + 6*state_fab(i, j, k, Idx::betaU1))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::betaU1) + state_fab(i, j + 2, k, Idx::betaU1) - 4*state_fab(i, j - 1, k, Idx::betaU1) + state_fab(i, j - 2, k, Idx::betaU1) + 6*state_fab(i, j, k, Idx::betaU1))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::betaU1) + state_fab(i + 2, j, k, Idx::betaU1) - 4*state_fab(i - 1, j, k, Idx::betaU1) + state_fab(i - 2, j, k, Idx::betaU1) + 6*state_fab(i, j, k, Idx::betaU1))/dx[0];
        amrex::Real KObetaU2 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::betaU2) + state_fab(i, j, k + 2, Idx::betaU2) - 4*state_fab(i, j, k - 1, Idx::betaU2) + state_fab(i, j, k - 2, Idx::betaU2) + 6*state_fab(i, j, k, Idx::betaU2))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::betaU2) + state_fab(i, j + 2, k, Idx::betaU2) - 4*state_fab(i, j - 1, k, Idx::betaU2) + state_fab(i, j - 2, k, Idx::betaU2) + 6*state_fab(i, j, k, Idx::betaU2))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::betaU2) + state_fab(i + 2, j, k, Idx::betaU2) - 4*state_fab(i - 1, j, k, Idx::betaU2) + state_fab(i - 2, j, k, Idx::betaU2) + 6*state_fab(i, j, k, Idx::betaU2))/dx[0];
        amrex::Real dBU00 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::BU0) - 1.0/2.0*state_fab(i - 1, j, k, Idx::BU0))/dx[0];
        amrex::Real dBU01 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::BU0) - 1.0/2.0*state_fab(i, j - 1, k, Idx::BU0))/dx[1];
        amrex::Real dBU02 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::BU0) - 1.0/2.0*state_fab(i, j, k - 1, Idx::BU0))/dx[2];
        amrex::Real dBU10 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::BU1) - 1.0/2.0*state_fab(i - 1, j, k, Idx::BU1))/dx[0];
        amrex::Real dBU11 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::BU1) - 1.0/2.0*state_fab(i, j - 1, k, Idx::BU1))/dx[1];
        amrex::Real dBU12 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::BU1) - 1.0/2.0*state_fab(i, j, k - 1, Idx::BU1))/dx[2];
        amrex::Real dBU20 = ((1.0/2.0)*state_fab(i + 1, j, k, Idx::BU2) - 1.0/2.0*state_fab(i - 1, j, k, Idx::BU2))/dx[0];
        amrex::Real dBU21 = ((1.0/2.0)*state_fab(i, j + 1, k, Idx::BU2) - 1.0/2.0*state_fab(i, j - 1, k, Idx::BU2))/dx[1];
        amrex::Real dBU22 = ((1.0/2.0)*state_fab(i, j, k + 1, Idx::BU2) - 1.0/2.0*state_fab(i, j, k - 1, Idx::BU2))/dx[2];
        amrex::Real KOBU0 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::BU0) + state_fab(i, j, k + 2, Idx::BU0) - 4*state_fab(i, j, k - 1, Idx::BU0) + state_fab(i, j, k - 2, Idx::BU0) + 6*state_fab(i, j, k, Idx::BU0))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::BU0) + state_fab(i, j + 2, k, Idx::BU0) - 4*state_fab(i, j - 1, k, Idx::BU0) + state_fab(i, j - 2, k, Idx::BU0) + 6*state_fab(i, j, k, Idx::BU0))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::BU0) + state_fab(i + 2, j, k, Idx::BU0) - 4*state_fab(i - 1, j, k, Idx::BU0) + state_fab(i - 2, j, k, Idx::BU0) + 6*state_fab(i, j, k, Idx::BU0))/dx[0];
        amrex::Real KOBU1 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::BU1) + state_fab(i, j, k + 2, Idx::BU1) - 4*state_fab(i, j, k - 1, Idx::BU1) + state_fab(i, j, k - 2, Idx::BU1) + 6*state_fab(i, j, k, Idx::BU1))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::BU1) + state_fab(i, j + 2, k, Idx::BU1) - 4*state_fab(i, j - 1, k, Idx::BU1) + state_fab(i, j - 2, k, Idx::BU1) + 6*state_fab(i, j, k, Idx::BU1))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::BU1) + state_fab(i + 2, j, k, Idx::BU1) - 4*state_fab(i - 1, j, k, Idx::BU1) + state_fab(i - 2, j, k, Idx::BU1) + 6*state_fab(i, j, k, Idx::BU1))/dx[0];
        amrex::Real KOBU2 = -0.0062500000000000003*(-4*state_fab(i, j, k + 1, Idx::BU2) + state_fab(i, j, k + 2, Idx::BU2) - 4*state_fab(i, j, k - 1, Idx::BU2) + state_fab(i, j, k - 2, Idx::BU2) + 6*state_fab(i, j, k, Idx::BU2))/dx[2] - 0.0062500000000000003*(-4*state_fab(i, j + 1, k, Idx::BU2) + state_fab(i, j + 2, k, Idx::BU2) - 4*state_fab(i, j - 1, k, Idx::BU2) + state_fab(i, j - 2, k, Idx::BU2) + 6*state_fab(i, j, k, Idx::BU2))/dx[1] - 0.0062500000000000003*(-4*state_fab(i + 1, j, k, Idx::BU2) + state_fab(i + 2, j, k, Idx::BU2) - 4*state_fab(i - 1, j, k, Idx::BU2) + state_fab(i - 2, j, k, Idx::BU2) + 6*state_fab(i, j, k, Idx::BU2))/dx[0];
        amrex::Real gamtildeUU00 = (gamtildeLL11*gamtildeLL22 - gamtildeLL12*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU01 = (-gamtildeLL01*gamtildeLL22 + gamtildeLL02*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU02 = (gamtildeLL01*gamtildeLL12 - gamtildeLL02*gamtildeLL11)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU10 = (-gamtildeLL10*gamtildeLL22 + gamtildeLL12*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU11 = gamtildeLL00*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU12 = -gamtildeLL00*(gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU20 = (gamtildeLL10*gamtildeLL21 - gamtildeLL11*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU21 = -gamtildeLL00*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU22 = gamtildeLL00*(gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real GamtildeULL000 = 0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL001 = 0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL002 = 0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL010 = 0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL011 = 0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL012 = 0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL020 = 0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL021 = 0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL022 = 0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeULL100 = 0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL101 = 0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL102 = 0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL110 = 0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL111 = 0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL112 = 0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL120 = 0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL121 = 0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL122 = 0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeULL200 = 0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200);
        amrex::Real GamtildeULL201 = 0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL202 = 0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220);
        amrex::Real GamtildeULL210 = 0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210);
        amrex::Real GamtildeULL211 = 0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211);
        amrex::Real GamtildeULL212 = 0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221);
        amrex::Real GamtildeULL220 = 0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201);
        amrex::Real GamtildeULL221 = 0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211);
        amrex::Real GamtildeULL222 = 0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221);
        amrex::Real GamtildeLLL000 = gamtildeLL00*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL01*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL02*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL001 = gamtildeLL00*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL01*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL02*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL002 = gamtildeLL00*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL01*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL02*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL010 = gamtildeLL00*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL01*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL02*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL011 = gamtildeLL00*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL01*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL02*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL012 = gamtildeLL00*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL01*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL02*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL020 = gamtildeLL00*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL01*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL02*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL021 = gamtildeLL00*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL01*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL02*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL022 = gamtildeLL00*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL01*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL02*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamtildeLLL100 = gamtildeLL10*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL11*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL12*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL101 = gamtildeLL10*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL11*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL12*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL102 = gamtildeLL10*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL11*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL12*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL110 = gamtildeLL10*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL11*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL12*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL111 = gamtildeLL10*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL11*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL12*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL112 = gamtildeLL10*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL11*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL12*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL120 = gamtildeLL10*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL11*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL12*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL121 = gamtildeLL10*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL11*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL12*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL122 = gamtildeLL10*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL11*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL12*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamtildeLLL200 = gamtildeLL20*(0.5*dgamtildeLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL21*(0.5*dgamtildeLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL002 + 2*dgamtildeLL200)) + gamtildeLL22*(0.5*dgamtildeLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL001 + 2*dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL002 + 2*dgamtildeLL200));
        amrex::Real GamtildeLLL201 = gamtildeLL20*(0.5*dgamtildeLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL21*(0.5*dgamtildeLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL22*(0.5*dgamtildeLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL011 + dgamtildeLL101 + dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL012 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL202 = gamtildeLL20*(0.5*dgamtildeLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL21*(0.5*dgamtildeLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220)) + gamtildeLL22*(0.5*dgamtildeLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-dgamtildeLL021 + dgamtildeLL102 + dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL022 + dgamtildeLL202 + dgamtildeLL220));
        amrex::Real GamtildeLLL210 = gamtildeLL20*(0.5*dgamtildeLL110*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU02*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL21*(0.5*dgamtildeLL110*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU12*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210)) + gamtildeLL22*(0.5*dgamtildeLL110*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL001 + dgamtildeLL010 - dgamtildeLL100) + 0.5*gamtildeUU22*(-dgamtildeLL102 + dgamtildeLL201 + dgamtildeLL210));
        amrex::Real GamtildeLLL211 = gamtildeLL20*(0.5*dgamtildeLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU02*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL21*(0.5*dgamtildeLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU12*(-dgamtildeLL112 + 2*dgamtildeLL211)) + gamtildeLL22*(0.5*dgamtildeLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*dgamtildeLL011 - dgamtildeLL110) + 0.5*gamtildeUU22*(-dgamtildeLL112 + 2*dgamtildeLL211));
        amrex::Real GamtildeLLL212 = gamtildeLL20*(0.5*dgamtildeLL112*gamtildeUU01 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU02*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL21*(0.5*dgamtildeLL112*gamtildeUU11 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU12*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221)) + gamtildeLL22*(0.5*dgamtildeLL112*gamtildeUU21 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL120) + 0.5*gamtildeUU22*(-dgamtildeLL122 + dgamtildeLL212 + dgamtildeLL221));
        amrex::Real GamtildeLLL220 = gamtildeLL20*(0.5*dgamtildeLL220*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU01*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL21*(0.5*dgamtildeLL220*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU11*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201)) + gamtildeLL22*(0.5*dgamtildeLL220*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL002 + dgamtildeLL020 - dgamtildeLL200) + 0.5*gamtildeUU21*(dgamtildeLL102 + dgamtildeLL120 - dgamtildeLL201));
        amrex::Real GamtildeLLL221 = gamtildeLL20*(0.5*dgamtildeLL221*gamtildeUU02 + 0.5*gamtildeUU00*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU01*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL21*(0.5*dgamtildeLL221*gamtildeUU12 + 0.5*gamtildeUU10*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU11*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211)) + gamtildeLL22*(0.5*dgamtildeLL221*gamtildeUU22 + 0.5*gamtildeUU20*(dgamtildeLL012 + dgamtildeLL021 - dgamtildeLL210) + 0.5*gamtildeUU21*(dgamtildeLL112 + dgamtildeLL121 - dgamtildeLL211));
        amrex::Real GamtildeLLL222 = gamtildeLL20*(0.5*dgamtildeLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU01*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL21*(0.5*dgamtildeLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU11*(2*dgamtildeLL122 - dgamtildeLL221)) + gamtildeLL22*(0.5*dgamtildeLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*dgamtildeLL022 - dgamtildeLL220) + 0.5*gamtildeUU21*(2*dgamtildeLL122 - dgamtildeLL221));
        amrex::Real GamULL000 = GamtildeULL000 - 2*dphi0*gamtildeLL00*gamtildeUU00 + 4*dphi0 - 2*dphi1*gamtildeLL00*gamtildeUU01 - 2*dphi2*gamtildeLL00*gamtildeUU02;
        amrex::Real GamULL001 = GamtildeULL001 - 2*dphi0*gamtildeLL01*gamtildeUU00 - 2*dphi1*gamtildeLL01*gamtildeUU01 + 2*dphi1 - 2*dphi2*gamtildeLL01*gamtildeUU02;
        amrex::Real GamULL002 = GamtildeULL002 - 2*dphi0*gamtildeLL02*gamtildeUU00 - 2*dphi1*gamtildeLL02*gamtildeUU01 - 2*dphi2*gamtildeLL02*gamtildeUU02 + 2*dphi2;
        amrex::Real GamULL010 = GamtildeULL010 - 2*dphi0*gamtildeLL10*gamtildeUU00 - 2*dphi1*gamtildeLL10*gamtildeUU01 + 2*dphi1 - 2*dphi2*gamtildeLL10*gamtildeUU02;
        amrex::Real GamULL011 = GamtildeULL011 - 2*dphi0*gamtildeLL11*gamtildeUU00 - 2*dphi1*gamtildeLL11*gamtildeUU01 - 2*dphi2*gamtildeLL11*gamtildeUU02;
        amrex::Real GamULL012 = GamtildeULL012 - 2*dphi0*gamtildeLL12*gamtildeUU00 - 2*dphi1*gamtildeLL12*gamtildeUU01 - 2*dphi2*gamtildeLL12*gamtildeUU02;
        amrex::Real GamULL020 = GamtildeULL020 - 2*dphi0*gamtildeLL20*gamtildeUU00 - 2*dphi1*gamtildeLL20*gamtildeUU01 - 2*dphi2*gamtildeLL20*gamtildeUU02 + 2*dphi2;
        amrex::Real GamULL021 = GamtildeULL021 - 2*dphi0*gamtildeLL21*gamtildeUU00 - 2*dphi1*gamtildeLL21*gamtildeUU01 - 2*dphi2*gamtildeLL21*gamtildeUU02;
        amrex::Real GamULL022 = GamtildeULL022 - 2*dphi0*gamtildeLL22*gamtildeUU00 - 2*dphi1*gamtildeLL22*gamtildeUU01 - 2*dphi2*gamtildeLL22*gamtildeUU02;
        amrex::Real GamULL100 = GamtildeULL100 - 2*dphi0*gamtildeLL00*gamtildeUU10 - 2*dphi1*gamtildeLL00*gamtildeUU11 - 2*dphi2*gamtildeLL00*gamtildeUU12;
        amrex::Real GamULL101 = GamtildeULL101 - 2*dphi0*gamtildeLL01*gamtildeUU10 + 2*dphi0 - 2*dphi1*gamtildeLL01*gamtildeUU11 - 2*dphi2*gamtildeLL01*gamtildeUU12;
        amrex::Real GamULL102 = GamtildeULL102 - 2*dphi0*gamtildeLL02*gamtildeUU10 - 2*dphi1*gamtildeLL02*gamtildeUU11 - 2*dphi2*gamtildeLL02*gamtildeUU12;
        amrex::Real GamULL110 = GamtildeULL110 - 2*dphi0*gamtildeLL10*gamtildeUU10 + 2*dphi0 - 2*dphi1*gamtildeLL10*gamtildeUU11 - 2*dphi2*gamtildeLL10*gamtildeUU12;
        amrex::Real GamULL111 = GamtildeULL111 - 2*dphi0*gamtildeLL11*gamtildeUU10 - 2*dphi1*gamtildeLL11*gamtildeUU11 + 4*dphi1 - 2*dphi2*gamtildeLL11*gamtildeUU12;
        amrex::Real GamULL112 = GamtildeULL112 - 2*dphi0*gamtildeLL12*gamtildeUU10 - 2*dphi1*gamtildeLL12*gamtildeUU11 - 2*dphi2*gamtildeLL12*gamtildeUU12 + 2*dphi2;
        amrex::Real GamULL120 = GamtildeULL120 - 2*dphi0*gamtildeLL20*gamtildeUU10 - 2*dphi1*gamtildeLL20*gamtildeUU11 - 2*dphi2*gamtildeLL20*gamtildeUU12;
        amrex::Real GamULL121 = GamtildeULL121 - 2*dphi0*gamtildeLL21*gamtildeUU10 - 2*dphi1*gamtildeLL21*gamtildeUU11 - 2*dphi2*gamtildeLL21*gamtildeUU12 + 2*dphi2;
        amrex::Real GamULL122 = GamtildeULL122 - 2*dphi0*gamtildeLL22*gamtildeUU10 - 2*dphi1*gamtildeLL22*gamtildeUU11 - 2*dphi2*gamtildeLL22*gamtildeUU12;
        amrex::Real GamULL200 = GamtildeULL200 - 2*dphi0*gamtildeLL00*gamtildeUU20 - 2*dphi1*gamtildeLL00*gamtildeUU21 - 2*dphi2*gamtildeLL00*gamtildeUU22;
        amrex::Real GamULL201 = GamtildeULL201 - 2*dphi0*gamtildeLL01*gamtildeUU20 - 2*dphi1*gamtildeLL01*gamtildeUU21 - 2*dphi2*gamtildeLL01*gamtildeUU22;
        amrex::Real GamULL202 = GamtildeULL202 - 2*dphi0*gamtildeLL02*gamtildeUU20 + 2*dphi0 - 2*dphi1*gamtildeLL02*gamtildeUU21 - 2*dphi2*gamtildeLL02*gamtildeUU22;
        amrex::Real GamULL210 = GamtildeULL210 - 2*dphi0*gamtildeLL10*gamtildeUU20 - 2*dphi1*gamtildeLL10*gamtildeUU21 - 2*dphi2*gamtildeLL10*gamtildeUU22;
        amrex::Real GamULL211 = GamtildeULL211 - 2*dphi0*gamtildeLL11*gamtildeUU20 - 2*dphi1*gamtildeLL11*gamtildeUU21 - 2*dphi2*gamtildeLL11*gamtildeUU22;
        amrex::Real GamULL212 = GamtildeULL212 - 2*dphi0*gamtildeLL12*gamtildeUU20 - 2*dphi1*gamtildeLL12*gamtildeUU21 + 2*dphi1 - 2*dphi2*gamtildeLL12*gamtildeUU22;
        amrex::Real GamULL220 = GamtildeULL220 - 2*dphi0*gamtildeLL20*gamtildeUU20 + 2*dphi0 - 2*dphi1*gamtildeLL20*gamtildeUU21 - 2*dphi2*gamtildeLL20*gamtildeUU22;
        amrex::Real GamULL221 = GamtildeULL221 - 2*dphi0*gamtildeLL21*gamtildeUU20 - 2*dphi1*gamtildeLL21*gamtildeUU21 + 2*dphi1 - 2*dphi2*gamtildeLL21*gamtildeUU22;
        amrex::Real GamULL222 = GamtildeULL222 - 2*dphi0*gamtildeLL22*gamtildeUU20 - 2*dphi1*gamtildeLL22*gamtildeUU21 - 2*dphi2*gamtildeLL22*gamtildeUU22 + 4*dphi2;
        amrex::Real DDalphaLL00 = -GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00;
        amrex::Real DDalphaLL01 = -GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01;
        amrex::Real DDalphaLL02 = -GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02;
        amrex::Real DDalphaLL10 = -GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10;
        amrex::Real DDalphaLL11 = -GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11;
        amrex::Real DDalphaLL12 = -GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12;
        amrex::Real DDalphaLL20 = -GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20;
        amrex::Real DDalphaLL21 = -GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21;
        amrex::Real DDalphaLL22 = -GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22;
        amrex::Real gamLL00 = gamtildeLL00*std::exp(4*phi);
        amrex::Real gamLL01 = gamtildeLL01*std::exp(4*phi);
        amrex::Real gamLL02 = gamtildeLL02*std::exp(4*phi);
        amrex::Real gamLL10 = gamtildeLL10*std::exp(4*phi);
        amrex::Real gamLL11 = gamtildeLL11*std::exp(4*phi);
        amrex::Real gamLL12 = gamtildeLL12*std::exp(4*phi);
        amrex::Real gamLL20 = gamtildeLL20*std::exp(4*phi);
        amrex::Real gamLL21 = gamtildeLL21*std::exp(4*phi);
        amrex::Real gamLL22 = gamtildeLL22*std::exp(4*phi);
        amrex::Real gamUU00 = gamtildeUU00*std::exp(-4*phi);
        amrex::Real gamUU01 = gamtildeUU01*std::exp(-4*phi);
        amrex::Real gamUU02 = gamtildeUU02*std::exp(-4*phi);
        amrex::Real gamUU10 = gamtildeUU10*std::exp(-4*phi);
        amrex::Real gamUU11 = gamtildeUU11*std::exp(-4*phi);
        amrex::Real gamUU12 = gamtildeUU12*std::exp(-4*phi);
        amrex::Real gamUU20 = gamtildeUU20*std::exp(-4*phi);
        amrex::Real gamUU21 = gamtildeUU21*std::exp(-4*phi);
        amrex::Real gamUU22 = gamtildeUU22*std::exp(-4*phi);
        amrex::Real AtildeUU00 = AtildeLL00*std::pow(gamtildeUU00, 2) + AtildeLL01*gamtildeUU00*gamtildeUU01 + AtildeLL02*gamtildeUU00*gamtildeUU02 + AtildeLL10*gamtildeUU00*gamtildeUU01 + AtildeLL11*std::pow(gamtildeUU01, 2) + AtildeLL12*gamtildeUU01*gamtildeUU02 + AtildeLL20*gamtildeUU00*gamtildeUU02 + AtildeLL21*gamtildeUU01*gamtildeUU02 + AtildeLL22*std::pow(gamtildeUU02, 2);
        amrex::Real AtildeUU01 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU00*gamtildeUU11 + AtildeLL02*gamtildeUU00*gamtildeUU12 + AtildeLL10*gamtildeUU01*gamtildeUU10 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU01*gamtildeUU12 + AtildeLL20*gamtildeUU02*gamtildeUU10 + AtildeLL21*gamtildeUU02*gamtildeUU11 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU02 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU00*gamtildeUU21 + AtildeLL02*gamtildeUU00*gamtildeUU22 + AtildeLL10*gamtildeUU01*gamtildeUU20 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU01*gamtildeUU22 + AtildeLL20*gamtildeUU02*gamtildeUU20 + AtildeLL21*gamtildeUU02*gamtildeUU21 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU10 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU01*gamtildeUU10 + AtildeLL02*gamtildeUU02*gamtildeUU10 + AtildeLL10*gamtildeUU00*gamtildeUU11 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU02*gamtildeUU11 + AtildeLL20*gamtildeUU00*gamtildeUU12 + AtildeLL21*gamtildeUU01*gamtildeUU12 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU11 = AtildeLL00*std::pow(gamtildeUU10, 2) + AtildeLL01*gamtildeUU10*gamtildeUU11 + AtildeLL02*gamtildeUU10*gamtildeUU12 + AtildeLL10*gamtildeUU10*gamtildeUU11 + AtildeLL11*std::pow(gamtildeUU11, 2) + AtildeLL12*gamtildeUU11*gamtildeUU12 + AtildeLL20*gamtildeUU10*gamtildeUU12 + AtildeLL21*gamtildeUU11*gamtildeUU12 + AtildeLL22*std::pow(gamtildeUU12, 2);
        amrex::Real AtildeUU12 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU10*gamtildeUU21 + AtildeLL02*gamtildeUU10*gamtildeUU22 + AtildeLL10*gamtildeUU11*gamtildeUU20 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU11*gamtildeUU22 + AtildeLL20*gamtildeUU12*gamtildeUU20 + AtildeLL21*gamtildeUU12*gamtildeUU21 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU20 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU01*gamtildeUU20 + AtildeLL02*gamtildeUU02*gamtildeUU20 + AtildeLL10*gamtildeUU00*gamtildeUU21 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU02*gamtildeUU21 + AtildeLL20*gamtildeUU00*gamtildeUU22 + AtildeLL21*gamtildeUU01*gamtildeUU22 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU21 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU11*gamtildeUU20 + AtildeLL02*gamtildeUU12*gamtildeUU20 + AtildeLL10*gamtildeUU10*gamtildeUU21 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU12*gamtildeUU21 + AtildeLL20*gamtildeUU10*gamtildeUU22 + AtildeLL21*gamtildeUU11*gamtildeUU22 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU22 = AtildeLL00*std::pow(gamtildeUU20, 2) + AtildeLL01*gamtildeUU20*gamtildeUU21 + AtildeLL02*gamtildeUU20*gamtildeUU22 + AtildeLL10*gamtildeUU20*gamtildeUU21 + AtildeLL11*std::pow(gamtildeUU21, 2) + AtildeLL12*gamtildeUU21*gamtildeUU22 + AtildeLL20*gamtildeUU20*gamtildeUU22 + AtildeLL21*gamtildeUU21*gamtildeUU22 + AtildeLL22*std::pow(gamtildeUU22, 2);
        amrex::Real AtildeUL00 = AtildeLL00*gamtildeUU00 + AtildeLL10*gamtildeUU01 + AtildeLL20*gamtildeUU02;
        amrex::Real AtildeUL01 = AtildeLL01*gamtildeUU00 + AtildeLL11*gamtildeUU01 + AtildeLL21*gamtildeUU02;
        amrex::Real AtildeUL02 = AtildeLL02*gamtildeUU00 + AtildeLL12*gamtildeUU01 + AtildeLL22*gamtildeUU02;
        amrex::Real AtildeUL10 = AtildeLL00*gamtildeUU10 + AtildeLL10*gamtildeUU11 + AtildeLL20*gamtildeUU12;
        amrex::Real AtildeUL11 = AtildeLL01*gamtildeUU10 + AtildeLL11*gamtildeUU11 + AtildeLL21*gamtildeUU12;
        amrex::Real AtildeUL12 = AtildeLL02*gamtildeUU10 + AtildeLL12*gamtildeUU11 + AtildeLL22*gamtildeUU12;
        amrex::Real AtildeUL20 = AtildeLL00*gamtildeUU20 + AtildeLL10*gamtildeUU21 + AtildeLL20*gamtildeUU22;
        amrex::Real AtildeUL21 = AtildeLL01*gamtildeUU20 + AtildeLL11*gamtildeUU21 + AtildeLL21*gamtildeUU22;
        amrex::Real AtildeUL22 = AtildeLL02*gamtildeUU20 + AtildeLL12*gamtildeUU21 + AtildeLL22*gamtildeUU22;
        amrex::Real DDalphaTFLL00 = -0.33333333333333331*DDalphaLL00*gamLL00*gamUU00 + DDalphaLL00 - 0.33333333333333331*DDalphaLL01*gamLL00*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL00*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL00*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL00*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL00*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL00*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL00*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL00*gamUU22;
        amrex::Real DDalphaTFLL01 = -0.33333333333333331*DDalphaLL00*gamLL01*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL01*gamUU01 + DDalphaLL01 - 0.33333333333333331*DDalphaLL02*gamLL01*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL01*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL01*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL01*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL01*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL01*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL01*gamUU22;
        amrex::Real DDalphaTFLL02 = -0.33333333333333331*DDalphaLL00*gamLL02*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL02*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL02*gamUU02 + DDalphaLL02 - 0.33333333333333331*DDalphaLL10*gamLL02*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL02*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL02*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL02*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL02*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL02*gamUU22;
        amrex::Real DDalphaTFLL10 = -0.33333333333333331*DDalphaLL00*gamLL10*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL10*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL10*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL10*gamUU10 + DDalphaLL10 - 0.33333333333333331*DDalphaLL11*gamLL10*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL10*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL10*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL10*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL10*gamUU22;
        amrex::Real DDalphaTFLL11 = -0.33333333333333331*DDalphaLL00*gamLL11*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL11*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL11*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL11*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL11*gamUU11 + DDalphaLL11 - 0.33333333333333331*DDalphaLL12*gamLL11*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL11*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL11*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL11*gamUU22;
        amrex::Real DDalphaTFLL12 = -0.33333333333333331*DDalphaLL00*gamLL12*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL12*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL12*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL12*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL12*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL12*gamUU12 + DDalphaLL12 - 0.33333333333333331*DDalphaLL20*gamLL12*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL12*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL12*gamUU22;
        amrex::Real DDalphaTFLL20 = -0.33333333333333331*DDalphaLL00*gamLL20*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL20*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL20*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL20*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL20*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL20*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL20*gamUU20 + DDalphaLL20 - 0.33333333333333331*DDalphaLL21*gamLL20*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL20*gamUU22;
        amrex::Real DDalphaTFLL21 = -0.33333333333333331*DDalphaLL00*gamLL21*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL21*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL21*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL21*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL21*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL21*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL21*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL21*gamUU21 + DDalphaLL21 - 0.33333333333333331*DDalphaLL22*gamLL21*gamUU22;
        amrex::Real DDalphaTFLL22 = -0.33333333333333331*DDalphaLL00*gamLL22*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL22*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL22*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL22*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL22*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL22*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL22*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL22*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL22*gamUU22 + DDalphaLL22;
        amrex::Real GamtildeDU0 = GamtildeULL000*gamtildeUU00 + GamtildeULL001*gamtildeUU01 + GamtildeULL002*gamtildeUU02 + GamtildeULL010*gamtildeUU10 + GamtildeULL011*gamtildeUU11 + GamtildeULL012*gamtildeUU12 + GamtildeULL020*gamtildeUU20 + GamtildeULL021*gamtildeUU21 + GamtildeULL022*gamtildeUU22;
        amrex::Real GamtildeDU1 = GamtildeULL100*gamtildeUU00 + GamtildeULL101*gamtildeUU01 + GamtildeULL102*gamtildeUU02 + GamtildeULL110*gamtildeUU10 + GamtildeULL111*gamtildeUU11 + GamtildeULL112*gamtildeUU12 + GamtildeULL120*gamtildeUU20 + GamtildeULL121*gamtildeUU21 + GamtildeULL122*gamtildeUU22;
        amrex::Real GamtildeDU2 = GamtildeULL200*gamtildeUU00 + GamtildeULL201*gamtildeUU01 + GamtildeULL202*gamtildeUU02 + GamtildeULL210*gamtildeUU10 + GamtildeULL211*gamtildeUU11 + GamtildeULL212*gamtildeUU12 + GamtildeULL220*gamtildeUU20 + GamtildeULL221*gamtildeUU21 + GamtildeULL222*gamtildeUU22;
        amrex::Real RtildeLL00 = 1.0*GamtildeDU0*GamtildeLLL000 + 1.0*GamtildeDU1*GamtildeLLL001 + 1.0*GamtildeDU2*GamtildeLLL002 + 3*GamtildeLLL000*GamtildeULL000*gamtildeUU00 + GamtildeLLL000*GamtildeULL001*gamtildeUU01 + GamtildeLLL000*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL000*GamtildeULL010*gamtildeUU10 + 2*GamtildeLLL000*GamtildeULL020*gamtildeUU20 + 2*GamtildeLLL001*GamtildeULL000*gamtildeUU01 + 2*GamtildeLLL001*GamtildeULL010*gamtildeUU11 + 2*GamtildeLLL001*GamtildeULL020*gamtildeUU21 + 2*GamtildeLLL002*GamtildeULL000*gamtildeUU02 + 2*GamtildeLLL002*GamtildeULL010*gamtildeUU12 + 2*GamtildeLLL002*GamtildeULL020*gamtildeUU22 + GamtildeLLL010*GamtildeULL000*gamtildeUU10 + GamtildeLLL010*GamtildeULL001*gamtildeUU11 + GamtildeLLL010*GamtildeULL002*gamtildeUU12 + 2*GamtildeLLL010*GamtildeULL100*gamtildeUU00 + 2*GamtildeLLL010*GamtildeULL110*gamtildeUU10 + 2*GamtildeLLL010*GamtildeULL120*gamtildeUU20 + 2*GamtildeLLL011*GamtildeULL100*gamtildeUU01 + 2*GamtildeLLL011*GamtildeULL110*gamtildeUU11 + 2*GamtildeLLL011*GamtildeULL120*gamtildeUU21 + 2*GamtildeLLL012*GamtildeULL100*gamtildeUU02 + 2*GamtildeLLL012*GamtildeULL110*gamtildeUU12 + 2*GamtildeLLL012*GamtildeULL120*gamtildeUU22 + GamtildeLLL020*GamtildeULL000*gamtildeUU20 + GamtildeLLL020*GamtildeULL001*gamtildeUU21 + GamtildeLLL020*GamtildeULL002*gamtildeUU22 + 2*GamtildeLLL020*GamtildeULL200*gamtildeUU00 + 2*GamtildeLLL020*GamtildeULL210*gamtildeUU10 + 2*GamtildeLLL020*GamtildeULL220*gamtildeUU20 + 2*GamtildeLLL021*GamtildeULL200*gamtildeUU01 + 2*GamtildeLLL021*GamtildeULL210*gamtildeUU11 + 2*GamtildeLLL021*GamtildeULL220*gamtildeUU21 + 2*GamtildeLLL022*GamtildeULL200*gamtildeUU02 + 2*GamtildeLLL022*GamtildeULL210*gamtildeUU12 + 2*GamtildeLLL022*GamtildeULL220*gamtildeUU22 + GamtildeLLL100*GamtildeULL100*gamtildeUU00 + GamtildeLLL100*GamtildeULL101*gamtildeUU01 + GamtildeLLL100*GamtildeULL102*gamtildeUU02 + GamtildeLLL110*GamtildeULL100*gamtildeUU10 + GamtildeLLL110*GamtildeULL101*gamtildeUU11 + GamtildeLLL110*GamtildeULL102*gamtildeUU12 + GamtildeLLL120*GamtildeULL100*gamtildeUU20 + GamtildeLLL120*GamtildeULL101*gamtildeUU21 + GamtildeLLL120*GamtildeULL102*gamtildeUU22 + GamtildeLLL200*GamtildeULL200*gamtildeUU00 + GamtildeLLL200*GamtildeULL201*gamtildeUU01 + GamtildeLLL200*GamtildeULL202*gamtildeUU02 + GamtildeLLL210*GamtildeULL200*gamtildeUU10 + GamtildeLLL210*GamtildeULL201*gamtildeUU11 + GamtildeLLL210*GamtildeULL202*gamtildeUU12 + GamtildeLLL220*GamtildeULL200*gamtildeUU20 + GamtildeLLL220*GamtildeULL201*gamtildeUU21 + GamtildeLLL220*GamtildeULL202*gamtildeUU22 + 1.0*dGamtildeU00*gamtildeLL00 + 1.0*dGamtildeU10*gamtildeLL10 + 1.0*dGamtildeU20*gamtildeLL20 - 0.5*ddgamtildeLL0000*gamtildeUU00 - 0.5*ddgamtildeLL0001*gamtildeUU01 - 0.5*ddgamtildeLL0002*gamtildeUU02 - 0.5*ddgamtildeLL0010*gamtildeUU10 - 0.5*ddgamtildeLL0011*gamtildeUU11 - 0.5*ddgamtildeLL0012*gamtildeUU12 - 0.5*ddgamtildeLL0020*gamtildeUU20 - 0.5*ddgamtildeLL0021*gamtildeUU21 - 0.5*ddgamtildeLL0022*gamtildeUU22;
        amrex::Real RtildeLL01 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL001*GamtildeULL000*gamtildeUU00 + GamtildeLLL001*GamtildeULL001*gamtildeUU01 + GamtildeLLL001*GamtildeULL002*gamtildeUU02 + GamtildeLLL011*GamtildeULL000*gamtildeUU10 + GamtildeLLL011*GamtildeULL001*gamtildeUU11 + GamtildeLLL011*GamtildeULL002*gamtildeUU12 + GamtildeLLL021*GamtildeULL000*gamtildeUU20 + GamtildeLLL021*GamtildeULL001*gamtildeUU21 + GamtildeLLL021*GamtildeULL002*gamtildeUU22 + GamtildeLLL101*GamtildeULL100*gamtildeUU00 + GamtildeLLL101*GamtildeULL101*gamtildeUU01 + GamtildeLLL101*GamtildeULL102*gamtildeUU02 + GamtildeLLL111*GamtildeULL100*gamtildeUU10 + GamtildeLLL111*GamtildeULL101*gamtildeUU11 + GamtildeLLL111*GamtildeULL102*gamtildeUU12 + GamtildeLLL121*GamtildeULL100*gamtildeUU20 + GamtildeLLL121*GamtildeULL101*gamtildeUU21 + GamtildeLLL121*GamtildeULL102*gamtildeUU22 + GamtildeLLL201*GamtildeULL200*gamtildeUU00 + GamtildeLLL201*GamtildeULL201*gamtildeUU01 + GamtildeLLL201*GamtildeULL202*gamtildeUU02 + GamtildeLLL211*GamtildeULL200*gamtildeUU10 + GamtildeLLL211*GamtildeULL201*gamtildeUU11 + GamtildeLLL211*GamtildeULL202*gamtildeUU12 + GamtildeLLL221*GamtildeULL200*gamtildeUU20 + GamtildeLLL221*GamtildeULL201*gamtildeUU21 + GamtildeLLL221*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL0100*gamtildeUU00 - 0.5*ddgamtildeLL0101*gamtildeUU01 - 0.5*ddgamtildeLL0102*gamtildeUU02 - 0.5*ddgamtildeLL0110*gamtildeUU10 - 0.5*ddgamtildeLL0111*gamtildeUU11 - 0.5*ddgamtildeLL0112*gamtildeUU12 - 0.5*ddgamtildeLL0120*gamtildeUU20 - 0.5*ddgamtildeLL0121*gamtildeUU21 - 0.5*ddgamtildeLL0122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL02 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL002*GamtildeULL000*gamtildeUU00 + GamtildeLLL002*GamtildeULL001*gamtildeUU01 + GamtildeLLL002*GamtildeULL002*gamtildeUU02 + GamtildeLLL012*GamtildeULL000*gamtildeUU10 + GamtildeLLL012*GamtildeULL001*gamtildeUU11 + GamtildeLLL012*GamtildeULL002*gamtildeUU12 + GamtildeLLL022*GamtildeULL000*gamtildeUU20 + GamtildeLLL022*GamtildeULL001*gamtildeUU21 + GamtildeLLL022*GamtildeULL002*gamtildeUU22 + GamtildeLLL102*GamtildeULL100*gamtildeUU00 + GamtildeLLL102*GamtildeULL101*gamtildeUU01 + GamtildeLLL102*GamtildeULL102*gamtildeUU02 + GamtildeLLL112*GamtildeULL100*gamtildeUU10 + GamtildeLLL112*GamtildeULL101*gamtildeUU11 + GamtildeLLL112*GamtildeULL102*gamtildeUU12 + GamtildeLLL122*GamtildeULL100*gamtildeUU20 + GamtildeLLL122*GamtildeULL101*gamtildeUU21 + GamtildeLLL122*GamtildeULL102*gamtildeUU22 + GamtildeLLL202*GamtildeULL200*gamtildeUU00 + GamtildeLLL202*GamtildeULL201*gamtildeUU01 + GamtildeLLL202*GamtildeULL202*gamtildeUU02 + GamtildeLLL212*GamtildeULL200*gamtildeUU10 + GamtildeLLL212*GamtildeULL201*gamtildeUU11 + GamtildeLLL212*GamtildeULL202*gamtildeUU12 + GamtildeLLL222*GamtildeULL200*gamtildeUU20 + GamtildeLLL222*GamtildeULL201*gamtildeUU21 + GamtildeLLL222*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL0200*gamtildeUU00 - 0.5*ddgamtildeLL0201*gamtildeUU01 - 0.5*ddgamtildeLL0202*gamtildeUU02 - 0.5*ddgamtildeLL0210*gamtildeUU10 - 0.5*ddgamtildeLL0211*gamtildeUU11 - 0.5*ddgamtildeLL0212*gamtildeUU12 - 0.5*ddgamtildeLL0220*gamtildeUU20 - 0.5*ddgamtildeLL0221*gamtildeUU21 - 0.5*ddgamtildeLL0222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL10 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL000*GamtildeULL010*gamtildeUU00 + GamtildeLLL000*GamtildeULL011*gamtildeUU01 + GamtildeLLL000*GamtildeULL012*gamtildeUU02 + GamtildeLLL010*GamtildeULL010*gamtildeUU10 + GamtildeLLL010*GamtildeULL011*gamtildeUU11 + GamtildeLLL010*GamtildeULL012*gamtildeUU12 + GamtildeLLL020*GamtildeULL010*gamtildeUU20 + GamtildeLLL020*GamtildeULL011*gamtildeUU21 + GamtildeLLL020*GamtildeULL012*gamtildeUU22 + GamtildeLLL100*GamtildeULL110*gamtildeUU00 + GamtildeLLL100*GamtildeULL111*gamtildeUU01 + GamtildeLLL100*GamtildeULL112*gamtildeUU02 + GamtildeLLL110*GamtildeULL110*gamtildeUU10 + GamtildeLLL110*GamtildeULL111*gamtildeUU11 + GamtildeLLL110*GamtildeULL112*gamtildeUU12 + GamtildeLLL120*GamtildeULL110*gamtildeUU20 + GamtildeLLL120*GamtildeULL111*gamtildeUU21 + GamtildeLLL120*GamtildeULL112*gamtildeUU22 + GamtildeLLL200*GamtildeULL210*gamtildeUU00 + GamtildeLLL200*GamtildeULL211*gamtildeUU01 + GamtildeLLL200*GamtildeULL212*gamtildeUU02 + GamtildeLLL210*GamtildeULL210*gamtildeUU10 + GamtildeLLL210*GamtildeULL211*gamtildeUU11 + GamtildeLLL210*GamtildeULL212*gamtildeUU12 + GamtildeLLL220*GamtildeULL210*gamtildeUU20 + GamtildeLLL220*GamtildeULL211*gamtildeUU21 + GamtildeLLL220*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL1000*gamtildeUU00 - 0.5*ddgamtildeLL1001*gamtildeUU01 - 0.5*ddgamtildeLL1002*gamtildeUU02 - 0.5*ddgamtildeLL1010*gamtildeUU10 - 0.5*ddgamtildeLL1011*gamtildeUU11 - 0.5*ddgamtildeLL1012*gamtildeUU12 - 0.5*ddgamtildeLL1020*gamtildeUU20 - 0.5*ddgamtildeLL1021*gamtildeUU21 - 0.5*ddgamtildeLL1022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL11 = 1.0*GamtildeDU0*GamtildeLLL110 + 1.0*GamtildeDU1*GamtildeLLL111 + 1.0*GamtildeDU2*GamtildeLLL112 + GamtildeLLL001*GamtildeULL010*gamtildeUU00 + GamtildeLLL001*GamtildeULL011*gamtildeUU01 + GamtildeLLL001*GamtildeULL012*gamtildeUU02 + GamtildeLLL011*GamtildeULL010*gamtildeUU10 + GamtildeLLL011*GamtildeULL011*gamtildeUU11 + GamtildeLLL011*GamtildeULL012*gamtildeUU12 + GamtildeLLL021*GamtildeULL010*gamtildeUU20 + GamtildeLLL021*GamtildeULL011*gamtildeUU21 + GamtildeLLL021*GamtildeULL012*gamtildeUU22 + 2*GamtildeLLL100*GamtildeULL001*gamtildeUU00 + 2*GamtildeLLL100*GamtildeULL011*gamtildeUU10 + 2*GamtildeLLL100*GamtildeULL021*gamtildeUU20 + 2*GamtildeLLL101*GamtildeULL001*gamtildeUU01 + 2*GamtildeLLL101*GamtildeULL011*gamtildeUU11 + 2*GamtildeLLL101*GamtildeULL021*gamtildeUU21 + GamtildeLLL101*GamtildeULL110*gamtildeUU00 + GamtildeLLL101*GamtildeULL111*gamtildeUU01 + GamtildeLLL101*GamtildeULL112*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL001*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL011*gamtildeUU12 + 2*GamtildeLLL102*GamtildeULL021*gamtildeUU22 + 2*GamtildeLLL110*GamtildeULL101*gamtildeUU00 + 2*GamtildeLLL110*GamtildeULL111*gamtildeUU10 + 2*GamtildeLLL110*GamtildeULL121*gamtildeUU20 + 2*GamtildeLLL111*GamtildeULL101*gamtildeUU01 + GamtildeLLL111*GamtildeULL110*gamtildeUU10 + 3*GamtildeLLL111*GamtildeULL111*gamtildeUU11 + GamtildeLLL111*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL111*GamtildeULL121*gamtildeUU21 + 2*GamtildeLLL112*GamtildeULL101*gamtildeUU02 + 2*GamtildeLLL112*GamtildeULL111*gamtildeUU12 + 2*GamtildeLLL112*GamtildeULL121*gamtildeUU22 + 2*GamtildeLLL120*GamtildeULL201*gamtildeUU00 + 2*GamtildeLLL120*GamtildeULL211*gamtildeUU10 + 2*GamtildeLLL120*GamtildeULL221*gamtildeUU20 + GamtildeLLL121*GamtildeULL110*gamtildeUU20 + GamtildeLLL121*GamtildeULL111*gamtildeUU21 + GamtildeLLL121*GamtildeULL112*gamtildeUU22 + 2*GamtildeLLL121*GamtildeULL201*gamtildeUU01 + 2*GamtildeLLL121*GamtildeULL211*gamtildeUU11 + 2*GamtildeLLL121*GamtildeULL221*gamtildeUU21 + 2*GamtildeLLL122*GamtildeULL201*gamtildeUU02 + 2*GamtildeLLL122*GamtildeULL211*gamtildeUU12 + 2*GamtildeLLL122*GamtildeULL221*gamtildeUU22 + GamtildeLLL201*GamtildeULL210*gamtildeUU00 + GamtildeLLL201*GamtildeULL211*gamtildeUU01 + GamtildeLLL201*GamtildeULL212*gamtildeUU02 + GamtildeLLL211*GamtildeULL210*gamtildeUU10 + GamtildeLLL211*GamtildeULL211*gamtildeUU11 + GamtildeLLL211*GamtildeULL212*gamtildeUU12 + GamtildeLLL221*GamtildeULL210*gamtildeUU20 + GamtildeLLL221*GamtildeULL211*gamtildeUU21 + GamtildeLLL221*GamtildeULL212*gamtildeUU22 + 1.0*dGamtildeU01*gamtildeLL01 + 1.0*dGamtildeU11*gamtildeLL11 + 1.0*dGamtildeU21*gamtildeLL21 - 0.5*ddgamtildeLL1100*gamtildeUU00 - 0.5*ddgamtildeLL1101*gamtildeUU01 - 0.5*ddgamtildeLL1102*gamtildeUU02 - 0.5*ddgamtildeLL1110*gamtildeUU10 - 0.5*ddgamtildeLL1111*gamtildeUU11 - 0.5*ddgamtildeLL1112*gamtildeUU12 - 0.5*ddgamtildeLL1120*gamtildeUU20 - 0.5*ddgamtildeLL1121*gamtildeUU21 - 0.5*ddgamtildeLL1122*gamtildeUU22;
        amrex::Real RtildeLL12 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL002*GamtildeULL010*gamtildeUU00 + GamtildeLLL002*GamtildeULL011*gamtildeUU01 + GamtildeLLL002*GamtildeULL012*gamtildeUU02 + GamtildeLLL012*GamtildeULL010*gamtildeUU10 + GamtildeLLL012*GamtildeULL011*gamtildeUU11 + GamtildeLLL012*GamtildeULL012*gamtildeUU12 + GamtildeLLL022*GamtildeULL010*gamtildeUU20 + GamtildeLLL022*GamtildeULL011*gamtildeUU21 + GamtildeLLL022*GamtildeULL012*gamtildeUU22 + GamtildeLLL102*GamtildeULL110*gamtildeUU00 + GamtildeLLL102*GamtildeULL111*gamtildeUU01 + GamtildeLLL102*GamtildeULL112*gamtildeUU02 + GamtildeLLL112*GamtildeULL110*gamtildeUU10 + GamtildeLLL112*GamtildeULL111*gamtildeUU11 + GamtildeLLL112*GamtildeULL112*gamtildeUU12 + GamtildeLLL122*GamtildeULL110*gamtildeUU20 + GamtildeLLL122*GamtildeULL111*gamtildeUU21 + GamtildeLLL122*GamtildeULL112*gamtildeUU22 + GamtildeLLL202*GamtildeULL210*gamtildeUU00 + GamtildeLLL202*GamtildeULL211*gamtildeUU01 + GamtildeLLL202*GamtildeULL212*gamtildeUU02 + GamtildeLLL212*GamtildeULL210*gamtildeUU10 + GamtildeLLL212*GamtildeULL211*gamtildeUU11 + GamtildeLLL212*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL210*gamtildeUU20 + GamtildeLLL222*GamtildeULL211*gamtildeUU21 + GamtildeLLL222*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL1200*gamtildeUU00 - 0.5*ddgamtildeLL1201*gamtildeUU01 - 0.5*ddgamtildeLL1202*gamtildeUU02 - 0.5*ddgamtildeLL1210*gamtildeUU10 - 0.5*ddgamtildeLL1211*gamtildeUU11 - 0.5*ddgamtildeLL1212*gamtildeUU12 - 0.5*ddgamtildeLL1220*gamtildeUU20 - 0.5*ddgamtildeLL1221*gamtildeUU21 - 0.5*ddgamtildeLL1222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL20 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL000*GamtildeULL020*gamtildeUU00 + GamtildeLLL000*GamtildeULL021*gamtildeUU01 + GamtildeLLL000*GamtildeULL022*gamtildeUU02 + GamtildeLLL010*GamtildeULL020*gamtildeUU10 + GamtildeLLL010*GamtildeULL021*gamtildeUU11 + GamtildeLLL010*GamtildeULL022*gamtildeUU12 + GamtildeLLL020*GamtildeULL020*gamtildeUU20 + GamtildeLLL020*GamtildeULL021*gamtildeUU21 + GamtildeLLL020*GamtildeULL022*gamtildeUU22 + GamtildeLLL100*GamtildeULL120*gamtildeUU00 + GamtildeLLL100*GamtildeULL121*gamtildeUU01 + GamtildeLLL100*GamtildeULL122*gamtildeUU02 + GamtildeLLL110*GamtildeULL120*gamtildeUU10 + GamtildeLLL110*GamtildeULL121*gamtildeUU11 + GamtildeLLL110*GamtildeULL122*gamtildeUU12 + GamtildeLLL120*GamtildeULL120*gamtildeUU20 + GamtildeLLL120*GamtildeULL121*gamtildeUU21 + GamtildeLLL120*GamtildeULL122*gamtildeUU22 + GamtildeLLL200*GamtildeULL220*gamtildeUU00 + GamtildeLLL200*GamtildeULL221*gamtildeUU01 + GamtildeLLL200*GamtildeULL222*gamtildeUU02 + GamtildeLLL210*GamtildeULL220*gamtildeUU10 + GamtildeLLL210*GamtildeULL221*gamtildeUU11 + GamtildeLLL210*GamtildeULL222*gamtildeUU12 + GamtildeLLL220*GamtildeULL220*gamtildeUU20 + GamtildeLLL220*GamtildeULL221*gamtildeUU21 + GamtildeLLL220*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL2000*gamtildeUU00 - 0.5*ddgamtildeLL2001*gamtildeUU01 - 0.5*ddgamtildeLL2002*gamtildeUU02 - 0.5*ddgamtildeLL2010*gamtildeUU10 - 0.5*ddgamtildeLL2011*gamtildeUU11 - 0.5*ddgamtildeLL2012*gamtildeUU12 - 0.5*ddgamtildeLL2020*gamtildeUU20 - 0.5*ddgamtildeLL2021*gamtildeUU21 - 0.5*ddgamtildeLL2022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL21 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL001*GamtildeULL020*gamtildeUU00 + GamtildeLLL001*GamtildeULL021*gamtildeUU01 + GamtildeLLL001*GamtildeULL022*gamtildeUU02 + GamtildeLLL011*GamtildeULL020*gamtildeUU10 + GamtildeLLL011*GamtildeULL021*gamtildeUU11 + GamtildeLLL011*GamtildeULL022*gamtildeUU12 + GamtildeLLL021*GamtildeULL020*gamtildeUU20 + GamtildeLLL021*GamtildeULL021*gamtildeUU21 + GamtildeLLL021*GamtildeULL022*gamtildeUU22 + GamtildeLLL101*GamtildeULL120*gamtildeUU00 + GamtildeLLL101*GamtildeULL121*gamtildeUU01 + GamtildeLLL101*GamtildeULL122*gamtildeUU02 + GamtildeLLL111*GamtildeULL120*gamtildeUU10 + GamtildeLLL111*GamtildeULL121*gamtildeUU11 + GamtildeLLL111*GamtildeULL122*gamtildeUU12 + GamtildeLLL121*GamtildeULL120*gamtildeUU20 + GamtildeLLL121*GamtildeULL121*gamtildeUU21 + GamtildeLLL121*GamtildeULL122*gamtildeUU22 + GamtildeLLL201*GamtildeULL220*gamtildeUU00 + GamtildeLLL201*GamtildeULL221*gamtildeUU01 + GamtildeLLL201*GamtildeULL222*gamtildeUU02 + GamtildeLLL211*GamtildeULL220*gamtildeUU10 + GamtildeLLL211*GamtildeULL221*gamtildeUU11 + GamtildeLLL211*GamtildeULL222*gamtildeUU12 + GamtildeLLL221*GamtildeULL220*gamtildeUU20 + GamtildeLLL221*GamtildeULL221*gamtildeUU21 + GamtildeLLL221*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL2100*gamtildeUU00 - 0.5*ddgamtildeLL2101*gamtildeUU01 - 0.5*ddgamtildeLL2102*gamtildeUU02 - 0.5*ddgamtildeLL2110*gamtildeUU10 - 0.5*ddgamtildeLL2111*gamtildeUU11 - 0.5*ddgamtildeLL2112*gamtildeUU12 - 0.5*ddgamtildeLL2120*gamtildeUU20 - 0.5*ddgamtildeLL2121*gamtildeUU21 - 0.5*ddgamtildeLL2122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL22 = 1.0*GamtildeDU0*GamtildeLLL220 + 1.0*GamtildeDU1*GamtildeLLL221 + 1.0*GamtildeDU2*GamtildeLLL222 + GamtildeLLL002*GamtildeULL020*gamtildeUU00 + GamtildeLLL002*GamtildeULL021*gamtildeUU01 + GamtildeLLL002*GamtildeULL022*gamtildeUU02 + GamtildeLLL012*GamtildeULL020*gamtildeUU10 + GamtildeLLL012*GamtildeULL021*gamtildeUU11 + GamtildeLLL012*GamtildeULL022*gamtildeUU12 + GamtildeLLL022*GamtildeULL020*gamtildeUU20 + GamtildeLLL022*GamtildeULL021*gamtildeUU21 + GamtildeLLL022*GamtildeULL022*gamtildeUU22 + GamtildeLLL102*GamtildeULL120*gamtildeUU00 + GamtildeLLL102*GamtildeULL121*gamtildeUU01 + GamtildeLLL102*GamtildeULL122*gamtildeUU02 + GamtildeLLL112*GamtildeULL120*gamtildeUU10 + GamtildeLLL112*GamtildeULL121*gamtildeUU11 + GamtildeLLL112*GamtildeULL122*gamtildeUU12 + GamtildeLLL122*GamtildeULL120*gamtildeUU20 + GamtildeLLL122*GamtildeULL121*gamtildeUU21 + GamtildeLLL122*GamtildeULL122*gamtildeUU22 + 2*GamtildeLLL200*GamtildeULL002*gamtildeUU00 + 2*GamtildeLLL200*GamtildeULL012*gamtildeUU10 + 2*GamtildeLLL200*GamtildeULL022*gamtildeUU20 + 2*GamtildeLLL201*GamtildeULL002*gamtildeUU01 + 2*GamtildeLLL201*GamtildeULL012*gamtildeUU11 + 2*GamtildeLLL201*GamtildeULL022*gamtildeUU21 + 2*GamtildeLLL202*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL202*GamtildeULL012*gamtildeUU12 + 2*GamtildeLLL202*GamtildeULL022*gamtildeUU22 + GamtildeLLL202*GamtildeULL220*gamtildeUU00 + GamtildeLLL202*GamtildeULL221*gamtildeUU01 + GamtildeLLL202*GamtildeULL222*gamtildeUU02 + 2*GamtildeLLL210*GamtildeULL102*gamtildeUU00 + 2*GamtildeLLL210*GamtildeULL112*gamtildeUU10 + 2*GamtildeLLL210*GamtildeULL122*gamtildeUU20 + 2*GamtildeLLL211*GamtildeULL102*gamtildeUU01 + 2*GamtildeLLL211*GamtildeULL112*gamtildeUU11 + 2*GamtildeLLL211*GamtildeULL122*gamtildeUU21 + 2*GamtildeLLL212*GamtildeULL102*gamtildeUU02 + 2*GamtildeLLL212*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL212*GamtildeULL122*gamtildeUU22 + GamtildeLLL212*GamtildeULL220*gamtildeUU10 + GamtildeLLL212*GamtildeULL221*gamtildeUU11 + GamtildeLLL212*GamtildeULL222*gamtildeUU12 + 2*GamtildeLLL220*GamtildeULL202*gamtildeUU00 + 2*GamtildeLLL220*GamtildeULL212*gamtildeUU10 + 2*GamtildeLLL220*GamtildeULL222*gamtildeUU20 + 2*GamtildeLLL221*GamtildeULL202*gamtildeUU01 + 2*GamtildeLLL221*GamtildeULL212*gamtildeUU11 + 2*GamtildeLLL221*GamtildeULL222*gamtildeUU21 + 2*GamtildeLLL222*GamtildeULL202*gamtildeUU02 + 2*GamtildeLLL222*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL220*gamtildeUU20 + GamtildeLLL222*GamtildeULL221*gamtildeUU21 + 3*GamtildeLLL222*GamtildeULL222*gamtildeUU22 + 1.0*dGamtildeU02*gamtildeLL02 + 1.0*dGamtildeU12*gamtildeLL12 + 1.0*dGamtildeU22*gamtildeLL22 - 0.5*ddgamtildeLL2200*gamtildeUU00 - 0.5*ddgamtildeLL2201*gamtildeUU01 - 0.5*ddgamtildeLL2202*gamtildeUU02 - 0.5*ddgamtildeLL2210*gamtildeUU10 - 0.5*ddgamtildeLL2211*gamtildeUU11 - 0.5*ddgamtildeLL2212*gamtildeUU12 - 0.5*ddgamtildeLL2220*gamtildeUU20 - 0.5*ddgamtildeLL2221*gamtildeUU21 - 0.5*ddgamtildeLL2222*gamtildeUU22;
        amrex::Real DtildeDtildephiLL00 = -GamtildeULL000*dphi0 - GamtildeULL100*dphi1 - GamtildeULL200*dphi2 + ddphi00;
        amrex::Real DtildeDtildephiLL01 = -GamtildeULL001*dphi0 - GamtildeULL101*dphi1 - GamtildeULL201*dphi2 + ddphi01;
        amrex::Real DtildeDtildephiLL02 = -GamtildeULL002*dphi0 - GamtildeULL102*dphi1 - GamtildeULL202*dphi2 + ddphi02;
        amrex::Real DtildeDtildephiLL10 = -GamtildeULL010*dphi0 - GamtildeULL110*dphi1 - GamtildeULL210*dphi2 + ddphi10;
        amrex::Real DtildeDtildephiLL11 = -GamtildeULL011*dphi0 - GamtildeULL111*dphi1 - GamtildeULL211*dphi2 + ddphi11;
        amrex::Real DtildeDtildephiLL12 = -GamtildeULL012*dphi0 - GamtildeULL112*dphi1 - GamtildeULL212*dphi2 + ddphi12;
        amrex::Real DtildeDtildephiLL20 = -GamtildeULL020*dphi0 - GamtildeULL120*dphi1 - GamtildeULL220*dphi2 + ddphi20;
        amrex::Real DtildeDtildephiLL21 = -GamtildeULL021*dphi0 - GamtildeULL121*dphi1 - GamtildeULL221*dphi2 + ddphi21;
        amrex::Real DtildeDtildephiLL22 = -GamtildeULL022*dphi0 - GamtildeULL122*dphi1 - GamtildeULL222*dphi2 + ddphi22;
        amrex::Real RphiLL00 = -2*DtildeDtildephiLL00*gamtildeLL00*gamtildeUU00 - 2*DtildeDtildephiLL00 - 2*DtildeDtildephiLL01*gamtildeLL00*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL00*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL00*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL00*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL00*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL00*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL00*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL00*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL00*gamtildeUU00 + 4*std::pow(dphi0, 2) - 4*dphi0*dphi1*gamtildeLL00*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL00*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL00*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL00*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL00*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL00*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL00*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL00*gamtildeUU22;
        amrex::Real RphiLL01 = -2*DtildeDtildephiLL00*gamtildeLL01*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL01*gamtildeUU01 - 2*DtildeDtildephiLL01 - 2*DtildeDtildephiLL02*gamtildeLL01*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL01*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL01*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL01*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL01*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL01*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL01*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL01*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL01*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL01*gamtildeUU10 + 4*dphi0*dphi1 - 4*dphi0*dphi2*gamtildeLL01*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL01*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL01*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL01*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL01*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL01*gamtildeUU22;
        amrex::Real RphiLL02 = -2*DtildeDtildephiLL00*gamtildeLL02*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL02*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL02*gamtildeUU02 - 2*DtildeDtildephiLL02 - 2*DtildeDtildephiLL10*gamtildeLL02*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL02*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL02*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL02*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL02*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL02*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL02*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL02*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL02*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL02*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL02*gamtildeUU20 + 4*dphi0*dphi2 - 4*std::pow(dphi1, 2)*gamtildeLL02*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL02*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL02*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL02*gamtildeUU22;
        amrex::Real RphiLL10 = -2*DtildeDtildephiLL00*gamtildeLL10*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL10*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL10*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL10*gamtildeUU10 - 2*DtildeDtildephiLL10 - 2*DtildeDtildephiLL11*gamtildeLL10*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL10*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL10*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL10*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL10*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL10*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL10*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL10*gamtildeUU10 + 4*dphi0*dphi1 - 4*dphi0*dphi2*gamtildeLL10*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL10*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL10*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL10*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL10*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL10*gamtildeUU22;
        amrex::Real RphiLL11 = -2*DtildeDtildephiLL00*gamtildeLL11*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL11*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL11*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL11*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL11*gamtildeUU11 - 2*DtildeDtildephiLL11 - 2*DtildeDtildephiLL12*gamtildeLL11*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL11*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL11*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL11*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL11*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL11*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL11*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL11*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL11*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL11*gamtildeUU11 + 4*std::pow(dphi1, 2) - 4*dphi1*dphi2*gamtildeLL11*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL11*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL11*gamtildeUU22;
        amrex::Real RphiLL12 = -2*DtildeDtildephiLL00*gamtildeLL12*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL12*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL12*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL12*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL12*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL12*gamtildeUU12 - 2*DtildeDtildephiLL12 - 2*DtildeDtildephiLL20*gamtildeLL12*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL12*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL12*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL12*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL12*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL12*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL12*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL12*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL12*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL12*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL12*gamtildeUU21 + 4*dphi1*dphi2 - 4*std::pow(dphi2, 2)*gamtildeLL12*gamtildeUU22;
        amrex::Real RphiLL20 = -2*DtildeDtildephiLL00*gamtildeLL20*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL20*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL20*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL20*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL20*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL20*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL20*gamtildeUU20 - 2*DtildeDtildephiLL20 - 2*DtildeDtildephiLL21*gamtildeLL20*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL20*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL20*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL20*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL20*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL20*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL20*gamtildeUU20 + 4*dphi0*dphi2 - 4*std::pow(dphi1, 2)*gamtildeLL20*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL20*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL20*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL20*gamtildeUU22;
        amrex::Real RphiLL21 = -2*DtildeDtildephiLL00*gamtildeLL21*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL21*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL21*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL21*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL21*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL21*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL21*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL21*gamtildeUU21 - 2*DtildeDtildephiLL21 - 2*DtildeDtildephiLL22*gamtildeLL21*gamtildeUU22 - 4*std::pow(dphi0, 2)*gamtildeLL21*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL21*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL21*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL21*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL21*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL21*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL21*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL21*gamtildeUU21 + 4*dphi1*dphi2 - 4*std::pow(dphi2, 2)*gamtildeLL21*gamtildeUU22;
        amrex::Real RphiLL22 = -2*DtildeDtildephiLL00*gamtildeLL22*gamtildeUU00 - 2*DtildeDtildephiLL01*gamtildeLL22*gamtildeUU01 - 2*DtildeDtildephiLL02*gamtildeLL22*gamtildeUU02 - 2*DtildeDtildephiLL10*gamtildeLL22*gamtildeUU10 - 2*DtildeDtildephiLL11*gamtildeLL22*gamtildeUU11 - 2*DtildeDtildephiLL12*gamtildeLL22*gamtildeUU12 - 2*DtildeDtildephiLL20*gamtildeLL22*gamtildeUU20 - 2*DtildeDtildephiLL21*gamtildeLL22*gamtildeUU21 - 2*DtildeDtildephiLL22*gamtildeLL22*gamtildeUU22 - 2*DtildeDtildephiLL22 - 4*std::pow(dphi0, 2)*gamtildeLL22*gamtildeUU00 - 4*dphi0*dphi1*gamtildeLL22*gamtildeUU01 - 4*dphi0*dphi1*gamtildeLL22*gamtildeUU10 - 4*dphi0*dphi2*gamtildeLL22*gamtildeUU02 - 4*dphi0*dphi2*gamtildeLL22*gamtildeUU20 - 4*std::pow(dphi1, 2)*gamtildeLL22*gamtildeUU11 - 4*dphi1*dphi2*gamtildeLL22*gamtildeUU12 - 4*dphi1*dphi2*gamtildeLL22*gamtildeUU21 - 4*std::pow(dphi2, 2)*gamtildeLL22*gamtildeUU22 + 4*std::pow(dphi2, 2);
        amrex::Real RLL00 = RphiLL00 + RtildeLL00;
        amrex::Real RLL01 = RphiLL01 + RtildeLL01;
        amrex::Real RLL02 = RphiLL02 + RtildeLL02;
        amrex::Real RLL10 = RphiLL10 + RtildeLL10;
        amrex::Real RLL11 = RphiLL11 + RtildeLL11;
        amrex::Real RLL12 = RphiLL12 + RtildeLL12;
        amrex::Real RLL20 = RphiLL20 + RtildeLL20;
        amrex::Real RLL21 = RphiLL21 + RtildeLL21;
        amrex::Real RLL22 = RphiLL22 + RtildeLL22;
        amrex::Real Rsclr = 0 + RLL00*gamUU00 + RLL01*gamUU01 + RLL02*gamUU02 + RLL10*gamUU10 + RLL11*gamUU11 + RLL12*gamUU12 + RLL20*gamUU20 + RLL21*gamUU21 + RLL22*gamUU22;
        amrex::Real RTFLL00 = -0.33333333333333331*RLL00*gamLL00*gamUU00 + RLL00 - 0.33333333333333331*RLL01*gamLL00*gamUU01 - 0.33333333333333331*RLL02*gamLL00*gamUU02 - 0.33333333333333331*RLL11*gamLL00*gamUU11 - 0.33333333333333331*RLL12*gamLL00*gamUU12 - 0.33333333333333331*RLL22*gamLL00*gamUU22;
        amrex::Real RTFLL01 = -0.33333333333333331*RLL00*gamLL01*gamUU00 - 0.33333333333333331*RLL01*gamLL01*gamUU01 + RLL01 - 0.33333333333333331*RLL02*gamLL01*gamUU02 - 0.33333333333333331*RLL11*gamLL01*gamUU11 - 0.33333333333333331*RLL12*gamLL01*gamUU12 - 0.33333333333333331*RLL22*gamLL01*gamUU22;
        amrex::Real RTFLL02 = -0.33333333333333331*RLL00*gamLL02*gamUU00 - 0.33333333333333331*RLL01*gamLL02*gamUU01 - 0.33333333333333331*RLL02*gamLL02*gamUU02 + RLL02 - 0.33333333333333331*RLL11*gamLL02*gamUU11 - 0.33333333333333331*RLL12*gamLL02*gamUU12 - 0.33333333333333331*RLL22*gamLL02*gamUU22;
        amrex::Real RTFLL10 = -0.33333333333333331*RLL00*gamLL10*gamUU00 - 0.33333333333333331*RLL01*gamLL10*gamUU01 - 0.33333333333333331*RLL02*gamLL10*gamUU02 + RLL10 - 0.33333333333333331*RLL11*gamLL10*gamUU11 - 0.33333333333333331*RLL12*gamLL10*gamUU12 - 0.33333333333333331*RLL22*gamLL10*gamUU22;
        amrex::Real RTFLL11 = -0.33333333333333331*RLL00*gamLL11*gamUU00 - 0.33333333333333331*RLL01*gamLL11*gamUU01 - 0.33333333333333331*RLL02*gamLL11*gamUU02 - 0.33333333333333331*RLL11*gamLL11*gamUU11 + RLL11 - 0.33333333333333331*RLL12*gamLL11*gamUU12 - 0.33333333333333331*RLL22*gamLL11*gamUU22;
        amrex::Real RTFLL12 = -0.33333333333333331*RLL00*gamLL12*gamUU00 - 0.33333333333333331*RLL01*gamLL12*gamUU01 - 0.33333333333333331*RLL02*gamLL12*gamUU02 - 0.33333333333333331*RLL11*gamLL12*gamUU11 - 0.33333333333333331*RLL12*gamLL12*gamUU12 + RLL12 - 0.33333333333333331*RLL22*gamLL12*gamUU22;
        amrex::Real RTFLL20 = -0.33333333333333331*RLL00*gamLL20*gamUU00 - 0.33333333333333331*RLL01*gamLL20*gamUU01 - 0.33333333333333331*RLL02*gamLL20*gamUU02 - 0.33333333333333331*RLL11*gamLL20*gamUU11 - 0.33333333333333331*RLL12*gamLL20*gamUU12 + RLL20 - 0.33333333333333331*RLL22*gamLL20*gamUU22;
        amrex::Real RTFLL21 = -0.33333333333333331*RLL00*gamLL21*gamUU00 - 0.33333333333333331*RLL01*gamLL21*gamUU01 - 0.33333333333333331*RLL02*gamLL21*gamUU02 - 0.33333333333333331*RLL11*gamLL21*gamUU11 - 0.33333333333333331*RLL12*gamLL21*gamUU12 + RLL21 - 0.33333333333333331*RLL22*gamLL21*gamUU22;
        amrex::Real RTFLL22 = -0.33333333333333331*RLL00*gamLL22*gamUU00 - 0.33333333333333331*RLL01*gamLL22*gamUU01 - 0.33333333333333331*RLL02*gamLL22*gamUU02 - 0.33333333333333331*RLL11*gamLL22*gamUU11 - 0.33333333333333331*RLL12*gamLL22*gamUU12 - 0.33333333333333331*RLL22*gamLL22*gamUU22 + RLL22;
        rhs_fab(i, j, k, Idx::phi) = KOphi - 0.16666666666666666*alpha*(Khat + 2*theta) + betaU0*dphi0 + betaU1*dphi1 + betaU2*dphi2 + 0.16666666666666666*dbetaU00 + 0.16666666666666666*dbetaU11 + 0.16666666666666666*dbetaU22;

        rhs_fab(i, j, k, Idx::gamtildeLL00) = -2*AtildeLL00*alpha + KOgamtildeLL00 + betaU0*dgamtildeLL000 + betaU1*dgamtildeLL001 + betaU2*dgamtildeLL002 + 1.3333333333333335*dbetaU00*gamtildeLL00 + 2*dbetaU10*gamtildeLL01 - 0.66666666666666663*dbetaU11*gamtildeLL00 + 2*dbetaU20*gamtildeLL02 - 0.66666666666666663*dbetaU22*gamtildeLL00;

        rhs_fab(i, j, k, Idx::gamtildeLL01) = -2*AtildeLL01*alpha + KOgamtildeLL01 + betaU0*dgamtildeLL010 + betaU1*dgamtildeLL011 + betaU2*dgamtildeLL012 - 0.66666666666666663*dbetaU00*gamtildeLL01 + dbetaU00*gamtildeLL10 + dbetaU01*gamtildeLL00 + dbetaU10*gamtildeLL11 + 0.33333333333333337*dbetaU11*gamtildeLL01 + dbetaU20*gamtildeLL12 + dbetaU21*gamtildeLL02 - 0.66666666666666663*dbetaU22*gamtildeLL01;

        rhs_fab(i, j, k, Idx::gamtildeLL02) = -2*AtildeLL02*alpha + KOgamtildeLL02 + betaU0*dgamtildeLL020 + betaU1*dgamtildeLL021 + betaU2*dgamtildeLL022 - 0.66666666666666663*dbetaU00*gamtildeLL02 + dbetaU00*gamtildeLL20 + dbetaU02*gamtildeLL00 + dbetaU10*gamtildeLL21 - 0.66666666666666663*dbetaU11*gamtildeLL02 + dbetaU12*gamtildeLL01 + dbetaU20*gamtildeLL22 + 0.33333333333333337*dbetaU22*gamtildeLL02;

        rhs_fab(i, j, k, Idx::gamtildeLL11) = -2*AtildeLL11*alpha + KOgamtildeLL11 + betaU0*dgamtildeLL110 + betaU1*dgamtildeLL111 + betaU2*dgamtildeLL112 - 0.66666666666666663*dbetaU00*gamtildeLL11 + 2*dbetaU01*gamtildeLL10 + 1.3333333333333335*dbetaU11*gamtildeLL11 + 2*dbetaU21*gamtildeLL12 - 0.66666666666666663*dbetaU22*gamtildeLL11;

        rhs_fab(i, j, k, Idx::gamtildeLL12) = -2*AtildeLL12*alpha + KOgamtildeLL12 + betaU0*dgamtildeLL120 + betaU1*dgamtildeLL121 + betaU2*dgamtildeLL122 - 0.66666666666666663*dbetaU00*gamtildeLL12 + dbetaU01*gamtildeLL20 + dbetaU02*gamtildeLL10 - 0.66666666666666663*dbetaU11*gamtildeLL12 + dbetaU11*gamtildeLL21 + dbetaU12*gamtildeLL11 + dbetaU21*gamtildeLL22 + 0.33333333333333337*dbetaU22*gamtildeLL12;

        rhs_fab(i, j, k, Idx::gamtildeLL22) = -2*AtildeLL22*alpha + KOgamtildeLL22 + betaU0*dgamtildeLL220 + betaU1*dgamtildeLL221 + betaU2*dgamtildeLL222 - 0.66666666666666663*dbetaU00*gamtildeLL22 + 2*dbetaU02*gamtildeLL20 - 0.66666666666666663*dbetaU11*gamtildeLL22 + 2*dbetaU12*gamtildeLL21 + 1.3333333333333335*dbetaU22*gamtildeLL22;

        amrex::Real kappa1 = 0.02;
        amrex::Real kappa2 = 0;
        rhs_fab(i, j, k, Idx::Khat) = 0 + AtildeLL00*AtildeUU00*alpha + AtildeLL01*AtildeUU01*alpha + AtildeLL02*AtildeUU02*alpha + AtildeLL10*AtildeUU10*alpha + AtildeLL11*AtildeUU11*alpha + AtildeLL12*AtildeUU12*alpha + AtildeLL20*AtildeUU20*alpha + AtildeLL21*AtildeUU21*alpha + AtildeLL22*AtildeUU22*alpha - DDalphaLL00*gamUU00 - DDalphaLL01*gamUU10 - DDalphaLL02*gamUU20 - DDalphaLL10*gamUU01 - DDalphaLL11*gamUU11 - DDalphaLL12*gamUU21 - DDalphaLL20*gamUU02 - DDalphaLL21*gamUU12 - DDalphaLL22*gamUU22 + KOKhat + 0.33333333333333331*alpha*(kappa1*theta*(1 - kappa2) + std::pow(Khat + 2*theta, 2)) + betaU0*dKhat0 + betaU1*dKhat1 + betaU2*dKhat2;

        rhs_fab(i, j, k, Idx::AtildeLL00) = -2*AtildeLL00*AtildeUL00*alpha + AtildeLL00*alpha*(Khat + 2*theta) + 1.3333333333333335*AtildeLL00*dbetaU00 - 0.66666666666666663*AtildeLL00*dbetaU11 - 0.66666666666666663*AtildeLL00*dbetaU22 - 2*AtildeLL01*AtildeUL10*alpha + 2*AtildeLL01*dbetaU10 - 2*AtildeLL02*AtildeUL20*alpha + 2*AtildeLL02*dbetaU20 + KOAtildeLL00 + betaU0*dAtildeLL000 + betaU1*dAtildeLL001 + betaU2*dAtildeLL002 + chi*(-DDalphaTFLL00 + RTFLL00*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL01) = -2*AtildeLL00*AtildeUL01*alpha + AtildeLL00*dbetaU01 - 2*AtildeLL01*AtildeUL11*alpha + AtildeLL01*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL01*dbetaU00 + 0.33333333333333337*AtildeLL01*dbetaU11 - 0.66666666666666663*AtildeLL01*dbetaU22 - 2*AtildeLL02*AtildeUL21*alpha + AtildeLL02*dbetaU21 + AtildeLL10*dbetaU00 + AtildeLL11*dbetaU10 + AtildeLL12*dbetaU20 + KOAtildeLL01 + betaU0*dAtildeLL010 + betaU1*dAtildeLL011 + betaU2*dAtildeLL012 + chi*(-DDalphaTFLL01 + RTFLL01*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL02) = -2*AtildeLL00*AtildeUL02*alpha + AtildeLL00*dbetaU02 - 2*AtildeLL01*AtildeUL12*alpha + AtildeLL01*dbetaU12 - 2*AtildeLL02*AtildeUL22*alpha + AtildeLL02*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL02*dbetaU00 - 0.66666666666666663*AtildeLL02*dbetaU11 + 0.33333333333333337*AtildeLL02*dbetaU22 + AtildeLL20*dbetaU00 + AtildeLL21*dbetaU10 + AtildeLL22*dbetaU20 + KOAtildeLL02 + betaU0*dAtildeLL020 + betaU1*dAtildeLL021 + betaU2*dAtildeLL022 + chi*(-DDalphaTFLL02 + RTFLL02*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL11) = -2*AtildeLL10*AtildeUL01*alpha + 2*AtildeLL10*dbetaU01 - 2*AtildeLL11*AtildeUL11*alpha + AtildeLL11*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL11*dbetaU00 + 1.3333333333333335*AtildeLL11*dbetaU11 - 0.66666666666666663*AtildeLL11*dbetaU22 - 2*AtildeLL12*AtildeUL21*alpha + 2*AtildeLL12*dbetaU21 + KOAtildeLL11 + betaU0*dAtildeLL110 + betaU1*dAtildeLL111 + betaU2*dAtildeLL112 + chi*(-DDalphaTFLL11 + RTFLL11*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL12) = -2*AtildeLL10*AtildeUL02*alpha + AtildeLL10*dbetaU02 - 2*AtildeLL11*AtildeUL12*alpha + AtildeLL11*dbetaU12 - 2*AtildeLL12*AtildeUL22*alpha + AtildeLL12*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL12*dbetaU00 - 0.66666666666666663*AtildeLL12*dbetaU11 + 0.33333333333333337*AtildeLL12*dbetaU22 + AtildeLL20*dbetaU01 + AtildeLL21*dbetaU11 + AtildeLL22*dbetaU21 + KOAtildeLL12 + betaU0*dAtildeLL120 + betaU1*dAtildeLL121 + betaU2*dAtildeLL122 + chi*(-DDalphaTFLL12 + RTFLL12*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL22) = -2*AtildeLL20*AtildeUL02*alpha + 2*AtildeLL20*dbetaU02 - 2*AtildeLL21*AtildeUL12*alpha + 2*AtildeLL21*dbetaU12 - 2*AtildeLL22*AtildeUL22*alpha + AtildeLL22*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL22*dbetaU00 - 0.66666666666666663*AtildeLL22*dbetaU11 + 1.3333333333333335*AtildeLL22*dbetaU22 + KOAtildeLL22 + betaU0*dAtildeLL220 + betaU1*dAtildeLL221 + betaU2*dAtildeLL222 + chi*(-DDalphaTFLL22 + RTFLL22*alpha);

        rhs_fab(i, j, k, Idx::theta) = -0.5*AtildeLL00*AtildeUU00*alpha - 0.5*AtildeLL01*AtildeUU01*alpha - 0.5*AtildeLL02*AtildeUU02*alpha - 0.5*AtildeLL10*AtildeUU10*alpha - 0.5*AtildeLL11*AtildeUU11*alpha - 0.5*AtildeLL12*AtildeUU12*alpha - 0.5*AtildeLL20*AtildeUU20*alpha - 0.5*AtildeLL21*AtildeUU21*alpha - 0.5*AtildeLL22*AtildeUU22*alpha + KOtheta + 0.5*alpha*(Rsclr - 2*kappa1*theta*(kappa2 + 2) + 0.66666666666666663*std::pow(Khat + 2*theta, 2)) + betaU0*dtheta0 + betaU1*dtheta1 + betaU2*dtheta2;

        rhs_fab(i, j, k, Idx::GamtildeU0) = 2*AtildeUU00*GamtildeULL000*alpha - 2*AtildeUU00*dalpha0 + 2*AtildeUU01*GamtildeULL010*alpha - 2*AtildeUU01*dalpha1 + 2*AtildeUU02*GamtildeULL020*alpha - 2*AtildeUU02*dalpha2 + 2*AtildeUU10*GamtildeULL001*alpha + 2*AtildeUU11*GamtildeULL011*alpha + 2*AtildeUU12*GamtildeULL021*alpha + 2*AtildeUU20*GamtildeULL002*alpha + 2*AtildeUU21*GamtildeULL012*alpha + 2*AtildeUU22*GamtildeULL022*alpha - 0.33333333333333337*GamtildeDU0*dbetaU00 + 0.66666666666666663*GamtildeDU0*dbetaU11 + 0.66666666666666663*GamtildeDU0*dbetaU22 - GamtildeDU1*dbetaU01 - GamtildeDU2*dbetaU02 + KOGamtildeU0 - 2*alpha*kappa1*(-GamtildeDU0 + GamtildeU0) + 2*alpha*(6*AtildeUU00*dphi0 - 0.33333333333333331*gamtildeUU00*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU01*dphi1 - 0.33333333333333331*gamtildeUU01*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU02*dphi2 - 0.33333333333333331*gamtildeUU02*(2*dKhat2 + dtheta2)) + betaU0*dGamtildeU00 + betaU1*dGamtildeU01 + betaU2*dGamtildeU02 + 1.3333333333333333*ddbetaU000*gamtildeUU00 + ddbetaU001*gamtildeUU01 + 0.33333333333333331*ddbetaU001*gamtildeUU10 + ddbetaU002*gamtildeUU02 + 0.33333333333333331*ddbetaU002*gamtildeUU20 + ddbetaU010*gamtildeUU10 + ddbetaU011*gamtildeUU11 + ddbetaU012*gamtildeUU12 + ddbetaU020*gamtildeUU20 + ddbetaU021*gamtildeUU21 + ddbetaU022*gamtildeUU22 + 0.33333333333333331*ddbetaU110*gamtildeUU00 + 0.33333333333333331*ddbetaU111*gamtildeUU10 + 0.33333333333333331*ddbetaU112*gamtildeUU20 + 0.33333333333333331*ddbetaU220*gamtildeUU00 + 0.33333333333333331*ddbetaU221*gamtildeUU10 + 0.33333333333333331*ddbetaU222*gamtildeUU20;

        rhs_fab(i, j, k, Idx::GamtildeU1) = 2*AtildeUU00*GamtildeULL100*alpha + 2*AtildeUU01*GamtildeULL110*alpha + 2*AtildeUU02*GamtildeULL120*alpha + 2*AtildeUU10*GamtildeULL101*alpha - 2*AtildeUU10*dalpha0 + 2*AtildeUU11*GamtildeULL111*alpha - 2*AtildeUU11*dalpha1 + 2*AtildeUU12*GamtildeULL121*alpha - 2*AtildeUU12*dalpha2 + 2*AtildeUU20*GamtildeULL102*alpha + 2*AtildeUU21*GamtildeULL112*alpha + 2*AtildeUU22*GamtildeULL122*alpha - GamtildeDU0*dbetaU10 + 0.66666666666666663*GamtildeDU1*dbetaU00 - 0.33333333333333337*GamtildeDU1*dbetaU11 + 0.66666666666666663*GamtildeDU1*dbetaU22 - GamtildeDU2*dbetaU12 + KOGamtildeU1 - 2*alpha*kappa1*(-GamtildeDU1 + GamtildeU1) + 2*alpha*(6*AtildeUU10*dphi0 - 0.33333333333333331*gamtildeUU10*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU11*dphi1 - 0.33333333333333331*gamtildeUU11*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU12*dphi2 - 0.33333333333333331*gamtildeUU12*(2*dKhat2 + dtheta2)) + betaU0*dGamtildeU10 + betaU1*dGamtildeU11 + betaU2*dGamtildeU12 + 0.33333333333333331*ddbetaU000*gamtildeUU01 + 0.33333333333333331*ddbetaU001*gamtildeUU11 + 0.33333333333333331*ddbetaU002*gamtildeUU21 + ddbetaU100*gamtildeUU00 + ddbetaU101*gamtildeUU01 + ddbetaU102*gamtildeUU02 + 0.33333333333333331*ddbetaU110*gamtildeUU01 + ddbetaU110*gamtildeUU10 + 1.3333333333333333*ddbetaU111*gamtildeUU11 + ddbetaU112*gamtildeUU12 + 0.33333333333333331*ddbetaU112*gamtildeUU21 + ddbetaU120*gamtildeUU20 + ddbetaU121*gamtildeUU21 + ddbetaU122*gamtildeUU22 + 0.33333333333333331*ddbetaU220*gamtildeUU01 + 0.33333333333333331*ddbetaU221*gamtildeUU11 + 0.33333333333333331*ddbetaU222*gamtildeUU21;

        rhs_fab(i, j, k, Idx::GamtildeU2) = 2*AtildeUU00*GamtildeULL200*alpha + 2*AtildeUU01*GamtildeULL210*alpha + 2*AtildeUU02*GamtildeULL220*alpha + 2*AtildeUU10*GamtildeULL201*alpha + 2*AtildeUU11*GamtildeULL211*alpha + 2*AtildeUU12*GamtildeULL221*alpha + 2*AtildeUU20*GamtildeULL202*alpha - 2*AtildeUU20*dalpha0 + 2*AtildeUU21*GamtildeULL212*alpha - 2*AtildeUU21*dalpha1 + 2*AtildeUU22*GamtildeULL222*alpha - 2*AtildeUU22*dalpha2 - GamtildeDU0*dbetaU20 - GamtildeDU1*dbetaU21 + 0.66666666666666663*GamtildeDU2*dbetaU00 + 0.66666666666666663*GamtildeDU2*dbetaU11 - 0.33333333333333337*GamtildeDU2*dbetaU22 + KOGamtildeU2 - 2*alpha*kappa1*(-GamtildeDU2 + GamtildeU2) + 2*alpha*(6*AtildeUU20*dphi0 - 0.33333333333333331*gamtildeUU20*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU21*dphi1 - 0.33333333333333331*gamtildeUU21*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU22*dphi2 - 0.33333333333333331*gamtildeUU22*(2*dKhat2 + dtheta2)) + betaU0*dGamtildeU20 + betaU1*dGamtildeU21 + betaU2*dGamtildeU22 + 0.33333333333333331*ddbetaU000*gamtildeUU02 + 0.33333333333333331*ddbetaU001*gamtildeUU12 + 0.33333333333333331*ddbetaU002*gamtildeUU22 + 0.33333333333333331*ddbetaU110*gamtildeUU02 + 0.33333333333333331*ddbetaU111*gamtildeUU12 + 0.33333333333333331*ddbetaU112*gamtildeUU22 + ddbetaU200*gamtildeUU00 + ddbetaU201*gamtildeUU01 + ddbetaU202*gamtildeUU02 + ddbetaU210*gamtildeUU10 + ddbetaU211*gamtildeUU11 + ddbetaU212*gamtildeUU12 + 0.33333333333333331*ddbetaU220*gamtildeUU02 + ddbetaU220*gamtildeUU20 + 0.33333333333333331*ddbetaU221*gamtildeUU12 + ddbetaU221*gamtildeUU21 + 1.3333333333333333*ddbetaU222*gamtildeUU22;

        rhs_fab(i, j, k, Idx::alpha) = KOalpha - 2*Khat*alpha + betaU0*dalpha0 + betaU1*dalpha1 + betaU2*dalpha2;

        rhs_fab(i, j, k, Idx::betaU0) = 0.75*BU0 + KObetaU0 + betaU0*dbetaU00 + betaU1*dbetaU01 + betaU2*dbetaU02;

        rhs_fab(i, j, k, Idx::betaU1) = 0.75*BU1 + KObetaU1 + betaU0*dbetaU10 + betaU1*dbetaU11 + betaU2*dbetaU12;

        rhs_fab(i, j, k, Idx::betaU2) = 0.75*BU2 + KObetaU2 + betaU0*dbetaU20 + betaU1*dbetaU21 + betaU2*dbetaU22;

        amrex::Real eta = 1;
        rhs_fab(i, j, k, Idx::BU0) = 2*AtildeUU00*GamtildeULL000*alpha - 2*AtildeUU00*dalpha0 + 2*AtildeUU01*GamtildeULL010*alpha - 2*AtildeUU01*dalpha1 + 2*AtildeUU02*GamtildeULL020*alpha - 2*AtildeUU02*dalpha2 + 2*AtildeUU10*GamtildeULL001*alpha + 2*AtildeUU11*GamtildeULL011*alpha + 2*AtildeUU12*GamtildeULL021*alpha + 2*AtildeUU20*GamtildeULL002*alpha + 2*AtildeUU21*GamtildeULL012*alpha + 2*AtildeUU22*GamtildeULL022*alpha - BU0*eta - 0.33333333333333337*GamtildeDU0*dbetaU00 + 0.66666666666666663*GamtildeDU0*dbetaU11 + 0.66666666666666663*GamtildeDU0*dbetaU22 - GamtildeDU1*dbetaU01 - GamtildeDU2*dbetaU02 + KOBU0 + KOGamtildeU0 - 2*alpha*kappa1*(-GamtildeDU0 + GamtildeU0) + 2*alpha*(6*AtildeUU00*dphi0 - 0.33333333333333331*gamtildeUU00*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU01*dphi1 - 0.33333333333333331*gamtildeUU01*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU02*dphi2 - 0.33333333333333331*gamtildeUU02*(2*dKhat2 + dtheta2)) + betaU0*dBU00 + betaU1*dBU01 + betaU2*dBU02 + 1.3333333333333333*ddbetaU000*gamtildeUU00 + ddbetaU001*gamtildeUU01 + 0.33333333333333331*ddbetaU001*gamtildeUU10 + ddbetaU002*gamtildeUU02 + 0.33333333333333331*ddbetaU002*gamtildeUU20 + ddbetaU010*gamtildeUU10 + ddbetaU011*gamtildeUU11 + ddbetaU012*gamtildeUU12 + ddbetaU020*gamtildeUU20 + ddbetaU021*gamtildeUU21 + ddbetaU022*gamtildeUU22 + 0.33333333333333331*ddbetaU110*gamtildeUU00 + 0.33333333333333331*ddbetaU111*gamtildeUU10 + 0.33333333333333331*ddbetaU112*gamtildeUU20 + 0.33333333333333331*ddbetaU220*gamtildeUU00 + 0.33333333333333331*ddbetaU221*gamtildeUU10 + 0.33333333333333331*ddbetaU222*gamtildeUU20;

        rhs_fab(i, j, k, Idx::BU1) = 2*AtildeUU00*GamtildeULL100*alpha + 2*AtildeUU01*GamtildeULL110*alpha + 2*AtildeUU02*GamtildeULL120*alpha + 2*AtildeUU10*GamtildeULL101*alpha - 2*AtildeUU10*dalpha0 + 2*AtildeUU11*GamtildeULL111*alpha - 2*AtildeUU11*dalpha1 + 2*AtildeUU12*GamtildeULL121*alpha - 2*AtildeUU12*dalpha2 + 2*AtildeUU20*GamtildeULL102*alpha + 2*AtildeUU21*GamtildeULL112*alpha + 2*AtildeUU22*GamtildeULL122*alpha - BU1*eta - GamtildeDU0*dbetaU10 + 0.66666666666666663*GamtildeDU1*dbetaU00 - 0.33333333333333337*GamtildeDU1*dbetaU11 + 0.66666666666666663*GamtildeDU1*dbetaU22 - GamtildeDU2*dbetaU12 + KOBU1 + KOGamtildeU1 - 2*alpha*kappa1*(-GamtildeDU1 + GamtildeU1) + 2*alpha*(6*AtildeUU10*dphi0 - 0.33333333333333331*gamtildeUU10*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU11*dphi1 - 0.33333333333333331*gamtildeUU11*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU12*dphi2 - 0.33333333333333331*gamtildeUU12*(2*dKhat2 + dtheta2)) + betaU0*dBU10 + betaU1*dBU11 + betaU2*dBU12 + 0.33333333333333331*ddbetaU000*gamtildeUU01 + 0.33333333333333331*ddbetaU001*gamtildeUU11 + 0.33333333333333331*ddbetaU002*gamtildeUU21 + ddbetaU100*gamtildeUU00 + ddbetaU101*gamtildeUU01 + ddbetaU102*gamtildeUU02 + 0.33333333333333331*ddbetaU110*gamtildeUU01 + ddbetaU110*gamtildeUU10 + 1.3333333333333333*ddbetaU111*gamtildeUU11 + ddbetaU112*gamtildeUU12 + 0.33333333333333331*ddbetaU112*gamtildeUU21 + ddbetaU120*gamtildeUU20 + ddbetaU121*gamtildeUU21 + ddbetaU122*gamtildeUU22 + 0.33333333333333331*ddbetaU220*gamtildeUU01 + 0.33333333333333331*ddbetaU221*gamtildeUU11 + 0.33333333333333331*ddbetaU222*gamtildeUU21;

        rhs_fab(i, j, k, Idx::BU2) = 2*AtildeUU00*GamtildeULL200*alpha + 2*AtildeUU01*GamtildeULL210*alpha + 2*AtildeUU02*GamtildeULL220*alpha + 2*AtildeUU10*GamtildeULL201*alpha + 2*AtildeUU11*GamtildeULL211*alpha + 2*AtildeUU12*GamtildeULL221*alpha + 2*AtildeUU20*GamtildeULL202*alpha - 2*AtildeUU20*dalpha0 + 2*AtildeUU21*GamtildeULL212*alpha - 2*AtildeUU21*dalpha1 + 2*AtildeUU22*GamtildeULL222*alpha - 2*AtildeUU22*dalpha2 - BU2*eta - GamtildeDU0*dbetaU20 - GamtildeDU1*dbetaU21 + 0.66666666666666663*GamtildeDU2*dbetaU00 + 0.66666666666666663*GamtildeDU2*dbetaU11 - 0.33333333333333337*GamtildeDU2*dbetaU22 + KOBU2 + KOGamtildeU2 - 2*alpha*kappa1*(-GamtildeDU2 + GamtildeU2) + 2*alpha*(6*AtildeUU20*dphi0 - 0.33333333333333331*gamtildeUU20*(2*dKhat0 + dtheta0)) + 2*alpha*(6*AtildeUU21*dphi1 - 0.33333333333333331*gamtildeUU21*(2*dKhat1 + dtheta1)) + 2*alpha*(6*AtildeUU22*dphi2 - 0.33333333333333331*gamtildeUU22*(2*dKhat2 + dtheta2)) + betaU0*dBU20 + betaU1*dBU21 + betaU2*dBU22 + 0.33333333333333331*ddbetaU000*gamtildeUU02 + 0.33333333333333331*ddbetaU001*gamtildeUU12 + 0.33333333333333331*ddbetaU002*gamtildeUU22 + 0.33333333333333331*ddbetaU110*gamtildeUU02 + 0.33333333333333331*ddbetaU111*gamtildeUU12 + 0.33333333333333331*ddbetaU112*gamtildeUU22 + ddbetaU200*gamtildeUU00 + ddbetaU201*gamtildeUU01 + ddbetaU202*gamtildeUU02 + ddbetaU210*gamtildeUU10 + ddbetaU211*gamtildeUU11 + ddbetaU212*gamtildeUU12 + 0.33333333333333331*ddbetaU220*gamtildeUU02 + ddbetaU220*gamtildeUU20 + 0.33333333333333331*ddbetaU221*gamtildeUU12 + ddbetaU221*gamtildeUU21 + 1.3333333333333333*ddbetaU222*gamtildeUU22;

}
#endif