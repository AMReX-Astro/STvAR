#ifndef ET_INTEGRATION_RHS_K_H
#define ET_INTEGRATION_RHS_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_rhs(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& rhs_fab, 
        amrex::Array4<amrex::Real const> const& state_fab,
        const amrex::Real time,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtildeLL00 = state_fab(i, j, k, Idx::gamtildeLL00);
        amrex::Real gamtildeLL01 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL02 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL10 = state_fab(i, j, k, Idx::gamtildeLL01);
        amrex::Real gamtildeLL11 = state_fab(i, j, k, Idx::gamtildeLL11);
        amrex::Real gamtildeLL12 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL20 = state_fab(i, j, k, Idx::gamtildeLL02);
        amrex::Real gamtildeLL21 = state_fab(i, j, k, Idx::gamtildeLL12);
        amrex::Real gamtildeLL22 = state_fab(i, j, k, Idx::gamtildeLL22);
        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);

        amrex::Real AtildeLL00 = state_fab(i, j, k, Idx::AtildeLL00);
        amrex::Real AtildeLL01 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL02 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL10 = state_fab(i, j, k, Idx::AtildeLL01);
        amrex::Real AtildeLL11 = state_fab(i, j, k, Idx::AtildeLL11);
        amrex::Real AtildeLL12 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL20 = state_fab(i, j, k, Idx::AtildeLL02);
        amrex::Real AtildeLL21 = state_fab(i, j, k, Idx::AtildeLL12);
        amrex::Real AtildeLL22 = state_fab(i, j, k, Idx::AtildeLL22);
        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real GamtildeU0 = state_fab(i, j, k, Idx::GamtildeU0);
        amrex::Real GamtildeU1 = state_fab(i, j, k, Idx::GamtildeU1);
        amrex::Real GamtildeU2 = state_fab(i, j, k, Idx::GamtildeU2);
        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real betaU0 = state_fab(i, j, k, Idx::betaU0);
        amrex::Real betaU1 = state_fab(i, j, k, Idx::betaU1);
        amrex::Real betaU2 = state_fab(i, j, k, Idx::betaU2);

        std::vector<amrex::Real> UpWind; UpWind.push_back(1); UpWind.push_back(0); 
        std::vector<amrex::Real> DnWind; DnWind.push_back(0); DnWind.push_back(1);

        std::vector<amrex::Real> betaAdv0;
        betaAdv0.resize(2);
        
        std::vector<amrex::Real> betaAdv1;
        betaAdv1.resize(2);
        
        std::vector<amrex::Real> betaAdv2;
        betaAdv2.resize(2);
        
        betaAdv0 = (betaU0 > 0) ? UpWind : DnWind;
        betaAdv1 = (betaU1 > 0) ? UpWind : DnWind;
        betaAdv2 = (betaU2 > 0) ? UpWind : DnWind;
        
        amrex::Real betaUp0 = betaAdv0[0];
        amrex::Real betaDn0 = betaAdv0[1];
        amrex::Real betaUp1 = betaAdv1[0];
        amrex::Real betaDn1 = betaAdv1[1];
        amrex::Real betaUp2 = betaAdv2[0];
        amrex::Real betaDn2 = betaAdv2[1];

        amrex::Real Dupchi0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/2.0*state_fab(i + 2, j, k, Idx::chi) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::chi) - 1.0/4.0*state_fab(i - 1, j, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real Dupchi1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/2.0*state_fab(i, j + 2, k, Idx::chi) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::chi) - 1.0/4.0*state_fab(i, j - 1, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real Dupchi2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/2.0*state_fab(i, j, k + 2, Idx::chi) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::chi) - 1.0/4.0*state_fab(i, j, k - 1, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[2];
        amrex::Real Ddnphi0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::chi) - 3.0/2.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 3, j, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real Ddnphi1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::chi) - 3.0/2.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 3, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real Ddnphi2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::chi) - 3.0/2.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 3, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[2];
        amrex::Real betaDchi = betaU0*(Ddnphi0*betaDn0 + Dupchi0*betaUp0) + betaU1*(Ddnphi1*betaDn1 + Dupchi1*betaUp1) + betaU2*(Ddnphi2*betaDn2 + Dupchi2*betaUp2);

        amrex::Real DupgamtildeLL000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real DupgamtildeLL001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real DupgamtildeLL002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL00))/dx[2];
        amrex::Real DupgamtildeLL010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real DupgamtildeLL011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real DupgamtildeLL012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2];
        amrex::Real DupgamtildeLL020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real DupgamtildeLL021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real DupgamtildeLL022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2];
        amrex::Real DupgamtildeLL100 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real DupgamtildeLL101 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real DupgamtildeLL102 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2];
        amrex::Real DupgamtildeLL110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real DupgamtildeLL111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real DupgamtildeLL112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL11))/dx[2];
        amrex::Real DupgamtildeLL120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real DupgamtildeLL121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real DupgamtildeLL122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2];
        amrex::Real DupgamtildeLL200 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real DupgamtildeLL201 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real DupgamtildeLL202 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2];
        amrex::Real DupgamtildeLL210 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real DupgamtildeLL211 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real DupgamtildeLL212 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2];
        amrex::Real DupgamtildeLL220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real DupgamtildeLL221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real DupgamtildeLL222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtildeLL22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtildeLL22))/dx[2];
        amrex::Real DdngamtildeLL000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real DdngamtildeLL001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real DdngamtildeLL002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL00))/dx[2];
        amrex::Real DdngamtildeLL010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real DdngamtildeLL011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real DdngamtildeLL012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2];
        amrex::Real DdngamtildeLL020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real DdngamtildeLL021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real DdngamtildeLL022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2];
        amrex::Real DdngamtildeLL100 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real DdngamtildeLL101 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real DdngamtildeLL102 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2];
        amrex::Real DdngamtildeLL110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real DdngamtildeLL111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real DdngamtildeLL112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL11))/dx[2];
        amrex::Real DdngamtildeLL120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real DdngamtildeLL121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real DdngamtildeLL122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2];
        amrex::Real DdngamtildeLL200 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real DdngamtildeLL201 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real DdngamtildeLL202 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2];
        amrex::Real DdngamtildeLL210 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real DdngamtildeLL211 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real DdngamtildeLL212 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2];
        amrex::Real DdngamtildeLL220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real DdngamtildeLL221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real DdngamtildeLL222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtildeLL22))/dx[2];
        amrex::Real betaDgamtildeLL00 = betaU0*(DdngamtildeLL000*betaDn0 + DupgamtildeLL000*betaUp0) + betaU1*(DdngamtildeLL001*betaDn1 + DupgamtildeLL001*betaUp1) + betaU2*(DdngamtildeLL002*betaDn2 + DupgamtildeLL002*betaUp2);
        amrex::Real betaDgamtildeLL01 = betaU0*(DdngamtildeLL010*betaDn0 + DupgamtildeLL010*betaUp0) + betaU1*(DdngamtildeLL011*betaDn1 + DupgamtildeLL011*betaUp1) + betaU2*(DdngamtildeLL012*betaDn2 + DupgamtildeLL012*betaUp2);
        amrex::Real betaDgamtildeLL02 = betaU0*(DdngamtildeLL020*betaDn0 + DupgamtildeLL020*betaUp0) + betaU1*(DdngamtildeLL021*betaDn1 + DupgamtildeLL021*betaUp1) + betaU2*(DdngamtildeLL022*betaDn2 + DupgamtildeLL022*betaUp2);
        amrex::Real betaDgamtildeLL10 = betaU0*(DdngamtildeLL100*betaDn0 + DupgamtildeLL100*betaUp0) + betaU1*(DdngamtildeLL101*betaDn1 + DupgamtildeLL101*betaUp1) + betaU2*(DdngamtildeLL102*betaDn2 + DupgamtildeLL102*betaUp2);
        amrex::Real betaDgamtildeLL11 = betaU0*(DdngamtildeLL110*betaDn0 + DupgamtildeLL110*betaUp0) + betaU1*(DdngamtildeLL111*betaDn1 + DupgamtildeLL111*betaUp1) + betaU2*(DdngamtildeLL112*betaDn2 + DupgamtildeLL112*betaUp2);
        amrex::Real betaDgamtildeLL12 = betaU0*(DdngamtildeLL120*betaDn0 + DupgamtildeLL120*betaUp0) + betaU1*(DdngamtildeLL121*betaDn1 + DupgamtildeLL121*betaUp1) + betaU2*(DdngamtildeLL122*betaDn2 + DupgamtildeLL122*betaUp2);
        amrex::Real betaDgamtildeLL20 = betaU0*(DdngamtildeLL200*betaDn0 + DupgamtildeLL200*betaUp0) + betaU1*(DdngamtildeLL201*betaDn1 + DupgamtildeLL201*betaUp1) + betaU2*(DdngamtildeLL202*betaDn2 + DupgamtildeLL202*betaUp2);
        amrex::Real betaDgamtildeLL21 = betaU0*(DdngamtildeLL210*betaDn0 + DupgamtildeLL210*betaUp0) + betaU1*(DdngamtildeLL211*betaDn1 + DupgamtildeLL211*betaUp1) + betaU2*(DdngamtildeLL212*betaDn2 + DupgamtildeLL212*betaUp2);
        amrex::Real betaDgamtildeLL22 = betaU0*(DdngamtildeLL220*betaDn0 + DupgamtildeLL220*betaUp0) + betaU1*(DdngamtildeLL221*betaDn1 + DupgamtildeLL221*betaUp1) + betaU2*(DdngamtildeLL222*betaDn2 + DupgamtildeLL222*betaUp2);
        amrex::Real DupKhat0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Khat) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real DupKhat1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Khat) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real DupKhat2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Khat) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[2];
        amrex::Real DdnKhat0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Khat) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Khat) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real DdnKhat1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Khat) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Khat) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real DdnKhat2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Khat) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Khat) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[2];
        amrex::Real betaDKhat = betaU0*(DdnKhat0*betaDn0 + DupKhat0*betaUp0) + betaU1*(DdnKhat1*betaDn1 + DupKhat1*betaUp1) + betaU2*(DdnKhat2*betaDn2 + DupKhat2*betaUp2);

        amrex::Real DupAtildeLL000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real DupAtildeLL001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL00))/dx[1];
        amrex::Real DupAtildeLL002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL00) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL00))/dx[2];
        amrex::Real DupAtildeLL010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real DupAtildeLL011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[1];
        amrex::Real DupAtildeLL012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[2];
        amrex::Real DupAtildeLL020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real DupAtildeLL021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[1];
        amrex::Real DupAtildeLL022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[2];
        amrex::Real DupAtildeLL100 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real DupAtildeLL101 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[1];
        amrex::Real DupAtildeLL102 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL01) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL01))/dx[2];
        amrex::Real DupAtildeLL110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real DupAtildeLL111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL11))/dx[1];
        amrex::Real DupAtildeLL112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL11) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL11))/dx[2];
        amrex::Real DupAtildeLL120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real DupAtildeLL121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[1];
        amrex::Real DupAtildeLL122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[2];
        amrex::Real DupAtildeLL200 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real DupAtildeLL201 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[1];
        amrex::Real DupAtildeLL202 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL02) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL02))/dx[2];
        amrex::Real DupAtildeLL210 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real DupAtildeLL211 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[1];
        amrex::Real DupAtildeLL212 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL12) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL12))/dx[2];
        amrex::Real DupAtildeLL220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::AtildeLL22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::AtildeLL22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::AtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real DupAtildeLL221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::AtildeLL22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::AtildeLL22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::AtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL22))/dx[1];
        amrex::Real DupAtildeLL222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::AtildeLL22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::AtildeLL22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::AtildeLL22) - 5.0/6.0*state_fab(i, j, k, Idx::AtildeLL22))/dx[2];
        amrex::Real DdnAtildeLL000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real DdnAtildeLL001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL00))/dx[1];
        amrex::Real DdnAtildeLL002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL00) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL00))/dx[2];
        amrex::Real DdnAtildeLL010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real DdnAtildeLL011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[1];
        amrex::Real DdnAtildeLL012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[2];
        amrex::Real DdnAtildeLL020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real DdnAtildeLL021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[1];
        amrex::Real DdnAtildeLL022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[2];
        amrex::Real DdnAtildeLL100 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real DdnAtildeLL101 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[1];
        amrex::Real DdnAtildeLL102 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL01) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL01))/dx[2];
        amrex::Real DdnAtildeLL110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real DdnAtildeLL111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL11))/dx[1];
        amrex::Real DdnAtildeLL112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL11) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL11))/dx[2];
        amrex::Real DdnAtildeLL120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real DdnAtildeLL121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[1];
        amrex::Real DdnAtildeLL122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[2];
        amrex::Real DdnAtildeLL200 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real DdnAtildeLL201 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[1];
        amrex::Real DdnAtildeLL202 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL02) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL02))/dx[2];
        amrex::Real DdnAtildeLL210 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real DdnAtildeLL211 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[1];
        amrex::Real DdnAtildeLL212 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL12) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL12))/dx[2];
        amrex::Real DdnAtildeLL220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::AtildeLL22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::AtildeLL22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::AtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real DdnAtildeLL221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::AtildeLL22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::AtildeLL22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::AtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL22))/dx[1];
        amrex::Real DdnAtildeLL222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::AtildeLL22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::AtildeLL22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::AtildeLL22) + (5.0/6.0)*state_fab(i, j, k, Idx::AtildeLL22))/dx[2];
        amrex::Real betaDAtildeLL00 = betaU0*(DdnAtildeLL000*betaDn0 + DupAtildeLL000*betaUp0) + betaU1*(DdnAtildeLL001*betaDn1 + DupAtildeLL001*betaUp1) + betaU2*(DdnAtildeLL002*betaDn2 + DupAtildeLL002*betaUp2);
        amrex::Real betaDAtildeLL01 = betaU0*(DdnAtildeLL010*betaDn0 + DupAtildeLL010*betaUp0) + betaU1*(DdnAtildeLL011*betaDn1 + DupAtildeLL011*betaUp1) + betaU2*(DdnAtildeLL012*betaDn2 + DupAtildeLL012*betaUp2);
        amrex::Real betaDAtildeLL02 = betaU0*(DdnAtildeLL020*betaDn0 + DupAtildeLL020*betaUp0) + betaU1*(DdnAtildeLL021*betaDn1 + DupAtildeLL021*betaUp1) + betaU2*(DdnAtildeLL022*betaDn2 + DupAtildeLL022*betaUp2);
        amrex::Real betaDAtildeLL10 = betaU0*(DdnAtildeLL100*betaDn0 + DupAtildeLL100*betaUp0) + betaU1*(DdnAtildeLL101*betaDn1 + DupAtildeLL101*betaUp1) + betaU2*(DdnAtildeLL102*betaDn2 + DupAtildeLL102*betaUp2);
        amrex::Real betaDAtildeLL11 = betaU0*(DdnAtildeLL110*betaDn0 + DupAtildeLL110*betaUp0) + betaU1*(DdnAtildeLL111*betaDn1 + DupAtildeLL111*betaUp1) + betaU2*(DdnAtildeLL112*betaDn2 + DupAtildeLL112*betaUp2);
        amrex::Real betaDAtildeLL12 = betaU0*(DdnAtildeLL120*betaDn0 + DupAtildeLL120*betaUp0) + betaU1*(DdnAtildeLL121*betaDn1 + DupAtildeLL121*betaUp1) + betaU2*(DdnAtildeLL122*betaDn2 + DupAtildeLL122*betaUp2);
        amrex::Real betaDAtildeLL20 = betaU0*(DdnAtildeLL200*betaDn0 + DupAtildeLL200*betaUp0) + betaU1*(DdnAtildeLL201*betaDn1 + DupAtildeLL201*betaUp1) + betaU2*(DdnAtildeLL202*betaDn2 + DupAtildeLL202*betaUp2);
        amrex::Real betaDAtildeLL21 = betaU0*(DdnAtildeLL210*betaDn0 + DupAtildeLL210*betaUp0) + betaU1*(DdnAtildeLL211*betaDn1 + DupAtildeLL211*betaUp1) + betaU2*(DdnAtildeLL212*betaDn2 + DupAtildeLL212*betaUp2);
        amrex::Real betaDAtildeLL22 = betaU0*(DdnAtildeLL220*betaDn0 + DupAtildeLL220*betaUp0) + betaU1*(DdnAtildeLL221*betaDn1 + DupAtildeLL221*betaUp1) + betaU2*(DdnAtildeLL222*betaDn2 + DupAtildeLL222*betaUp2);
        amrex::Real Duptheta0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/2.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::theta) - 1.0/4.0*state_fab(i - 1, j, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real Duptheta1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/2.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::theta) - 1.0/4.0*state_fab(i, j - 1, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real Duptheta2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/2.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::theta) - 1.0/4.0*state_fab(i, j, k - 1, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[2];
        amrex::Real Ddntheta0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/2.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 3, j, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real Ddntheta1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/2.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 3, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real Ddntheta2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/2.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 3, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[2];
        amrex::Real betaDtheta = betaU0*(Ddntheta0*betaDn0 + Duptheta0*betaUp0) + betaU1*(Ddntheta1*betaDn1 + Duptheta1*betaUp1) + betaU2*(Ddntheta2*betaDn2 + Duptheta2*betaUp2);

        amrex::Real DupGamtildeU00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::GamtildeU0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::GamtildeU0) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real DupGamtildeU01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::GamtildeU0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::GamtildeU0) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU0))/dx[1];
        amrex::Real DupGamtildeU02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::GamtildeU0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::GamtildeU0) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU0))/dx[2];
        amrex::Real DupGamtildeU10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::GamtildeU1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::GamtildeU1) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real DupGamtildeU11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::GamtildeU1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::GamtildeU1) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU1))/dx[1];
        amrex::Real DupGamtildeU12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::GamtildeU1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::GamtildeU1) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU1))/dx[2];
        amrex::Real DupGamtildeU20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::GamtildeU2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::GamtildeU2) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real DupGamtildeU21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::GamtildeU2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::GamtildeU2) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU2))/dx[1];
        amrex::Real DupGamtildeU22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::GamtildeU2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::GamtildeU2) - 5.0/6.0*state_fab(i, j, k, Idx::GamtildeU2))/dx[2];
        amrex::Real DdnGamtildeU00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::GamtildeU0) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real DdnGamtildeU01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::GamtildeU0) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU0))/dx[1];
        amrex::Real DdnGamtildeU02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::GamtildeU0) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU0))/dx[2];
        amrex::Real DdnGamtildeU10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::GamtildeU1) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real DdnGamtildeU11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::GamtildeU1) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU1))/dx[1];
        amrex::Real DdnGamtildeU12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::GamtildeU1) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU1))/dx[2];
        amrex::Real DdnGamtildeU20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::GamtildeU2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::GamtildeU2) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real DdnGamtildeU21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::GamtildeU2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::GamtildeU2) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU2))/dx[1];
        amrex::Real DdnGamtildeU22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::GamtildeU2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::GamtildeU2) + (5.0/6.0)*state_fab(i, j, k, Idx::GamtildeU2))/dx[2];
        amrex::Real betaDGamtildeU0 = betaU0*(DdnGamtildeU00*betaDn0 + DupGamtildeU00*betaUp0) + betaU1*(DdnGamtildeU01*betaDn1 + DupGamtildeU01*betaUp1) + betaU2*(DdnGamtildeU02*betaDn2 + DupGamtildeU02*betaUp2);
        amrex::Real betaDGamtildeU1 = betaU0*(DdnGamtildeU10*betaDn0 + DupGamtildeU10*betaUp0) + betaU1*(DdnGamtildeU11*betaDn1 + DupGamtildeU11*betaUp1) + betaU2*(DdnGamtildeU12*betaDn2 + DupGamtildeU12*betaUp2);
        amrex::Real betaDGamtildeU2 = betaU0*(DdnGamtildeU20*betaDn0 + DupGamtildeU20*betaUp0) + betaU1*(DdnGamtildeU21*betaDn1 + DupGamtildeU21*betaUp1) + betaU2*(DdnGamtildeU22*betaDn2 + DupGamtildeU22*betaUp2);
        amrex::Real Dupalpha0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/2.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real Dupalpha1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/2.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real Dupalpha2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/2.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::alpha) - 1.0/4.0*state_fab(i, j, k - 1, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[2];
        amrex::Real Ddnalpha0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/2.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 3, j, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real Ddnalpha1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/2.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 3, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real Ddnalpha2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/2.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 3, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[2];
        amrex::Real betaDalpha = betaU0*(Ddnalpha0*betaDn0 + Dupalpha0*betaUp0) + betaU1*(Ddnalpha1*betaDn1 + Dupalpha1*betaUp1) + betaU2*(Ddnalpha2*betaDn2 + Dupalpha2*betaUp2);

        amrex::Real DupbetaU00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::betaU0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::betaU0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::betaU0) - 5.0/6.0*state_fab(i, j, k, Idx::betaU0))/dx[0];
        amrex::Real DupbetaU01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::betaU0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::betaU0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::betaU0) - 5.0/6.0*state_fab(i, j, k, Idx::betaU0))/dx[1];
        amrex::Real DupbetaU02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::betaU0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::betaU0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::betaU0) - 5.0/6.0*state_fab(i, j, k, Idx::betaU0))/dx[2];
        amrex::Real DupbetaU10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::betaU1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::betaU1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::betaU1) - 5.0/6.0*state_fab(i, j, k, Idx::betaU1))/dx[0];
        amrex::Real DupbetaU11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::betaU1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::betaU1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::betaU1) - 5.0/6.0*state_fab(i, j, k, Idx::betaU1))/dx[1];
        amrex::Real DupbetaU12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::betaU1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::betaU1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::betaU1) - 5.0/6.0*state_fab(i, j, k, Idx::betaU1))/dx[2];
        amrex::Real DupbetaU20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::betaU2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::betaU2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::betaU2) - 5.0/6.0*state_fab(i, j, k, Idx::betaU2))/dx[0];
        amrex::Real DupbetaU21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::betaU2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::betaU2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::betaU2) - 5.0/6.0*state_fab(i, j, k, Idx::betaU2))/dx[1];
        amrex::Real DupbetaU22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::betaU2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::betaU2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::betaU2) - 5.0/6.0*state_fab(i, j, k, Idx::betaU2))/dx[2];
        amrex::Real DdnbetaU00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::betaU0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::betaU0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::betaU0) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU0))/dx[0];
        amrex::Real DdnbetaU01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::betaU0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::betaU0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::betaU0) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU0))/dx[1];
        amrex::Real DdnbetaU02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::betaU0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::betaU0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::betaU0) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU0))/dx[2];
        amrex::Real DdnbetaU10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::betaU1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::betaU1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::betaU1) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU1))/dx[0];
        amrex::Real DdnbetaU11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::betaU1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::betaU1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::betaU1) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU1))/dx[1];
        amrex::Real DdnbetaU12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::betaU1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::betaU1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::betaU1) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU1))/dx[2];
        amrex::Real DdnbetaU20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::betaU2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::betaU2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::betaU2) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU2))/dx[0];
        amrex::Real DdnbetaU21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::betaU2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::betaU2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::betaU2) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU2))/dx[1];
        amrex::Real DdnbetaU22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::betaU2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::betaU2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::betaU2) + (5.0/6.0)*state_fab(i, j, k, Idx::betaU2))/dx[2];
        amrex::Real betaDbetaU0 = betaU0*(DdnbetaU00*betaDn0 + DupbetaU00*betaUp0) + betaU1*(DdnbetaU01*betaDn1 + DupbetaU01*betaUp1) + betaU2*(DdnbetaU02*betaDn2 + DupbetaU02*betaUp2);
        amrex::Real betaDbetaU1 = betaU0*(DdnbetaU10*betaDn0 + DupbetaU10*betaUp0) + betaU1*(DdnbetaU11*betaDn1 + DupbetaU11*betaUp1) + betaU2*(DdnbetaU12*betaDn2 + DupbetaU12*betaUp2);
        amrex::Real betaDbetaU2 = betaU0*(DdnbetaU20*betaDn0 + DupbetaU20*betaUp0) + betaU1*(DdnbetaU21*betaDn1 + DupbetaU21*betaUp1) + betaU2*(DdnbetaU22*betaDn2 + DupbetaU22*betaUp2);
        amrex::Real dchi0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dchi1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dchi2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];
        amrex::Real ddchi00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[0], 2);
        amrex::Real ddchi01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real ddchi02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real ddchi10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real ddchi11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[1], 2);
        amrex::Real ddchi12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real ddchi20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real ddchi21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real ddchi22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[2], 2);
        amrex::Real KOchi = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::chi) - 6*state_fab(i, j, k + 2, Idx::chi) + state_fab(i, j, k + 3, Idx::chi) + 15*state_fab(i, j, k - 1, Idx::chi) - 6*state_fab(i, j, k - 2, Idx::chi) + state_fab(i, j, k - 3, Idx::chi) - 20*state_fab(i, j, k, Idx::chi))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::chi) - 6*state_fab(i, j + 2, k, Idx::chi) + state_fab(i, j + 3, k, Idx::chi) + 15*state_fab(i, j - 1, k, Idx::chi) - 6*state_fab(i, j - 2, k, Idx::chi) + state_fab(i, j - 3, k, Idx::chi) - 20*state_fab(i, j, k, Idx::chi))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::chi) - 6*state_fab(i + 2, j, k, Idx::chi) + state_fab(i + 3, j, k, Idx::chi) + 15*state_fab(i - 1, j, k, Idx::chi) - 6*state_fab(i - 2, j, k, Idx::chi) + state_fab(i - 3, j, k, Idx::chi) - 20*state_fab(i, j, k, Idx::chi))/dx[0];

        amrex::Real dgamtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real dgamtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL00))/dx[1];
        amrex::Real dgamtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL00))/dx[2];
        amrex::Real dgamtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real dgamtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL01))/dx[1];
        amrex::Real dgamtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL01))/dx[2];
        amrex::Real dgamtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real dgamtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL11))/dx[1];
        amrex::Real dgamtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL11))/dx[2];
        amrex::Real dgamtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real dgamtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL02))/dx[1];
        amrex::Real dgamtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL02))/dx[2];
        amrex::Real dgamtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real dgamtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL12))/dx[1];
        amrex::Real dgamtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL12))/dx[2];
        amrex::Real dgamtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dgamtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtildeLL22))/dx[1];
        amrex::Real dgamtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtildeLL22))/dx[2];
        amrex::Real ddgamtildeLL0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL00))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL00))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL00))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL00))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL0221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL01))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL01))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL01))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL01))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL11))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL11))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL11))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL11))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL1221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL02))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL02))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL02))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL02))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL12))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL12))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL12))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL12))/std::pow(dx[2], 2);
        amrex::Real ddgamtildeLL2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[0], 2);
        amrex::Real ddgamtildeLL2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtildeLL22))/(dx[0]*dx[1]);
        amrex::Real ddgamtildeLL2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[1], 2);
        amrex::Real ddgamtildeLL2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtildeLL22))/(dx[0]*dx[2]);
        amrex::Real ddgamtildeLL2221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtildeLL22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtildeLL22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtildeLL22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtildeLL22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtildeLL22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtildeLL22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtildeLL22))/(dx[1]*dx[2]);
        amrex::Real ddgamtildeLL2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtildeLL22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtildeLL22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtildeLL22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtildeLL22))/std::pow(dx[2], 2);
        amrex::Real KOgamtildeLL00 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL00) + state_fab(i, j, k + 2, Idx::gamtildeLL00) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL00) + state_fab(i, j, k - 2, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL00) + state_fab(i, j + 2, k, Idx::gamtildeLL00) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL00) + state_fab(i, j - 2, k, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL00) + state_fab(i + 2, j, k, Idx::gamtildeLL00) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL00) + state_fab(i - 2, j, k, Idx::gamtildeLL00) + 6*state_fab(i, j, k, Idx::gamtildeLL00))/dx[0];
        amrex::Real KOgamtildeLL01 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k + 2, Idx::gamtildeLL01) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL01) + state_fab(i, j, k - 2, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j + 2, k, Idx::gamtildeLL01) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL01) + state_fab(i, j - 2, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i + 2, j, k, Idx::gamtildeLL01) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL01) + state_fab(i - 2, j, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real KOgamtildeLL02 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k + 2, Idx::gamtildeLL02) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL02) + state_fab(i, j, k - 2, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j + 2, k, Idx::gamtildeLL02) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL02) + state_fab(i, j - 2, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i + 2, j, k, Idx::gamtildeLL02) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL02) + state_fab(i - 2, j, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real KOgamtildeLL10 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL01) + state_fab(i, j, k + 2, Idx::gamtildeLL01) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL01) + state_fab(i, j, k - 2, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL01) + state_fab(i, j + 2, k, Idx::gamtildeLL01) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL01) + state_fab(i, j - 2, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL01) + state_fab(i + 2, j, k, Idx::gamtildeLL01) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL01) + state_fab(i - 2, j, k, Idx::gamtildeLL01) + 6*state_fab(i, j, k, Idx::gamtildeLL01))/dx[0];
        amrex::Real KOgamtildeLL11 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL11) + state_fab(i, j, k + 2, Idx::gamtildeLL11) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL11) + state_fab(i, j, k - 2, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL11) + state_fab(i, j + 2, k, Idx::gamtildeLL11) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL11) + state_fab(i, j - 2, k, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL11) + state_fab(i + 2, j, k, Idx::gamtildeLL11) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL11) + state_fab(i - 2, j, k, Idx::gamtildeLL11) + 6*state_fab(i, j, k, Idx::gamtildeLL11))/dx[0];
        amrex::Real KOgamtildeLL12 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k + 2, Idx::gamtildeLL12) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL12) + state_fab(i, j, k - 2, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j + 2, k, Idx::gamtildeLL12) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL12) + state_fab(i, j - 2, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i + 2, j, k, Idx::gamtildeLL12) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL12) + state_fab(i - 2, j, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real KOgamtildeLL20 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL02) + state_fab(i, j, k + 2, Idx::gamtildeLL02) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL02) + state_fab(i, j, k - 2, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL02) + state_fab(i, j + 2, k, Idx::gamtildeLL02) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL02) + state_fab(i, j - 2, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL02) + state_fab(i + 2, j, k, Idx::gamtildeLL02) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL02) + state_fab(i - 2, j, k, Idx::gamtildeLL02) + 6*state_fab(i, j, k, Idx::gamtildeLL02))/dx[0];
        amrex::Real KOgamtildeLL21 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL12) + state_fab(i, j, k + 2, Idx::gamtildeLL12) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL12) + state_fab(i, j, k - 2, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL12) + state_fab(i, j + 2, k, Idx::gamtildeLL12) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL12) + state_fab(i, j - 2, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL12) + state_fab(i + 2, j, k, Idx::gamtildeLL12) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL12) + state_fab(i - 2, j, k, Idx::gamtildeLL12) + 6*state_fab(i, j, k, Idx::gamtildeLL12))/dx[0];
        amrex::Real KOgamtildeLL22 = -0.018749999999999999*(-4*state_fab(i, j, k + 1, Idx::gamtildeLL22) + state_fab(i, j, k + 2, Idx::gamtildeLL22) - 4*state_fab(i, j, k - 1, Idx::gamtildeLL22) + state_fab(i, j, k - 2, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[2] - 0.018749999999999999*(-4*state_fab(i, j + 1, k, Idx::gamtildeLL22) + state_fab(i, j + 2, k, Idx::gamtildeLL22) - 4*state_fab(i, j - 1, k, Idx::gamtildeLL22) + state_fab(i, j - 2, k, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[1] - 0.018749999999999999*(-4*state_fab(i + 1, j, k, Idx::gamtildeLL22) + state_fab(i + 2, j, k, Idx::gamtildeLL22) - 4*state_fab(i - 1, j, k, Idx::gamtildeLL22) + state_fab(i - 2, j, k, Idx::gamtildeLL22) + 6*state_fab(i, j, k, Idx::gamtildeLL22))/dx[0];
        amrex::Real dKhat0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dKhat1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dKhat2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];
        amrex::Real KOKhat = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::Khat) - 6*state_fab(i, j, k + 2, Idx::Khat) + state_fab(i, j, k + 3, Idx::Khat) + 15*state_fab(i, j, k - 1, Idx::Khat) - 6*state_fab(i, j, k - 2, Idx::Khat) + state_fab(i, j, k - 3, Idx::Khat) - 20*state_fab(i, j, k, Idx::Khat))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::Khat) - 6*state_fab(i, j + 2, k, Idx::Khat) + state_fab(i, j + 3, k, Idx::Khat) + 15*state_fab(i, j - 1, k, Idx::Khat) - 6*state_fab(i, j - 2, k, Idx::Khat) + state_fab(i, j - 3, k, Idx::Khat) - 20*state_fab(i, j, k, Idx::Khat))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::Khat) - 6*state_fab(i + 2, j, k, Idx::Khat) + state_fab(i + 3, j, k, Idx::Khat) + 15*state_fab(i - 1, j, k, Idx::Khat) - 6*state_fab(i - 2, j, k, Idx::Khat) + state_fab(i - 3, j, k, Idx::Khat) - 20*state_fab(i, j, k, Idx::Khat))/dx[0];

        amrex::Real dAtildeLL000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real dAtildeLL001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL00))/dx[1];
        amrex::Real dAtildeLL002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL00))/dx[2];
        amrex::Real dAtildeLL010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real dAtildeLL101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL01))/dx[1];
        amrex::Real dAtildeLL102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL01))/dx[2];
        amrex::Real dAtildeLL110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real dAtildeLL111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL11))/dx[1];
        amrex::Real dAtildeLL112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL11))/dx[2];
        amrex::Real dAtildeLL120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real dAtildeLL201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL02))/dx[1];
        amrex::Real dAtildeLL202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL02))/dx[2];
        amrex::Real dAtildeLL210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real dAtildeLL211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL12))/dx[1];
        amrex::Real dAtildeLL212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL12))/dx[2];
        amrex::Real dAtildeLL220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::AtildeLL22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real dAtildeLL221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::AtildeLL22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::AtildeLL22))/dx[1];
        amrex::Real dAtildeLL222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::AtildeLL22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::AtildeLL22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::AtildeLL22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::AtildeLL22))/dx[2];
        amrex::Real KOAtildeLL00 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL00) - 6*state_fab(i, j, k + 2, Idx::AtildeLL00) + state_fab(i, j, k + 3, Idx::AtildeLL00) + 15*state_fab(i, j, k - 1, Idx::AtildeLL00) - 6*state_fab(i, j, k - 2, Idx::AtildeLL00) + state_fab(i, j, k - 3, Idx::AtildeLL00) - 20*state_fab(i, j, k, Idx::AtildeLL00))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL00) - 6*state_fab(i, j + 2, k, Idx::AtildeLL00) + state_fab(i, j + 3, k, Idx::AtildeLL00) + 15*state_fab(i, j - 1, k, Idx::AtildeLL00) - 6*state_fab(i, j - 2, k, Idx::AtildeLL00) + state_fab(i, j - 3, k, Idx::AtildeLL00) - 20*state_fab(i, j, k, Idx::AtildeLL00))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL00) - 6*state_fab(i + 2, j, k, Idx::AtildeLL00) + state_fab(i + 3, j, k, Idx::AtildeLL00) + 15*state_fab(i - 1, j, k, Idx::AtildeLL00) - 6*state_fab(i - 2, j, k, Idx::AtildeLL00) + state_fab(i - 3, j, k, Idx::AtildeLL00) - 20*state_fab(i, j, k, Idx::AtildeLL00))/dx[0];
        amrex::Real KOAtildeLL01 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL01) - 6*state_fab(i, j, k + 2, Idx::AtildeLL01) + state_fab(i, j, k + 3, Idx::AtildeLL01) + 15*state_fab(i, j, k - 1, Idx::AtildeLL01) - 6*state_fab(i, j, k - 2, Idx::AtildeLL01) + state_fab(i, j, k - 3, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL01) - 6*state_fab(i, j + 2, k, Idx::AtildeLL01) + state_fab(i, j + 3, k, Idx::AtildeLL01) + 15*state_fab(i, j - 1, k, Idx::AtildeLL01) - 6*state_fab(i, j - 2, k, Idx::AtildeLL01) + state_fab(i, j - 3, k, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL01) - 6*state_fab(i + 2, j, k, Idx::AtildeLL01) + state_fab(i + 3, j, k, Idx::AtildeLL01) + 15*state_fab(i - 1, j, k, Idx::AtildeLL01) - 6*state_fab(i - 2, j, k, Idx::AtildeLL01) + state_fab(i - 3, j, k, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real KOAtildeLL02 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL02) - 6*state_fab(i, j, k + 2, Idx::AtildeLL02) + state_fab(i, j, k + 3, Idx::AtildeLL02) + 15*state_fab(i, j, k - 1, Idx::AtildeLL02) - 6*state_fab(i, j, k - 2, Idx::AtildeLL02) + state_fab(i, j, k - 3, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL02) - 6*state_fab(i, j + 2, k, Idx::AtildeLL02) + state_fab(i, j + 3, k, Idx::AtildeLL02) + 15*state_fab(i, j - 1, k, Idx::AtildeLL02) - 6*state_fab(i, j - 2, k, Idx::AtildeLL02) + state_fab(i, j - 3, k, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL02) - 6*state_fab(i + 2, j, k, Idx::AtildeLL02) + state_fab(i + 3, j, k, Idx::AtildeLL02) + 15*state_fab(i - 1, j, k, Idx::AtildeLL02) - 6*state_fab(i - 2, j, k, Idx::AtildeLL02) + state_fab(i - 3, j, k, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real KOAtildeLL10 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL01) - 6*state_fab(i, j, k + 2, Idx::AtildeLL01) + state_fab(i, j, k + 3, Idx::AtildeLL01) + 15*state_fab(i, j, k - 1, Idx::AtildeLL01) - 6*state_fab(i, j, k - 2, Idx::AtildeLL01) + state_fab(i, j, k - 3, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL01) - 6*state_fab(i, j + 2, k, Idx::AtildeLL01) + state_fab(i, j + 3, k, Idx::AtildeLL01) + 15*state_fab(i, j - 1, k, Idx::AtildeLL01) - 6*state_fab(i, j - 2, k, Idx::AtildeLL01) + state_fab(i, j - 3, k, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL01) - 6*state_fab(i + 2, j, k, Idx::AtildeLL01) + state_fab(i + 3, j, k, Idx::AtildeLL01) + 15*state_fab(i - 1, j, k, Idx::AtildeLL01) - 6*state_fab(i - 2, j, k, Idx::AtildeLL01) + state_fab(i - 3, j, k, Idx::AtildeLL01) - 20*state_fab(i, j, k, Idx::AtildeLL01))/dx[0];
        amrex::Real KOAtildeLL11 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL11) - 6*state_fab(i, j, k + 2, Idx::AtildeLL11) + state_fab(i, j, k + 3, Idx::AtildeLL11) + 15*state_fab(i, j, k - 1, Idx::AtildeLL11) - 6*state_fab(i, j, k - 2, Idx::AtildeLL11) + state_fab(i, j, k - 3, Idx::AtildeLL11) - 20*state_fab(i, j, k, Idx::AtildeLL11))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL11) - 6*state_fab(i, j + 2, k, Idx::AtildeLL11) + state_fab(i, j + 3, k, Idx::AtildeLL11) + 15*state_fab(i, j - 1, k, Idx::AtildeLL11) - 6*state_fab(i, j - 2, k, Idx::AtildeLL11) + state_fab(i, j - 3, k, Idx::AtildeLL11) - 20*state_fab(i, j, k, Idx::AtildeLL11))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL11) - 6*state_fab(i + 2, j, k, Idx::AtildeLL11) + state_fab(i + 3, j, k, Idx::AtildeLL11) + 15*state_fab(i - 1, j, k, Idx::AtildeLL11) - 6*state_fab(i - 2, j, k, Idx::AtildeLL11) + state_fab(i - 3, j, k, Idx::AtildeLL11) - 20*state_fab(i, j, k, Idx::AtildeLL11))/dx[0];
        amrex::Real KOAtildeLL12 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL12) - 6*state_fab(i, j, k + 2, Idx::AtildeLL12) + state_fab(i, j, k + 3, Idx::AtildeLL12) + 15*state_fab(i, j, k - 1, Idx::AtildeLL12) - 6*state_fab(i, j, k - 2, Idx::AtildeLL12) + state_fab(i, j, k - 3, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL12) - 6*state_fab(i, j + 2, k, Idx::AtildeLL12) + state_fab(i, j + 3, k, Idx::AtildeLL12) + 15*state_fab(i, j - 1, k, Idx::AtildeLL12) - 6*state_fab(i, j - 2, k, Idx::AtildeLL12) + state_fab(i, j - 3, k, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL12) - 6*state_fab(i + 2, j, k, Idx::AtildeLL12) + state_fab(i + 3, j, k, Idx::AtildeLL12) + 15*state_fab(i - 1, j, k, Idx::AtildeLL12) - 6*state_fab(i - 2, j, k, Idx::AtildeLL12) + state_fab(i - 3, j, k, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real KOAtildeLL20 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL02) - 6*state_fab(i, j, k + 2, Idx::AtildeLL02) + state_fab(i, j, k + 3, Idx::AtildeLL02) + 15*state_fab(i, j, k - 1, Idx::AtildeLL02) - 6*state_fab(i, j, k - 2, Idx::AtildeLL02) + state_fab(i, j, k - 3, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL02) - 6*state_fab(i, j + 2, k, Idx::AtildeLL02) + state_fab(i, j + 3, k, Idx::AtildeLL02) + 15*state_fab(i, j - 1, k, Idx::AtildeLL02) - 6*state_fab(i, j - 2, k, Idx::AtildeLL02) + state_fab(i, j - 3, k, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL02) - 6*state_fab(i + 2, j, k, Idx::AtildeLL02) + state_fab(i + 3, j, k, Idx::AtildeLL02) + 15*state_fab(i - 1, j, k, Idx::AtildeLL02) - 6*state_fab(i - 2, j, k, Idx::AtildeLL02) + state_fab(i - 3, j, k, Idx::AtildeLL02) - 20*state_fab(i, j, k, Idx::AtildeLL02))/dx[0];
        amrex::Real KOAtildeLL21 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL12) - 6*state_fab(i, j, k + 2, Idx::AtildeLL12) + state_fab(i, j, k + 3, Idx::AtildeLL12) + 15*state_fab(i, j, k - 1, Idx::AtildeLL12) - 6*state_fab(i, j, k - 2, Idx::AtildeLL12) + state_fab(i, j, k - 3, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL12) - 6*state_fab(i, j + 2, k, Idx::AtildeLL12) + state_fab(i, j + 3, k, Idx::AtildeLL12) + 15*state_fab(i, j - 1, k, Idx::AtildeLL12) - 6*state_fab(i, j - 2, k, Idx::AtildeLL12) + state_fab(i, j - 3, k, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL12) - 6*state_fab(i + 2, j, k, Idx::AtildeLL12) + state_fab(i + 3, j, k, Idx::AtildeLL12) + 15*state_fab(i - 1, j, k, Idx::AtildeLL12) - 6*state_fab(i - 2, j, k, Idx::AtildeLL12) + state_fab(i - 3, j, k, Idx::AtildeLL12) - 20*state_fab(i, j, k, Idx::AtildeLL12))/dx[0];
        amrex::Real KOAtildeLL22 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::AtildeLL22) - 6*state_fab(i, j, k + 2, Idx::AtildeLL22) + state_fab(i, j, k + 3, Idx::AtildeLL22) + 15*state_fab(i, j, k - 1, Idx::AtildeLL22) - 6*state_fab(i, j, k - 2, Idx::AtildeLL22) + state_fab(i, j, k - 3, Idx::AtildeLL22) - 20*state_fab(i, j, k, Idx::AtildeLL22))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::AtildeLL22) - 6*state_fab(i, j + 2, k, Idx::AtildeLL22) + state_fab(i, j + 3, k, Idx::AtildeLL22) + 15*state_fab(i, j - 1, k, Idx::AtildeLL22) - 6*state_fab(i, j - 2, k, Idx::AtildeLL22) + state_fab(i, j - 3, k, Idx::AtildeLL22) - 20*state_fab(i, j, k, Idx::AtildeLL22))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::AtildeLL22) - 6*state_fab(i + 2, j, k, Idx::AtildeLL22) + state_fab(i + 3, j, k, Idx::AtildeLL22) + 15*state_fab(i - 1, j, k, Idx::AtildeLL22) - 6*state_fab(i - 2, j, k, Idx::AtildeLL22) + state_fab(i - 3, j, k, Idx::AtildeLL22) - 20*state_fab(i, j, k, Idx::AtildeLL22))/dx[0];
        amrex::Real dtheta0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dtheta1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dtheta2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];
        amrex::Real KOtheta = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::theta) - 6*state_fab(i, j, k + 2, Idx::theta) + state_fab(i, j, k + 3, Idx::theta) + 15*state_fab(i, j, k - 1, Idx::theta) - 6*state_fab(i, j, k - 2, Idx::theta) + state_fab(i, j, k - 3, Idx::theta) - 20*state_fab(i, j, k, Idx::theta))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::theta) - 6*state_fab(i, j + 2, k, Idx::theta) + state_fab(i, j + 3, k, Idx::theta) + 15*state_fab(i, j - 1, k, Idx::theta) - 6*state_fab(i, j - 2, k, Idx::theta) + state_fab(i, j - 3, k, Idx::theta) - 20*state_fab(i, j, k, Idx::theta))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::theta) - 6*state_fab(i + 2, j, k, Idx::theta) + state_fab(i + 3, j, k, Idx::theta) + 15*state_fab(i - 1, j, k, Idx::theta) - 6*state_fab(i - 2, j, k, Idx::theta) + state_fab(i - 3, j, k, Idx::theta) - 20*state_fab(i, j, k, Idx::theta))/dx[0];

        amrex::Real dGamtildeU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real dGamtildeU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU0))/dx[1];
        amrex::Real dGamtildeU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU0))/dx[2];
        amrex::Real dGamtildeU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real dGamtildeU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU1))/dx[1];
        amrex::Real dGamtildeU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU1))/dx[2];
        amrex::Real dGamtildeU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dGamtildeU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GamtildeU2))/dx[1];
        amrex::Real dGamtildeU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GamtildeU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GamtildeU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GamtildeU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GamtildeU2))/dx[2];
        amrex::Real KOGamtildeU0 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::GamtildeU0) - 6*state_fab(i, j, k + 2, Idx::GamtildeU0) + state_fab(i, j, k + 3, Idx::GamtildeU0) + 15*state_fab(i, j, k - 1, Idx::GamtildeU0) - 6*state_fab(i, j, k - 2, Idx::GamtildeU0) + state_fab(i, j, k - 3, Idx::GamtildeU0) - 20*state_fab(i, j, k, Idx::GamtildeU0))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::GamtildeU0) - 6*state_fab(i, j + 2, k, Idx::GamtildeU0) + state_fab(i, j + 3, k, Idx::GamtildeU0) + 15*state_fab(i, j - 1, k, Idx::GamtildeU0) - 6*state_fab(i, j - 2, k, Idx::GamtildeU0) + state_fab(i, j - 3, k, Idx::GamtildeU0) - 20*state_fab(i, j, k, Idx::GamtildeU0))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::GamtildeU0) - 6*state_fab(i + 2, j, k, Idx::GamtildeU0) + state_fab(i + 3, j, k, Idx::GamtildeU0) + 15*state_fab(i - 1, j, k, Idx::GamtildeU0) - 6*state_fab(i - 2, j, k, Idx::GamtildeU0) + state_fab(i - 3, j, k, Idx::GamtildeU0) - 20*state_fab(i, j, k, Idx::GamtildeU0))/dx[0];
        amrex::Real KOGamtildeU1 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::GamtildeU1) - 6*state_fab(i, j, k + 2, Idx::GamtildeU1) + state_fab(i, j, k + 3, Idx::GamtildeU1) + 15*state_fab(i, j, k - 1, Idx::GamtildeU1) - 6*state_fab(i, j, k - 2, Idx::GamtildeU1) + state_fab(i, j, k - 3, Idx::GamtildeU1) - 20*state_fab(i, j, k, Idx::GamtildeU1))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::GamtildeU1) - 6*state_fab(i, j + 2, k, Idx::GamtildeU1) + state_fab(i, j + 3, k, Idx::GamtildeU1) + 15*state_fab(i, j - 1, k, Idx::GamtildeU1) - 6*state_fab(i, j - 2, k, Idx::GamtildeU1) + state_fab(i, j - 3, k, Idx::GamtildeU1) - 20*state_fab(i, j, k, Idx::GamtildeU1))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::GamtildeU1) - 6*state_fab(i + 2, j, k, Idx::GamtildeU1) + state_fab(i + 3, j, k, Idx::GamtildeU1) + 15*state_fab(i - 1, j, k, Idx::GamtildeU1) - 6*state_fab(i - 2, j, k, Idx::GamtildeU1) + state_fab(i - 3, j, k, Idx::GamtildeU1) - 20*state_fab(i, j, k, Idx::GamtildeU1))/dx[0];
        amrex::Real KOGamtildeU2 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::GamtildeU2) - 6*state_fab(i, j, k + 2, Idx::GamtildeU2) + state_fab(i, j, k + 3, Idx::GamtildeU2) + 15*state_fab(i, j, k - 1, Idx::GamtildeU2) - 6*state_fab(i, j, k - 2, Idx::GamtildeU2) + state_fab(i, j, k - 3, Idx::GamtildeU2) - 20*state_fab(i, j, k, Idx::GamtildeU2))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::GamtildeU2) - 6*state_fab(i, j + 2, k, Idx::GamtildeU2) + state_fab(i, j + 3, k, Idx::GamtildeU2) + 15*state_fab(i, j - 1, k, Idx::GamtildeU2) - 6*state_fab(i, j - 2, k, Idx::GamtildeU2) + state_fab(i, j - 3, k, Idx::GamtildeU2) - 20*state_fab(i, j, k, Idx::GamtildeU2))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::GamtildeU2) - 6*state_fab(i + 2, j, k, Idx::GamtildeU2) + state_fab(i + 3, j, k, Idx::GamtildeU2) + 15*state_fab(i - 1, j, k, Idx::GamtildeU2) - 6*state_fab(i - 2, j, k, Idx::GamtildeU2) + state_fab(i - 3, j, k, Idx::GamtildeU2) - 20*state_fab(i, j, k, Idx::GamtildeU2))/dx[0];
        amrex::Real dalpha0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
        amrex::Real dalpha1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
        amrex::Real dalpha2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];
        amrex::Real ddalpha00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 2, j, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
        amrex::Real ddalpha01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real ddalpha02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real ddalpha10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real ddalpha11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 2, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
        amrex::Real ddalpha12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real ddalpha20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real ddalpha21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real ddalpha22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 2, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);
        amrex::Real KOalpha = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::alpha) - 6*state_fab(i, j, k + 2, Idx::alpha) + state_fab(i, j, k + 3, Idx::alpha) + 15*state_fab(i, j, k - 1, Idx::alpha) - 6*state_fab(i, j, k - 2, Idx::alpha) + state_fab(i, j, k - 3, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::alpha) - 6*state_fab(i, j + 2, k, Idx::alpha) + state_fab(i, j + 3, k, Idx::alpha) + 15*state_fab(i, j - 1, k, Idx::alpha) - 6*state_fab(i, j - 2, k, Idx::alpha) + state_fab(i, j - 3, k, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::alpha) - 6*state_fab(i + 2, j, k, Idx::alpha) + state_fab(i + 3, j, k, Idx::alpha) + 15*state_fab(i - 1, j, k, Idx::alpha) - 6*state_fab(i - 2, j, k, Idx::alpha) + state_fab(i - 3, j, k, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[0];

        amrex::Real dbetaU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU0))/dx[0];
        amrex::Real dbetaU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU0))/dx[1];
        amrex::Real dbetaU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU0))/dx[2];
        amrex::Real dbetaU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU1))/dx[0];
        amrex::Real dbetaU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU1))/dx[1];
        amrex::Real dbetaU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU1))/dx[2];
        amrex::Real dbetaU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU2))/dx[0];
        amrex::Real dbetaU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU2))/dx[1];
        amrex::Real dbetaU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU2))/dx[2];
        amrex::Real ddbetaU000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[0], 2);
        amrex::Real ddbetaU001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU0))/(dx[0]*dx[1]);
        amrex::Real ddbetaU002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU0))/(dx[0]*dx[2]);
        amrex::Real ddbetaU010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU0))/(dx[0]*dx[1]);
        amrex::Real ddbetaU011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[1], 2);
        amrex::Real ddbetaU012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU0))/(dx[1]*dx[2]);
        amrex::Real ddbetaU020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU0))/(dx[0]*dx[2]);
        amrex::Real ddbetaU021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU0))/(dx[1]*dx[2]);
        amrex::Real ddbetaU022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[2], 2);
        amrex::Real ddbetaU100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[0], 2);
        amrex::Real ddbetaU101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU1))/(dx[0]*dx[1]);
        amrex::Real ddbetaU102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU1))/(dx[0]*dx[2]);
        amrex::Real ddbetaU110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU1))/(dx[0]*dx[1]);
        amrex::Real ddbetaU111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[1], 2);
        amrex::Real ddbetaU112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU1))/(dx[1]*dx[2]);
        amrex::Real ddbetaU120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU1))/(dx[0]*dx[2]);
        amrex::Real ddbetaU121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU1))/(dx[1]*dx[2]);
        amrex::Real ddbetaU122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[2], 2);
        amrex::Real ddbetaU200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[0], 2);
        amrex::Real ddbetaU201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU2))/(dx[0]*dx[1]);
        amrex::Real ddbetaU202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU2))/(dx[0]*dx[2]);
        amrex::Real ddbetaU210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU2))/(dx[0]*dx[1]);
        amrex::Real ddbetaU211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[1], 2);
        amrex::Real ddbetaU212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU2))/(dx[1]*dx[2]);
        amrex::Real ddbetaU220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU2))/(dx[0]*dx[2]);
        amrex::Real ddbetaU221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU2))/(dx[1]*dx[2]);
        amrex::Real ddbetaU222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[2], 2);
        amrex::Real KObetaU0 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::betaU0) - 6*state_fab(i, j, k + 2, Idx::betaU0) + state_fab(i, j, k + 3, Idx::betaU0) + 15*state_fab(i, j, k - 1, Idx::betaU0) - 6*state_fab(i, j, k - 2, Idx::betaU0) + state_fab(i, j, k - 3, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::betaU0) - 6*state_fab(i, j + 2, k, Idx::betaU0) + state_fab(i, j + 3, k, Idx::betaU0) + 15*state_fab(i, j - 1, k, Idx::betaU0) - 6*state_fab(i, j - 2, k, Idx::betaU0) + state_fab(i, j - 3, k, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::betaU0) - 6*state_fab(i + 2, j, k, Idx::betaU0) + state_fab(i + 3, j, k, Idx::betaU0) + 15*state_fab(i - 1, j, k, Idx::betaU0) - 6*state_fab(i - 2, j, k, Idx::betaU0) + state_fab(i - 3, j, k, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[0];
        amrex::Real KObetaU1 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::betaU1) - 6*state_fab(i, j, k + 2, Idx::betaU1) + state_fab(i, j, k + 3, Idx::betaU1) + 15*state_fab(i, j, k - 1, Idx::betaU1) - 6*state_fab(i, j, k - 2, Idx::betaU1) + state_fab(i, j, k - 3, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::betaU1) - 6*state_fab(i, j + 2, k, Idx::betaU1) + state_fab(i, j + 3, k, Idx::betaU1) + 15*state_fab(i, j - 1, k, Idx::betaU1) - 6*state_fab(i, j - 2, k, Idx::betaU1) + state_fab(i, j - 3, k, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::betaU1) - 6*state_fab(i + 2, j, k, Idx::betaU1) + state_fab(i + 3, j, k, Idx::betaU1) + 15*state_fab(i - 1, j, k, Idx::betaU1) - 6*state_fab(i - 2, j, k, Idx::betaU1) + state_fab(i - 3, j, k, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[0];
        amrex::Real KObetaU2 = 0.0046874999999999998*(15*state_fab(i, j, k + 1, Idx::betaU2) - 6*state_fab(i, j, k + 2, Idx::betaU2) + state_fab(i, j, k + 3, Idx::betaU2) + 15*state_fab(i, j, k - 1, Idx::betaU2) - 6*state_fab(i, j, k - 2, Idx::betaU2) + state_fab(i, j, k - 3, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[2] + 0.0046874999999999998*(15*state_fab(i, j + 1, k, Idx::betaU2) - 6*state_fab(i, j + 2, k, Idx::betaU2) + state_fab(i, j + 3, k, Idx::betaU2) + 15*state_fab(i, j - 1, k, Idx::betaU2) - 6*state_fab(i, j - 2, k, Idx::betaU2) + state_fab(i, j - 3, k, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[1] + 0.0046874999999999998*(15*state_fab(i + 1, j, k, Idx::betaU2) - 6*state_fab(i + 2, j, k, Idx::betaU2) + state_fab(i + 3, j, k, Idx::betaU2) + 15*state_fab(i - 1, j, k, Idx::betaU2) - 6*state_fab(i - 2, j, k, Idx::betaU2) + state_fab(i - 3, j, k, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[0];
        amrex::Real gamtildeUU00 = (gamtildeLL11*gamtildeLL22 - gamtildeLL12*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU01 = (-gamtildeLL01*gamtildeLL22 + gamtildeLL02*gamtildeLL21)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU02 = (gamtildeLL01*gamtildeLL12 - gamtildeLL02*gamtildeLL11)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU10 = (-gamtildeLL10*gamtildeLL22 + gamtildeLL12*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU11 = gamtildeLL00*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU12 = -gamtildeLL00*(gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU20 = (gamtildeLL10*gamtildeLL21 - gamtildeLL11*gamtildeLL20)/(gamtildeLL00*gamtildeLL11*gamtildeLL22 - gamtildeLL00*gamtildeLL12*gamtildeLL21 - gamtildeLL01*gamtildeLL10*gamtildeLL22 + gamtildeLL01*gamtildeLL12*gamtildeLL20 + gamtildeLL02*gamtildeLL10*gamtildeLL21 - gamtildeLL02*gamtildeLL11*gamtildeLL20);
        amrex::Real gamtildeUU21 = -gamtildeLL00*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real gamtildeUU22 = gamtildeLL00*(gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)/((gamtildeLL00*gamtildeLL11 - gamtildeLL01*gamtildeLL10)*(gamtildeLL00*gamtildeLL22 - gamtildeLL02*gamtildeLL20) - (gamtildeLL00*gamtildeLL12 - gamtildeLL02*gamtildeLL10)*(gamtildeLL00*gamtildeLL21 - gamtildeLL01*gamtildeLL20));
        amrex::Real DgambarLLL000 = dgamtildeLL000;
        amrex::Real DgambarLLL001 = dgamtildeLL001;
        amrex::Real DgambarLLL002 = dgamtildeLL002;
        amrex::Real DgambarLLL010 = dgamtildeLL010;
        amrex::Real DgambarLLL011 = dgamtildeLL011;
        amrex::Real DgambarLLL012 = dgamtildeLL012;
        amrex::Real DgambarLLL020 = dgamtildeLL020;
        amrex::Real DgambarLLL021 = dgamtildeLL021;
        amrex::Real DgambarLLL022 = dgamtildeLL022;
        amrex::Real DgambarLLL100 = dgamtildeLL100;
        amrex::Real DgambarLLL101 = dgamtildeLL101;
        amrex::Real DgambarLLL102 = dgamtildeLL102;
        amrex::Real DgambarLLL110 = dgamtildeLL110;
        amrex::Real DgambarLLL111 = dgamtildeLL111;
        amrex::Real DgambarLLL112 = dgamtildeLL112;
        amrex::Real DgambarLLL120 = dgamtildeLL120;
        amrex::Real DgambarLLL121 = dgamtildeLL121;
        amrex::Real DgambarLLL122 = dgamtildeLL122;
        amrex::Real DgambarLLL200 = dgamtildeLL200;
        amrex::Real DgambarLLL201 = dgamtildeLL201;
        amrex::Real DgambarLLL202 = dgamtildeLL202;
        amrex::Real DgambarLLL210 = dgamtildeLL210;
        amrex::Real DgambarLLL211 = dgamtildeLL211;
        amrex::Real DgambarLLL212 = dgamtildeLL212;
        amrex::Real DgambarLLL220 = dgamtildeLL220;
        amrex::Real DgambarLLL221 = dgamtildeLL221;
        amrex::Real DgambarLLL222 = dgamtildeLL222;
        amrex::Real GamtildeULL000 = 0.5*DgambarLLL000*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU02*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL001 = 0.5*DgambarLLL001*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU02*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL002 = 0.5*DgambarLLL002*gamtildeUU00 + 0.5*gamtildeUU01*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU02*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL010 = 0.5*DgambarLLL110*gamtildeUU01 + 0.5*gamtildeUU00*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU02*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL011 = 0.5*DgambarLLL111*gamtildeUU01 + 0.5*gamtildeUU00*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU02*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL012 = 0.5*DgambarLLL112*gamtildeUU01 + 0.5*gamtildeUU00*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU02*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL020 = 0.5*DgambarLLL220*gamtildeUU02 + 0.5*gamtildeUU00*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU01*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL021 = 0.5*DgambarLLL221*gamtildeUU02 + 0.5*gamtildeUU00*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU01*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL022 = 0.5*DgambarLLL222*gamtildeUU02 + 0.5*gamtildeUU00*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU01*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeULL100 = 0.5*DgambarLLL000*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU12*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL101 = 0.5*DgambarLLL001*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU12*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL102 = 0.5*DgambarLLL002*gamtildeUU10 + 0.5*gamtildeUU11*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU12*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL110 = 0.5*DgambarLLL110*gamtildeUU11 + 0.5*gamtildeUU10*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU12*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL111 = 0.5*DgambarLLL111*gamtildeUU11 + 0.5*gamtildeUU10*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU12*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL112 = 0.5*DgambarLLL112*gamtildeUU11 + 0.5*gamtildeUU10*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU12*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL120 = 0.5*DgambarLLL220*gamtildeUU12 + 0.5*gamtildeUU10*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU11*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL121 = 0.5*DgambarLLL221*gamtildeUU12 + 0.5*gamtildeUU10*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU11*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL122 = 0.5*DgambarLLL222*gamtildeUU12 + 0.5*gamtildeUU10*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU11*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeULL200 = 0.5*DgambarLLL000*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL001 + 2*DgambarLLL100) + 0.5*gamtildeUU22*(-DgambarLLL002 + 2*DgambarLLL200);
        amrex::Real GamtildeULL201 = 0.5*DgambarLLL001*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL011 + DgambarLLL101 + DgambarLLL110) + 0.5*gamtildeUU22*(-DgambarLLL012 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL202 = 0.5*DgambarLLL002*gamtildeUU20 + 0.5*gamtildeUU21*(-DgambarLLL021 + DgambarLLL102 + DgambarLLL120) + 0.5*gamtildeUU22*(-DgambarLLL022 + DgambarLLL202 + DgambarLLL220);
        amrex::Real GamtildeULL210 = 0.5*DgambarLLL110*gamtildeUU21 + 0.5*gamtildeUU20*(DgambarLLL001 + DgambarLLL010 - DgambarLLL100) + 0.5*gamtildeUU22*(-DgambarLLL102 + DgambarLLL201 + DgambarLLL210);
        amrex::Real GamtildeULL211 = 0.5*DgambarLLL111*gamtildeUU21 + 0.5*gamtildeUU20*(2*DgambarLLL011 - DgambarLLL110) + 0.5*gamtildeUU22*(-DgambarLLL112 + 2*DgambarLLL211);
        amrex::Real GamtildeULL212 = 0.5*DgambarLLL112*gamtildeUU21 + 0.5*gamtildeUU20*(DgambarLLL012 + DgambarLLL021 - DgambarLLL120) + 0.5*gamtildeUU22*(-DgambarLLL122 + DgambarLLL212 + DgambarLLL221);
        amrex::Real GamtildeULL220 = 0.5*DgambarLLL220*gamtildeUU22 + 0.5*gamtildeUU20*(DgambarLLL002 + DgambarLLL020 - DgambarLLL200) + 0.5*gamtildeUU21*(DgambarLLL102 + DgambarLLL120 - DgambarLLL201);
        amrex::Real GamtildeULL221 = 0.5*DgambarLLL221*gamtildeUU22 + 0.5*gamtildeUU20*(DgambarLLL012 + DgambarLLL021 - DgambarLLL210) + 0.5*gamtildeUU21*(DgambarLLL112 + DgambarLLL121 - DgambarLLL211);
        amrex::Real GamtildeULL222 = 0.5*DgambarLLL222*gamtildeUU22 + 0.5*gamtildeUU20*(2*DgambarLLL022 - DgambarLLL220) + 0.5*gamtildeUU21*(2*DgambarLLL122 - DgambarLLL221);
        amrex::Real GamtildeLLL000 = GamtildeULL000*gamtildeLL00 + GamtildeULL100*gamtildeLL01 + GamtildeULL200*gamtildeLL02;
        amrex::Real GamtildeLLL001 = GamtildeULL001*gamtildeLL00 + GamtildeULL101*gamtildeLL01 + GamtildeULL201*gamtildeLL02;
        amrex::Real GamtildeLLL002 = GamtildeULL002*gamtildeLL00 + GamtildeULL102*gamtildeLL01 + GamtildeULL202*gamtildeLL02;
        amrex::Real GamtildeLLL010 = GamtildeULL010*gamtildeLL00 + GamtildeULL110*gamtildeLL01 + GamtildeULL210*gamtildeLL02;
        amrex::Real GamtildeLLL011 = GamtildeULL011*gamtildeLL00 + GamtildeULL111*gamtildeLL01 + GamtildeULL211*gamtildeLL02;
        amrex::Real GamtildeLLL012 = GamtildeULL012*gamtildeLL00 + GamtildeULL112*gamtildeLL01 + GamtildeULL212*gamtildeLL02;
        amrex::Real GamtildeLLL020 = GamtildeULL020*gamtildeLL00 + GamtildeULL120*gamtildeLL01 + GamtildeULL220*gamtildeLL02;
        amrex::Real GamtildeLLL021 = GamtildeULL021*gamtildeLL00 + GamtildeULL121*gamtildeLL01 + GamtildeULL221*gamtildeLL02;
        amrex::Real GamtildeLLL022 = GamtildeULL022*gamtildeLL00 + GamtildeULL122*gamtildeLL01 + GamtildeULL222*gamtildeLL02;
        amrex::Real GamtildeLLL100 = GamtildeULL000*gamtildeLL10 + GamtildeULL100*gamtildeLL11 + GamtildeULL200*gamtildeLL12;
        amrex::Real GamtildeLLL101 = GamtildeULL001*gamtildeLL10 + GamtildeULL101*gamtildeLL11 + GamtildeULL201*gamtildeLL12;
        amrex::Real GamtildeLLL102 = GamtildeULL002*gamtildeLL10 + GamtildeULL102*gamtildeLL11 + GamtildeULL202*gamtildeLL12;
        amrex::Real GamtildeLLL110 = GamtildeULL010*gamtildeLL10 + GamtildeULL110*gamtildeLL11 + GamtildeULL210*gamtildeLL12;
        amrex::Real GamtildeLLL111 = GamtildeULL011*gamtildeLL10 + GamtildeULL111*gamtildeLL11 + GamtildeULL211*gamtildeLL12;
        amrex::Real GamtildeLLL112 = GamtildeULL012*gamtildeLL10 + GamtildeULL112*gamtildeLL11 + GamtildeULL212*gamtildeLL12;
        amrex::Real GamtildeLLL120 = GamtildeULL020*gamtildeLL10 + GamtildeULL120*gamtildeLL11 + GamtildeULL220*gamtildeLL12;
        amrex::Real GamtildeLLL121 = GamtildeULL021*gamtildeLL10 + GamtildeULL121*gamtildeLL11 + GamtildeULL221*gamtildeLL12;
        amrex::Real GamtildeLLL122 = GamtildeULL022*gamtildeLL10 + GamtildeULL122*gamtildeLL11 + GamtildeULL222*gamtildeLL12;
        amrex::Real GamtildeLLL200 = GamtildeULL000*gamtildeLL20 + GamtildeULL100*gamtildeLL21 + GamtildeULL200*gamtildeLL22;
        amrex::Real GamtildeLLL201 = GamtildeULL001*gamtildeLL20 + GamtildeULL101*gamtildeLL21 + GamtildeULL201*gamtildeLL22;
        amrex::Real GamtildeLLL202 = GamtildeULL002*gamtildeLL20 + GamtildeULL102*gamtildeLL21 + GamtildeULL202*gamtildeLL22;
        amrex::Real GamtildeLLL210 = GamtildeULL010*gamtildeLL20 + GamtildeULL110*gamtildeLL21 + GamtildeULL210*gamtildeLL22;
        amrex::Real GamtildeLLL211 = GamtildeULL011*gamtildeLL20 + GamtildeULL111*gamtildeLL21 + GamtildeULL211*gamtildeLL22;
        amrex::Real GamtildeLLL212 = GamtildeULL012*gamtildeLL20 + GamtildeULL112*gamtildeLL21 + GamtildeULL212*gamtildeLL22;
        amrex::Real GamtildeLLL220 = GamtildeULL020*gamtildeLL20 + GamtildeULL120*gamtildeLL21 + GamtildeULL220*gamtildeLL22;
        amrex::Real GamtildeLLL221 = GamtildeULL021*gamtildeLL20 + GamtildeULL121*gamtildeLL21 + GamtildeULL221*gamtildeLL22;
        amrex::Real GamtildeLLL222 = GamtildeULL022*gamtildeLL20 + GamtildeULL122*gamtildeLL21 + GamtildeULL222*gamtildeLL22;
        amrex::Real GamULL000 = GamtildeULL000 + 0.5*dchi0*gamtildeLL00*gamtildeUU00/chi - 1.0*dchi0/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU02/chi;
        amrex::Real GamULL001 = GamtildeULL001 + 0.5*dchi0*gamtildeLL01*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU01/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU02/chi;
        amrex::Real GamULL002 = GamtildeULL002 + 0.5*dchi0*gamtildeLL02*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU02/chi - 0.5*dchi2/chi;
        amrex::Real GamULL010 = GamtildeULL010 + 0.5*dchi0*gamtildeLL10*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU01/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU02/chi;
        amrex::Real GamULL011 = GamtildeULL011 + 0.5*dchi0*gamtildeLL11*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU02/chi;
        amrex::Real GamULL012 = GamtildeULL012 + 0.5*dchi0*gamtildeLL12*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU02/chi;
        amrex::Real GamULL020 = GamtildeULL020 + 0.5*dchi0*gamtildeLL20*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU02/chi - 0.5*dchi2/chi;
        amrex::Real GamULL021 = GamtildeULL021 + 0.5*dchi0*gamtildeLL21*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU02/chi;
        amrex::Real GamULL022 = GamtildeULL022 + 0.5*dchi0*gamtildeLL22*gamtildeUU00/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU01/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU02/chi;
        amrex::Real GamULL100 = GamtildeULL100 + 0.5*dchi0*gamtildeLL00*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU12/chi;
        amrex::Real GamULL101 = GamtildeULL101 + 0.5*dchi0*gamtildeLL01*gamtildeUU10/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU12/chi;
        amrex::Real GamULL102 = GamtildeULL102 + 0.5*dchi0*gamtildeLL02*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU12/chi;
        amrex::Real GamULL110 = GamtildeULL110 + 0.5*dchi0*gamtildeLL10*gamtildeUU10/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU12/chi;
        amrex::Real GamULL111 = GamtildeULL111 + 0.5*dchi0*gamtildeLL11*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU11/chi - 1.0*dchi1/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU12/chi;
        amrex::Real GamULL112 = GamtildeULL112 + 0.5*dchi0*gamtildeLL12*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU12/chi - 0.5*dchi2/chi;
        amrex::Real GamULL120 = GamtildeULL120 + 0.5*dchi0*gamtildeLL20*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU12/chi;
        amrex::Real GamULL121 = GamtildeULL121 + 0.5*dchi0*gamtildeLL21*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU12/chi - 0.5*dchi2/chi;
        amrex::Real GamULL122 = GamtildeULL122 + 0.5*dchi0*gamtildeLL22*gamtildeUU10/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU11/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU12/chi;
        amrex::Real GamULL200 = GamtildeULL200 + 0.5*dchi0*gamtildeLL00*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL00*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL00*gamtildeUU22/chi;
        amrex::Real GamULL201 = GamtildeULL201 + 0.5*dchi0*gamtildeLL01*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL01*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL01*gamtildeUU22/chi;
        amrex::Real GamULL202 = GamtildeULL202 + 0.5*dchi0*gamtildeLL02*gamtildeUU20/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL02*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL02*gamtildeUU22/chi;
        amrex::Real GamULL210 = GamtildeULL210 + 0.5*dchi0*gamtildeLL10*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL10*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL10*gamtildeUU22/chi;
        amrex::Real GamULL211 = GamtildeULL211 + 0.5*dchi0*gamtildeLL11*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL11*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL11*gamtildeUU22/chi;
        amrex::Real GamULL212 = GamtildeULL212 + 0.5*dchi0*gamtildeLL12*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL12*gamtildeUU21/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL12*gamtildeUU22/chi;
        amrex::Real GamULL220 = GamtildeULL220 + 0.5*dchi0*gamtildeLL20*gamtildeUU20/chi - 0.5*dchi0/chi + 0.5*dchi1*gamtildeLL20*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL20*gamtildeUU22/chi;
        amrex::Real GamULL221 = GamtildeULL221 + 0.5*dchi0*gamtildeLL21*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL21*gamtildeUU21/chi - 0.5*dchi1/chi + 0.5*dchi2*gamtildeLL21*gamtildeUU22/chi;
        amrex::Real GamULL222 = GamtildeULL222 + 0.5*dchi0*gamtildeLL22*gamtildeUU20/chi + 0.5*dchi1*gamtildeLL22*gamtildeUU21/chi + 0.5*dchi2*gamtildeLL22*gamtildeUU22/chi - 1.0*dchi2/chi;
        amrex::Real DDalphaLL00 = -GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00;
        amrex::Real DDalphaLL01 = -GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01;
        amrex::Real DDalphaLL02 = -GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02;
        amrex::Real DDalphaLL10 = -GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10;
        amrex::Real DDalphaLL11 = -GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11;
        amrex::Real DDalphaLL12 = -GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12;
        amrex::Real DDalphaLL20 = -GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20;
        amrex::Real DDalphaLL21 = -GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21;
        amrex::Real DDalphaLL22 = -GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22;
        amrex::Real gamLL00 = gamtildeLL00/chi;
        amrex::Real gamLL01 = gamtildeLL01/chi;
        amrex::Real gamLL02 = gamtildeLL02/chi;
        amrex::Real gamLL10 = gamtildeLL10/chi;
        amrex::Real gamLL11 = gamtildeLL11/chi;
        amrex::Real gamLL12 = gamtildeLL12/chi;
        amrex::Real gamLL20 = gamtildeLL20/chi;
        amrex::Real gamLL21 = gamtildeLL21/chi;
        amrex::Real gamLL22 = gamtildeLL22/chi;
        amrex::Real gamUU00 = chi*gamtildeUU00;
        amrex::Real gamUU01 = chi*gamtildeUU01;
        amrex::Real gamUU02 = chi*gamtildeUU02;
        amrex::Real gamUU10 = chi*gamtildeUU10;
        amrex::Real gamUU11 = chi*gamtildeUU11;
        amrex::Real gamUU12 = chi*gamtildeUU12;
        amrex::Real gamUU20 = chi*gamtildeUU20;
        amrex::Real gamUU21 = chi*gamtildeUU21;
        amrex::Real gamUU22 = chi*gamtildeUU22;
        amrex::Real AtildeUU00 = AtildeLL00*std::pow(gamtildeUU00, 2) + AtildeLL01*gamtildeUU00*gamtildeUU01 + AtildeLL02*gamtildeUU00*gamtildeUU02 + AtildeLL10*gamtildeUU00*gamtildeUU01 + AtildeLL11*std::pow(gamtildeUU01, 2) + AtildeLL12*gamtildeUU01*gamtildeUU02 + AtildeLL20*gamtildeUU00*gamtildeUU02 + AtildeLL21*gamtildeUU01*gamtildeUU02 + AtildeLL22*std::pow(gamtildeUU02, 2);
        amrex::Real AtildeUU01 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU00*gamtildeUU11 + AtildeLL02*gamtildeUU00*gamtildeUU12 + AtildeLL10*gamtildeUU01*gamtildeUU10 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU01*gamtildeUU12 + AtildeLL20*gamtildeUU02*gamtildeUU10 + AtildeLL21*gamtildeUU02*gamtildeUU11 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU02 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU00*gamtildeUU21 + AtildeLL02*gamtildeUU00*gamtildeUU22 + AtildeLL10*gamtildeUU01*gamtildeUU20 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU01*gamtildeUU22 + AtildeLL20*gamtildeUU02*gamtildeUU20 + AtildeLL21*gamtildeUU02*gamtildeUU21 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU10 = AtildeLL00*gamtildeUU00*gamtildeUU10 + AtildeLL01*gamtildeUU01*gamtildeUU10 + AtildeLL02*gamtildeUU02*gamtildeUU10 + AtildeLL10*gamtildeUU00*gamtildeUU11 + AtildeLL11*gamtildeUU01*gamtildeUU11 + AtildeLL12*gamtildeUU02*gamtildeUU11 + AtildeLL20*gamtildeUU00*gamtildeUU12 + AtildeLL21*gamtildeUU01*gamtildeUU12 + AtildeLL22*gamtildeUU02*gamtildeUU12;
        amrex::Real AtildeUU11 = AtildeLL00*std::pow(gamtildeUU10, 2) + AtildeLL01*gamtildeUU10*gamtildeUU11 + AtildeLL02*gamtildeUU10*gamtildeUU12 + AtildeLL10*gamtildeUU10*gamtildeUU11 + AtildeLL11*std::pow(gamtildeUU11, 2) + AtildeLL12*gamtildeUU11*gamtildeUU12 + AtildeLL20*gamtildeUU10*gamtildeUU12 + AtildeLL21*gamtildeUU11*gamtildeUU12 + AtildeLL22*std::pow(gamtildeUU12, 2);
        amrex::Real AtildeUU12 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU10*gamtildeUU21 + AtildeLL02*gamtildeUU10*gamtildeUU22 + AtildeLL10*gamtildeUU11*gamtildeUU20 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU11*gamtildeUU22 + AtildeLL20*gamtildeUU12*gamtildeUU20 + AtildeLL21*gamtildeUU12*gamtildeUU21 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU20 = AtildeLL00*gamtildeUU00*gamtildeUU20 + AtildeLL01*gamtildeUU01*gamtildeUU20 + AtildeLL02*gamtildeUU02*gamtildeUU20 + AtildeLL10*gamtildeUU00*gamtildeUU21 + AtildeLL11*gamtildeUU01*gamtildeUU21 + AtildeLL12*gamtildeUU02*gamtildeUU21 + AtildeLL20*gamtildeUU00*gamtildeUU22 + AtildeLL21*gamtildeUU01*gamtildeUU22 + AtildeLL22*gamtildeUU02*gamtildeUU22;
        amrex::Real AtildeUU21 = AtildeLL00*gamtildeUU10*gamtildeUU20 + AtildeLL01*gamtildeUU11*gamtildeUU20 + AtildeLL02*gamtildeUU12*gamtildeUU20 + AtildeLL10*gamtildeUU10*gamtildeUU21 + AtildeLL11*gamtildeUU11*gamtildeUU21 + AtildeLL12*gamtildeUU12*gamtildeUU21 + AtildeLL20*gamtildeUU10*gamtildeUU22 + AtildeLL21*gamtildeUU11*gamtildeUU22 + AtildeLL22*gamtildeUU12*gamtildeUU22;
        amrex::Real AtildeUU22 = AtildeLL00*std::pow(gamtildeUU20, 2) + AtildeLL01*gamtildeUU20*gamtildeUU21 + AtildeLL02*gamtildeUU20*gamtildeUU22 + AtildeLL10*gamtildeUU20*gamtildeUU21 + AtildeLL11*std::pow(gamtildeUU21, 2) + AtildeLL12*gamtildeUU21*gamtildeUU22 + AtildeLL20*gamtildeUU20*gamtildeUU22 + AtildeLL21*gamtildeUU21*gamtildeUU22 + AtildeLL22*std::pow(gamtildeUU22, 2);
        amrex::Real AtildeUL00 = AtildeLL00*gamtildeUU00 + AtildeLL10*gamtildeUU01 + AtildeLL20*gamtildeUU02;
        amrex::Real AtildeUL01 = AtildeLL01*gamtildeUU00 + AtildeLL11*gamtildeUU01 + AtildeLL21*gamtildeUU02;
        amrex::Real AtildeUL02 = AtildeLL02*gamtildeUU00 + AtildeLL12*gamtildeUU01 + AtildeLL22*gamtildeUU02;
        amrex::Real AtildeUL10 = AtildeLL00*gamtildeUU10 + AtildeLL10*gamtildeUU11 + AtildeLL20*gamtildeUU12;
        amrex::Real AtildeUL11 = AtildeLL01*gamtildeUU10 + AtildeLL11*gamtildeUU11 + AtildeLL21*gamtildeUU12;
        amrex::Real AtildeUL12 = AtildeLL02*gamtildeUU10 + AtildeLL12*gamtildeUU11 + AtildeLL22*gamtildeUU12;
        amrex::Real AtildeUL20 = AtildeLL00*gamtildeUU20 + AtildeLL10*gamtildeUU21 + AtildeLL20*gamtildeUU22;
        amrex::Real AtildeUL21 = AtildeLL01*gamtildeUU20 + AtildeLL11*gamtildeUU21 + AtildeLL21*gamtildeUU22;
        amrex::Real AtildeUL22 = AtildeLL02*gamtildeUU20 + AtildeLL12*gamtildeUU21 + AtildeLL22*gamtildeUU22;
        amrex::Real DDalphaTFLL00 = -0.33333333333333331*DDalphaLL00*gamLL00*gamUU00 + DDalphaLL00 - 0.33333333333333331*DDalphaLL01*gamLL00*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL00*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL00*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL00*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL00*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL00*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL00*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL00*gamUU22;
        amrex::Real DDalphaTFLL01 = -0.33333333333333331*DDalphaLL00*gamLL01*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL01*gamUU01 + DDalphaLL01 - 0.33333333333333331*DDalphaLL02*gamLL01*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL01*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL01*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL01*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL01*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL01*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL01*gamUU22;
        amrex::Real DDalphaTFLL02 = -0.33333333333333331*DDalphaLL00*gamLL02*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL02*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL02*gamUU02 + DDalphaLL02 - 0.33333333333333331*DDalphaLL10*gamLL02*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL02*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL02*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL02*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL02*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL02*gamUU22;
        amrex::Real DDalphaTFLL10 = -0.33333333333333331*DDalphaLL00*gamLL10*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL10*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL10*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL10*gamUU10 + DDalphaLL10 - 0.33333333333333331*DDalphaLL11*gamLL10*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL10*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL10*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL10*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL10*gamUU22;
        amrex::Real DDalphaTFLL11 = -0.33333333333333331*DDalphaLL00*gamLL11*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL11*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL11*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL11*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL11*gamUU11 + DDalphaLL11 - 0.33333333333333331*DDalphaLL12*gamLL11*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL11*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL11*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL11*gamUU22;
        amrex::Real DDalphaTFLL12 = -0.33333333333333331*DDalphaLL00*gamLL12*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL12*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL12*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL12*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL12*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL12*gamUU12 + DDalphaLL12 - 0.33333333333333331*DDalphaLL20*gamLL12*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL12*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL12*gamUU22;
        amrex::Real DDalphaTFLL20 = -0.33333333333333331*DDalphaLL00*gamLL20*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL20*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL20*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL20*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL20*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL20*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL20*gamUU20 + DDalphaLL20 - 0.33333333333333331*DDalphaLL21*gamLL20*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL20*gamUU22;
        amrex::Real DDalphaTFLL21 = -0.33333333333333331*DDalphaLL00*gamLL21*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL21*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL21*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL21*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL21*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL21*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL21*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL21*gamUU21 + DDalphaLL21 - 0.33333333333333331*DDalphaLL22*gamLL21*gamUU22;
        amrex::Real DDalphaTFLL22 = -0.33333333333333331*DDalphaLL00*gamLL22*gamUU00 - 0.33333333333333331*DDalphaLL01*gamLL22*gamUU01 - 0.33333333333333331*DDalphaLL02*gamLL22*gamUU02 - 0.33333333333333331*DDalphaLL10*gamLL22*gamUU10 - 0.33333333333333331*DDalphaLL11*gamLL22*gamUU11 - 0.33333333333333331*DDalphaLL12*gamLL22*gamUU12 - 0.33333333333333331*DDalphaLL20*gamLL22*gamUU20 - 0.33333333333333331*DDalphaLL21*gamLL22*gamUU21 - 0.33333333333333331*DDalphaLL22*gamLL22*gamUU22 + DDalphaLL22;
        amrex::Real GamtildeDU0 = GamtildeULL000*gamtildeUU00 + GamtildeULL001*gamtildeUU01 + GamtildeULL002*gamtildeUU02 + GamtildeULL010*gamtildeUU10 + GamtildeULL011*gamtildeUU11 + GamtildeULL012*gamtildeUU12 + GamtildeULL020*gamtildeUU20 + GamtildeULL021*gamtildeUU21 + GamtildeULL022*gamtildeUU22;
        amrex::Real GamtildeDU1 = GamtildeULL100*gamtildeUU00 + GamtildeULL101*gamtildeUU01 + GamtildeULL102*gamtildeUU02 + GamtildeULL110*gamtildeUU10 + GamtildeULL111*gamtildeUU11 + GamtildeULL112*gamtildeUU12 + GamtildeULL120*gamtildeUU20 + GamtildeULL121*gamtildeUU21 + GamtildeULL122*gamtildeUU22;
        amrex::Real GamtildeDU2 = GamtildeULL200*gamtildeUU00 + GamtildeULL201*gamtildeUU01 + GamtildeULL202*gamtildeUU02 + GamtildeULL210*gamtildeUU10 + GamtildeULL211*gamtildeUU11 + GamtildeULL212*gamtildeUU12 + GamtildeULL220*gamtildeUU20 + GamtildeULL221*gamtildeUU21 + GamtildeULL222*gamtildeUU22;
        amrex::Real RtildeLL00 = 1.0*GamtildeDU0*GamtildeLLL000 + 1.0*GamtildeDU1*GamtildeLLL001 + 1.0*GamtildeDU2*GamtildeLLL002 + 3*GamtildeLLL000*GamtildeULL000*gamtildeUU00 + GamtildeLLL000*GamtildeULL001*gamtildeUU01 + GamtildeLLL000*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL000*GamtildeULL010*gamtildeUU10 + 2*GamtildeLLL000*GamtildeULL020*gamtildeUU20 + 2*GamtildeLLL001*GamtildeULL000*gamtildeUU01 + 2*GamtildeLLL001*GamtildeULL010*gamtildeUU11 + 2*GamtildeLLL001*GamtildeULL020*gamtildeUU21 + 2*GamtildeLLL002*GamtildeULL000*gamtildeUU02 + 2*GamtildeLLL002*GamtildeULL010*gamtildeUU12 + 2*GamtildeLLL002*GamtildeULL020*gamtildeUU22 + GamtildeLLL010*GamtildeULL000*gamtildeUU10 + GamtildeLLL010*GamtildeULL001*gamtildeUU11 + GamtildeLLL010*GamtildeULL002*gamtildeUU12 + 2*GamtildeLLL010*GamtildeULL100*gamtildeUU00 + 2*GamtildeLLL010*GamtildeULL110*gamtildeUU10 + 2*GamtildeLLL010*GamtildeULL120*gamtildeUU20 + 2*GamtildeLLL011*GamtildeULL100*gamtildeUU01 + 2*GamtildeLLL011*GamtildeULL110*gamtildeUU11 + 2*GamtildeLLL011*GamtildeULL120*gamtildeUU21 + 2*GamtildeLLL012*GamtildeULL100*gamtildeUU02 + 2*GamtildeLLL012*GamtildeULL110*gamtildeUU12 + 2*GamtildeLLL012*GamtildeULL120*gamtildeUU22 + GamtildeLLL020*GamtildeULL000*gamtildeUU20 + GamtildeLLL020*GamtildeULL001*gamtildeUU21 + GamtildeLLL020*GamtildeULL002*gamtildeUU22 + 2*GamtildeLLL020*GamtildeULL200*gamtildeUU00 + 2*GamtildeLLL020*GamtildeULL210*gamtildeUU10 + 2*GamtildeLLL020*GamtildeULL220*gamtildeUU20 + 2*GamtildeLLL021*GamtildeULL200*gamtildeUU01 + 2*GamtildeLLL021*GamtildeULL210*gamtildeUU11 + 2*GamtildeLLL021*GamtildeULL220*gamtildeUU21 + 2*GamtildeLLL022*GamtildeULL200*gamtildeUU02 + 2*GamtildeLLL022*GamtildeULL210*gamtildeUU12 + 2*GamtildeLLL022*GamtildeULL220*gamtildeUU22 + GamtildeLLL100*GamtildeULL100*gamtildeUU00 + GamtildeLLL100*GamtildeULL101*gamtildeUU01 + GamtildeLLL100*GamtildeULL102*gamtildeUU02 + GamtildeLLL110*GamtildeULL100*gamtildeUU10 + GamtildeLLL110*GamtildeULL101*gamtildeUU11 + GamtildeLLL110*GamtildeULL102*gamtildeUU12 + GamtildeLLL120*GamtildeULL100*gamtildeUU20 + GamtildeLLL120*GamtildeULL101*gamtildeUU21 + GamtildeLLL120*GamtildeULL102*gamtildeUU22 + GamtildeLLL200*GamtildeULL200*gamtildeUU00 + GamtildeLLL200*GamtildeULL201*gamtildeUU01 + GamtildeLLL200*GamtildeULL202*gamtildeUU02 + GamtildeLLL210*GamtildeULL200*gamtildeUU10 + GamtildeLLL210*GamtildeULL201*gamtildeUU11 + GamtildeLLL210*GamtildeULL202*gamtildeUU12 + GamtildeLLL220*GamtildeULL200*gamtildeUU20 + GamtildeLLL220*GamtildeULL201*gamtildeUU21 + GamtildeLLL220*GamtildeULL202*gamtildeUU22 + 1.0*dGamtildeU00*gamtildeLL00 + 1.0*dGamtildeU10*gamtildeLL10 + 1.0*dGamtildeU20*gamtildeLL20 - 0.5*ddgamtildeLL0000*gamtildeUU00 - 0.5*ddgamtildeLL0001*gamtildeUU01 - 0.5*ddgamtildeLL0002*gamtildeUU02 - 0.5*ddgamtildeLL0010*gamtildeUU10 - 0.5*ddgamtildeLL0011*gamtildeUU11 - 0.5*ddgamtildeLL0012*gamtildeUU12 - 0.5*ddgamtildeLL0020*gamtildeUU20 - 0.5*ddgamtildeLL0021*gamtildeUU21 - 0.5*ddgamtildeLL0022*gamtildeUU22;
        amrex::Real RtildeLL01 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL001*GamtildeULL000*gamtildeUU00 + GamtildeLLL001*GamtildeULL001*gamtildeUU01 + GamtildeLLL001*GamtildeULL002*gamtildeUU02 + GamtildeLLL011*GamtildeULL000*gamtildeUU10 + GamtildeLLL011*GamtildeULL001*gamtildeUU11 + GamtildeLLL011*GamtildeULL002*gamtildeUU12 + GamtildeLLL021*GamtildeULL000*gamtildeUU20 + GamtildeLLL021*GamtildeULL001*gamtildeUU21 + GamtildeLLL021*GamtildeULL002*gamtildeUU22 + GamtildeLLL101*GamtildeULL100*gamtildeUU00 + GamtildeLLL101*GamtildeULL101*gamtildeUU01 + GamtildeLLL101*GamtildeULL102*gamtildeUU02 + GamtildeLLL111*GamtildeULL100*gamtildeUU10 + GamtildeLLL111*GamtildeULL101*gamtildeUU11 + GamtildeLLL111*GamtildeULL102*gamtildeUU12 + GamtildeLLL121*GamtildeULL100*gamtildeUU20 + GamtildeLLL121*GamtildeULL101*gamtildeUU21 + GamtildeLLL121*GamtildeULL102*gamtildeUU22 + GamtildeLLL201*GamtildeULL200*gamtildeUU00 + GamtildeLLL201*GamtildeULL201*gamtildeUU01 + GamtildeLLL201*GamtildeULL202*gamtildeUU02 + GamtildeLLL211*GamtildeULL200*gamtildeUU10 + GamtildeLLL211*GamtildeULL201*gamtildeUU11 + GamtildeLLL211*GamtildeULL202*gamtildeUU12 + GamtildeLLL221*GamtildeULL200*gamtildeUU20 + GamtildeLLL221*GamtildeULL201*gamtildeUU21 + GamtildeLLL221*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL0100*gamtildeUU00 - 0.5*ddgamtildeLL0101*gamtildeUU01 - 0.5*ddgamtildeLL0102*gamtildeUU02 - 0.5*ddgamtildeLL0110*gamtildeUU10 - 0.5*ddgamtildeLL0111*gamtildeUU11 - 0.5*ddgamtildeLL0112*gamtildeUU12 - 0.5*ddgamtildeLL0120*gamtildeUU20 - 0.5*ddgamtildeLL0121*gamtildeUU21 - 0.5*ddgamtildeLL0122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL02 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL002*GamtildeULL000*gamtildeUU00 + GamtildeLLL002*GamtildeULL001*gamtildeUU01 + GamtildeLLL002*GamtildeULL002*gamtildeUU02 + GamtildeLLL012*GamtildeULL000*gamtildeUU10 + GamtildeLLL012*GamtildeULL001*gamtildeUU11 + GamtildeLLL012*GamtildeULL002*gamtildeUU12 + GamtildeLLL022*GamtildeULL000*gamtildeUU20 + GamtildeLLL022*GamtildeULL001*gamtildeUU21 + GamtildeLLL022*GamtildeULL002*gamtildeUU22 + GamtildeLLL102*GamtildeULL100*gamtildeUU00 + GamtildeLLL102*GamtildeULL101*gamtildeUU01 + GamtildeLLL102*GamtildeULL102*gamtildeUU02 + GamtildeLLL112*GamtildeULL100*gamtildeUU10 + GamtildeLLL112*GamtildeULL101*gamtildeUU11 + GamtildeLLL112*GamtildeULL102*gamtildeUU12 + GamtildeLLL122*GamtildeULL100*gamtildeUU20 + GamtildeLLL122*GamtildeULL101*gamtildeUU21 + GamtildeLLL122*GamtildeULL102*gamtildeUU22 + GamtildeLLL202*GamtildeULL200*gamtildeUU00 + GamtildeLLL202*GamtildeULL201*gamtildeUU01 + GamtildeLLL202*GamtildeULL202*gamtildeUU02 + GamtildeLLL212*GamtildeULL200*gamtildeUU10 + GamtildeLLL212*GamtildeULL201*gamtildeUU11 + GamtildeLLL212*GamtildeULL202*gamtildeUU12 + GamtildeLLL222*GamtildeULL200*gamtildeUU20 + GamtildeLLL222*GamtildeULL201*gamtildeUU21 + GamtildeLLL222*GamtildeULL202*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL0200*gamtildeUU00 - 0.5*ddgamtildeLL0201*gamtildeUU01 - 0.5*ddgamtildeLL0202*gamtildeUU02 - 0.5*ddgamtildeLL0210*gamtildeUU10 - 0.5*ddgamtildeLL0211*gamtildeUU11 - 0.5*ddgamtildeLL0212*gamtildeUU12 - 0.5*ddgamtildeLL0220*gamtildeUU20 - 0.5*ddgamtildeLL0221*gamtildeUU21 - 0.5*ddgamtildeLL0222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL10 = 0.5*GamtildeDU0*GamtildeLLL010 + 0.5*GamtildeDU0*GamtildeLLL100 + 0.5*GamtildeDU1*GamtildeLLL011 + 0.5*GamtildeDU1*GamtildeLLL101 + 0.5*GamtildeDU2*GamtildeLLL012 + 0.5*GamtildeDU2*GamtildeLLL102 + GamtildeLLL000*GamtildeULL010*gamtildeUU00 + GamtildeLLL000*GamtildeULL011*gamtildeUU01 + GamtildeLLL000*GamtildeULL012*gamtildeUU02 + GamtildeLLL010*GamtildeULL010*gamtildeUU10 + GamtildeLLL010*GamtildeULL011*gamtildeUU11 + GamtildeLLL010*GamtildeULL012*gamtildeUU12 + GamtildeLLL020*GamtildeULL010*gamtildeUU20 + GamtildeLLL020*GamtildeULL011*gamtildeUU21 + GamtildeLLL020*GamtildeULL012*gamtildeUU22 + GamtildeLLL100*GamtildeULL110*gamtildeUU00 + GamtildeLLL100*GamtildeULL111*gamtildeUU01 + GamtildeLLL100*GamtildeULL112*gamtildeUU02 + GamtildeLLL110*GamtildeULL110*gamtildeUU10 + GamtildeLLL110*GamtildeULL111*gamtildeUU11 + GamtildeLLL110*GamtildeULL112*gamtildeUU12 + GamtildeLLL120*GamtildeULL110*gamtildeUU20 + GamtildeLLL120*GamtildeULL111*gamtildeUU21 + GamtildeLLL120*GamtildeULL112*gamtildeUU22 + GamtildeLLL200*GamtildeULL210*gamtildeUU00 + GamtildeLLL200*GamtildeULL211*gamtildeUU01 + GamtildeLLL200*GamtildeULL212*gamtildeUU02 + GamtildeLLL210*GamtildeULL210*gamtildeUU10 + GamtildeLLL210*GamtildeULL211*gamtildeUU11 + GamtildeLLL210*GamtildeULL212*gamtildeUU12 + GamtildeLLL220*GamtildeULL210*gamtildeUU20 + GamtildeLLL220*GamtildeULL211*gamtildeUU21 + GamtildeLLL220*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL01 + 0.5*dGamtildeU01*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL11 + 0.5*dGamtildeU11*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL21 + 0.5*dGamtildeU21*gamtildeLL20 - 0.5*ddgamtildeLL1000*gamtildeUU00 - 0.5*ddgamtildeLL1001*gamtildeUU01 - 0.5*ddgamtildeLL1002*gamtildeUU02 - 0.5*ddgamtildeLL1010*gamtildeUU10 - 0.5*ddgamtildeLL1011*gamtildeUU11 - 0.5*ddgamtildeLL1012*gamtildeUU12 - 0.5*ddgamtildeLL1020*gamtildeUU20 - 0.5*ddgamtildeLL1021*gamtildeUU21 - 0.5*ddgamtildeLL1022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL001 + GamtildeLLL100*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL101 + GamtildeLLL110*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL201 + GamtildeLLL120*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL001 + GamtildeLLL101*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL101 + GamtildeLLL111*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL201 + GamtildeLLL121*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL001 + GamtildeLLL102*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL101 + GamtildeLLL112*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL201 + GamtildeLLL122*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL011 + GamtildeLLL100*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL111 + GamtildeLLL110*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL211 + GamtildeLLL120*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL011 + GamtildeLLL101*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL111 + GamtildeLLL111*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL211 + GamtildeLLL121*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL011 + GamtildeLLL102*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL111 + GamtildeLLL112*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL211 + GamtildeLLL122*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL021 + GamtildeLLL100*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL121 + GamtildeLLL110*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL221 + GamtildeLLL120*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL021 + GamtildeLLL101*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL121 + GamtildeLLL111*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL221 + GamtildeLLL121*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL021 + GamtildeLLL102*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL121 + GamtildeLLL112*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL221 + GamtildeLLL122*GamtildeULL220);
        amrex::Real RtildeLL11 = 1.0*GamtildeDU0*GamtildeLLL110 + 1.0*GamtildeDU1*GamtildeLLL111 + 1.0*GamtildeDU2*GamtildeLLL112 + GamtildeLLL001*GamtildeULL010*gamtildeUU00 + GamtildeLLL001*GamtildeULL011*gamtildeUU01 + GamtildeLLL001*GamtildeULL012*gamtildeUU02 + GamtildeLLL011*GamtildeULL010*gamtildeUU10 + GamtildeLLL011*GamtildeULL011*gamtildeUU11 + GamtildeLLL011*GamtildeULL012*gamtildeUU12 + GamtildeLLL021*GamtildeULL010*gamtildeUU20 + GamtildeLLL021*GamtildeULL011*gamtildeUU21 + GamtildeLLL021*GamtildeULL012*gamtildeUU22 + 2*GamtildeLLL100*GamtildeULL001*gamtildeUU00 + 2*GamtildeLLL100*GamtildeULL011*gamtildeUU10 + 2*GamtildeLLL100*GamtildeULL021*gamtildeUU20 + 2*GamtildeLLL101*GamtildeULL001*gamtildeUU01 + 2*GamtildeLLL101*GamtildeULL011*gamtildeUU11 + 2*GamtildeLLL101*GamtildeULL021*gamtildeUU21 + GamtildeLLL101*GamtildeULL110*gamtildeUU00 + GamtildeLLL101*GamtildeULL111*gamtildeUU01 + GamtildeLLL101*GamtildeULL112*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL001*gamtildeUU02 + 2*GamtildeLLL102*GamtildeULL011*gamtildeUU12 + 2*GamtildeLLL102*GamtildeULL021*gamtildeUU22 + 2*GamtildeLLL110*GamtildeULL101*gamtildeUU00 + 2*GamtildeLLL110*GamtildeULL111*gamtildeUU10 + 2*GamtildeLLL110*GamtildeULL121*gamtildeUU20 + 2*GamtildeLLL111*GamtildeULL101*gamtildeUU01 + GamtildeLLL111*GamtildeULL110*gamtildeUU10 + 3*GamtildeLLL111*GamtildeULL111*gamtildeUU11 + GamtildeLLL111*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL111*GamtildeULL121*gamtildeUU21 + 2*GamtildeLLL112*GamtildeULL101*gamtildeUU02 + 2*GamtildeLLL112*GamtildeULL111*gamtildeUU12 + 2*GamtildeLLL112*GamtildeULL121*gamtildeUU22 + 2*GamtildeLLL120*GamtildeULL201*gamtildeUU00 + 2*GamtildeLLL120*GamtildeULL211*gamtildeUU10 + 2*GamtildeLLL120*GamtildeULL221*gamtildeUU20 + GamtildeLLL121*GamtildeULL110*gamtildeUU20 + GamtildeLLL121*GamtildeULL111*gamtildeUU21 + GamtildeLLL121*GamtildeULL112*gamtildeUU22 + 2*GamtildeLLL121*GamtildeULL201*gamtildeUU01 + 2*GamtildeLLL121*GamtildeULL211*gamtildeUU11 + 2*GamtildeLLL121*GamtildeULL221*gamtildeUU21 + 2*GamtildeLLL122*GamtildeULL201*gamtildeUU02 + 2*GamtildeLLL122*GamtildeULL211*gamtildeUU12 + 2*GamtildeLLL122*GamtildeULL221*gamtildeUU22 + GamtildeLLL201*GamtildeULL210*gamtildeUU00 + GamtildeLLL201*GamtildeULL211*gamtildeUU01 + GamtildeLLL201*GamtildeULL212*gamtildeUU02 + GamtildeLLL211*GamtildeULL210*gamtildeUU10 + GamtildeLLL211*GamtildeULL211*gamtildeUU11 + GamtildeLLL211*GamtildeULL212*gamtildeUU12 + GamtildeLLL221*GamtildeULL210*gamtildeUU20 + GamtildeLLL221*GamtildeULL211*gamtildeUU21 + GamtildeLLL221*GamtildeULL212*gamtildeUU22 + 1.0*dGamtildeU01*gamtildeLL01 + 1.0*dGamtildeU11*gamtildeLL11 + 1.0*dGamtildeU21*gamtildeLL21 - 0.5*ddgamtildeLL1100*gamtildeUU00 - 0.5*ddgamtildeLL1101*gamtildeUU01 - 0.5*ddgamtildeLL1102*gamtildeUU02 - 0.5*ddgamtildeLL1110*gamtildeUU10 - 0.5*ddgamtildeLL1111*gamtildeUU11 - 0.5*ddgamtildeLL1112*gamtildeUU12 - 0.5*ddgamtildeLL1120*gamtildeUU20 - 0.5*ddgamtildeLL1121*gamtildeUU21 - 0.5*ddgamtildeLL1122*gamtildeUU22;
        amrex::Real RtildeLL12 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL002*GamtildeULL010*gamtildeUU00 + GamtildeLLL002*GamtildeULL011*gamtildeUU01 + GamtildeLLL002*GamtildeULL012*gamtildeUU02 + GamtildeLLL012*GamtildeULL010*gamtildeUU10 + GamtildeLLL012*GamtildeULL011*gamtildeUU11 + GamtildeLLL012*GamtildeULL012*gamtildeUU12 + GamtildeLLL022*GamtildeULL010*gamtildeUU20 + GamtildeLLL022*GamtildeULL011*gamtildeUU21 + GamtildeLLL022*GamtildeULL012*gamtildeUU22 + GamtildeLLL102*GamtildeULL110*gamtildeUU00 + GamtildeLLL102*GamtildeULL111*gamtildeUU01 + GamtildeLLL102*GamtildeULL112*gamtildeUU02 + GamtildeLLL112*GamtildeULL110*gamtildeUU10 + GamtildeLLL112*GamtildeULL111*gamtildeUU11 + GamtildeLLL112*GamtildeULL112*gamtildeUU12 + GamtildeLLL122*GamtildeULL110*gamtildeUU20 + GamtildeLLL122*GamtildeULL111*gamtildeUU21 + GamtildeLLL122*GamtildeULL112*gamtildeUU22 + GamtildeLLL202*GamtildeULL210*gamtildeUU00 + GamtildeLLL202*GamtildeULL211*gamtildeUU01 + GamtildeLLL202*GamtildeULL212*gamtildeUU02 + GamtildeLLL212*GamtildeULL210*gamtildeUU10 + GamtildeLLL212*GamtildeULL211*gamtildeUU11 + GamtildeLLL212*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL210*gamtildeUU20 + GamtildeLLL222*GamtildeULL211*gamtildeUU21 + GamtildeLLL222*GamtildeULL212*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL1200*gamtildeUU00 - 0.5*ddgamtildeLL1201*gamtildeUU01 - 0.5*ddgamtildeLL1202*gamtildeUU02 - 0.5*ddgamtildeLL1210*gamtildeUU10 - 0.5*ddgamtildeLL1211*gamtildeUU11 - 0.5*ddgamtildeLL1212*gamtildeUU12 - 0.5*ddgamtildeLL1220*gamtildeUU20 - 0.5*ddgamtildeLL1221*gamtildeUU21 - 0.5*ddgamtildeLL1222*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL20 = 0.5*GamtildeDU0*GamtildeLLL020 + 0.5*GamtildeDU0*GamtildeLLL200 + 0.5*GamtildeDU1*GamtildeLLL021 + 0.5*GamtildeDU1*GamtildeLLL201 + 0.5*GamtildeDU2*GamtildeLLL022 + 0.5*GamtildeDU2*GamtildeLLL202 + GamtildeLLL000*GamtildeULL020*gamtildeUU00 + GamtildeLLL000*GamtildeULL021*gamtildeUU01 + GamtildeLLL000*GamtildeULL022*gamtildeUU02 + GamtildeLLL010*GamtildeULL020*gamtildeUU10 + GamtildeLLL010*GamtildeULL021*gamtildeUU11 + GamtildeLLL010*GamtildeULL022*gamtildeUU12 + GamtildeLLL020*GamtildeULL020*gamtildeUU20 + GamtildeLLL020*GamtildeULL021*gamtildeUU21 + GamtildeLLL020*GamtildeULL022*gamtildeUU22 + GamtildeLLL100*GamtildeULL120*gamtildeUU00 + GamtildeLLL100*GamtildeULL121*gamtildeUU01 + GamtildeLLL100*GamtildeULL122*gamtildeUU02 + GamtildeLLL110*GamtildeULL120*gamtildeUU10 + GamtildeLLL110*GamtildeULL121*gamtildeUU11 + GamtildeLLL110*GamtildeULL122*gamtildeUU12 + GamtildeLLL120*GamtildeULL120*gamtildeUU20 + GamtildeLLL120*GamtildeULL121*gamtildeUU21 + GamtildeLLL120*GamtildeULL122*gamtildeUU22 + GamtildeLLL200*GamtildeULL220*gamtildeUU00 + GamtildeLLL200*GamtildeULL221*gamtildeUU01 + GamtildeLLL200*GamtildeULL222*gamtildeUU02 + GamtildeLLL210*GamtildeULL220*gamtildeUU10 + GamtildeLLL210*GamtildeULL221*gamtildeUU11 + GamtildeLLL210*GamtildeULL222*gamtildeUU12 + GamtildeLLL220*GamtildeULL220*gamtildeUU20 + GamtildeLLL220*GamtildeULL221*gamtildeUU21 + GamtildeLLL220*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU00*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL00 + 0.5*dGamtildeU10*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL10 + 0.5*dGamtildeU20*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL20 - 0.5*ddgamtildeLL2000*gamtildeUU00 - 0.5*ddgamtildeLL2001*gamtildeUU01 - 0.5*ddgamtildeLL2002*gamtildeUU02 - 0.5*ddgamtildeLL2010*gamtildeUU10 - 0.5*ddgamtildeLL2011*gamtildeUU11 - 0.5*ddgamtildeLL2012*gamtildeUU12 - 0.5*ddgamtildeLL2020*gamtildeUU20 - 0.5*ddgamtildeLL2021*gamtildeUU21 - 0.5*ddgamtildeLL2022*gamtildeUU22 + gamtildeUU00*(GamtildeLLL000*GamtildeULL002 + GamtildeLLL200*GamtildeULL000) + gamtildeUU00*(GamtildeLLL010*GamtildeULL102 + GamtildeLLL210*GamtildeULL100) + gamtildeUU00*(GamtildeLLL020*GamtildeULL202 + GamtildeLLL220*GamtildeULL200) + gamtildeUU01*(GamtildeLLL001*GamtildeULL002 + GamtildeLLL201*GamtildeULL000) + gamtildeUU01*(GamtildeLLL011*GamtildeULL102 + GamtildeLLL211*GamtildeULL100) + gamtildeUU01*(GamtildeLLL021*GamtildeULL202 + GamtildeLLL221*GamtildeULL200) + gamtildeUU02*(GamtildeLLL002*GamtildeULL002 + GamtildeLLL202*GamtildeULL000) + gamtildeUU02*(GamtildeLLL012*GamtildeULL102 + GamtildeLLL212*GamtildeULL100) + gamtildeUU02*(GamtildeLLL022*GamtildeULL202 + GamtildeLLL222*GamtildeULL200) + gamtildeUU10*(GamtildeLLL000*GamtildeULL012 + GamtildeLLL200*GamtildeULL010) + gamtildeUU10*(GamtildeLLL010*GamtildeULL112 + GamtildeLLL210*GamtildeULL110) + gamtildeUU10*(GamtildeLLL020*GamtildeULL212 + GamtildeLLL220*GamtildeULL210) + gamtildeUU11*(GamtildeLLL001*GamtildeULL012 + GamtildeLLL201*GamtildeULL010) + gamtildeUU11*(GamtildeLLL011*GamtildeULL112 + GamtildeLLL211*GamtildeULL110) + gamtildeUU11*(GamtildeLLL021*GamtildeULL212 + GamtildeLLL221*GamtildeULL210) + gamtildeUU12*(GamtildeLLL002*GamtildeULL012 + GamtildeLLL202*GamtildeULL010) + gamtildeUU12*(GamtildeLLL012*GamtildeULL112 + GamtildeLLL212*GamtildeULL110) + gamtildeUU12*(GamtildeLLL022*GamtildeULL212 + GamtildeLLL222*GamtildeULL210) + gamtildeUU20*(GamtildeLLL000*GamtildeULL022 + GamtildeLLL200*GamtildeULL020) + gamtildeUU20*(GamtildeLLL010*GamtildeULL122 + GamtildeLLL210*GamtildeULL120) + gamtildeUU20*(GamtildeLLL020*GamtildeULL222 + GamtildeLLL220*GamtildeULL220) + gamtildeUU21*(GamtildeLLL001*GamtildeULL022 + GamtildeLLL201*GamtildeULL020) + gamtildeUU21*(GamtildeLLL011*GamtildeULL122 + GamtildeLLL211*GamtildeULL120) + gamtildeUU21*(GamtildeLLL021*GamtildeULL222 + GamtildeLLL221*GamtildeULL220) + gamtildeUU22*(GamtildeLLL002*GamtildeULL022 + GamtildeLLL202*GamtildeULL020) + gamtildeUU22*(GamtildeLLL012*GamtildeULL122 + GamtildeLLL212*GamtildeULL120) + gamtildeUU22*(GamtildeLLL022*GamtildeULL222 + GamtildeLLL222*GamtildeULL220);
        amrex::Real RtildeLL21 = 0.5*GamtildeDU0*GamtildeLLL120 + 0.5*GamtildeDU0*GamtildeLLL210 + 0.5*GamtildeDU1*GamtildeLLL121 + 0.5*GamtildeDU1*GamtildeLLL211 + 0.5*GamtildeDU2*GamtildeLLL122 + 0.5*GamtildeDU2*GamtildeLLL212 + GamtildeLLL001*GamtildeULL020*gamtildeUU00 + GamtildeLLL001*GamtildeULL021*gamtildeUU01 + GamtildeLLL001*GamtildeULL022*gamtildeUU02 + GamtildeLLL011*GamtildeULL020*gamtildeUU10 + GamtildeLLL011*GamtildeULL021*gamtildeUU11 + GamtildeLLL011*GamtildeULL022*gamtildeUU12 + GamtildeLLL021*GamtildeULL020*gamtildeUU20 + GamtildeLLL021*GamtildeULL021*gamtildeUU21 + GamtildeLLL021*GamtildeULL022*gamtildeUU22 + GamtildeLLL101*GamtildeULL120*gamtildeUU00 + GamtildeLLL101*GamtildeULL121*gamtildeUU01 + GamtildeLLL101*GamtildeULL122*gamtildeUU02 + GamtildeLLL111*GamtildeULL120*gamtildeUU10 + GamtildeLLL111*GamtildeULL121*gamtildeUU11 + GamtildeLLL111*GamtildeULL122*gamtildeUU12 + GamtildeLLL121*GamtildeULL120*gamtildeUU20 + GamtildeLLL121*GamtildeULL121*gamtildeUU21 + GamtildeLLL121*GamtildeULL122*gamtildeUU22 + GamtildeLLL201*GamtildeULL220*gamtildeUU00 + GamtildeLLL201*GamtildeULL221*gamtildeUU01 + GamtildeLLL201*GamtildeULL222*gamtildeUU02 + GamtildeLLL211*GamtildeULL220*gamtildeUU10 + GamtildeLLL211*GamtildeULL221*gamtildeUU11 + GamtildeLLL211*GamtildeULL222*gamtildeUU12 + GamtildeLLL221*GamtildeULL220*gamtildeUU20 + GamtildeLLL221*GamtildeULL221*gamtildeUU21 + GamtildeLLL221*GamtildeULL222*gamtildeUU22 + 0.5*dGamtildeU01*gamtildeLL02 + 0.5*dGamtildeU02*gamtildeLL01 + 0.5*dGamtildeU11*gamtildeLL12 + 0.5*dGamtildeU12*gamtildeLL11 + 0.5*dGamtildeU21*gamtildeLL22 + 0.5*dGamtildeU22*gamtildeLL21 - 0.5*ddgamtildeLL2100*gamtildeUU00 - 0.5*ddgamtildeLL2101*gamtildeUU01 - 0.5*ddgamtildeLL2102*gamtildeUU02 - 0.5*ddgamtildeLL2110*gamtildeUU10 - 0.5*ddgamtildeLL2111*gamtildeUU11 - 0.5*ddgamtildeLL2112*gamtildeUU12 - 0.5*ddgamtildeLL2120*gamtildeUU20 - 0.5*ddgamtildeLL2121*gamtildeUU21 - 0.5*ddgamtildeLL2122*gamtildeUU22 + gamtildeUU00*(GamtildeLLL100*GamtildeULL002 + GamtildeLLL200*GamtildeULL001) + gamtildeUU00*(GamtildeLLL110*GamtildeULL102 + GamtildeLLL210*GamtildeULL101) + gamtildeUU00*(GamtildeLLL120*GamtildeULL202 + GamtildeLLL220*GamtildeULL201) + gamtildeUU01*(GamtildeLLL101*GamtildeULL002 + GamtildeLLL201*GamtildeULL001) + gamtildeUU01*(GamtildeLLL111*GamtildeULL102 + GamtildeLLL211*GamtildeULL101) + gamtildeUU01*(GamtildeLLL121*GamtildeULL202 + GamtildeLLL221*GamtildeULL201) + gamtildeUU02*(GamtildeLLL102*GamtildeULL002 + GamtildeLLL202*GamtildeULL001) + gamtildeUU02*(GamtildeLLL112*GamtildeULL102 + GamtildeLLL212*GamtildeULL101) + gamtildeUU02*(GamtildeLLL122*GamtildeULL202 + GamtildeLLL222*GamtildeULL201) + gamtildeUU10*(GamtildeLLL100*GamtildeULL012 + GamtildeLLL200*GamtildeULL011) + gamtildeUU10*(GamtildeLLL110*GamtildeULL112 + GamtildeLLL210*GamtildeULL111) + gamtildeUU10*(GamtildeLLL120*GamtildeULL212 + GamtildeLLL220*GamtildeULL211) + gamtildeUU11*(GamtildeLLL101*GamtildeULL012 + GamtildeLLL201*GamtildeULL011) + gamtildeUU11*(GamtildeLLL111*GamtildeULL112 + GamtildeLLL211*GamtildeULL111) + gamtildeUU11*(GamtildeLLL121*GamtildeULL212 + GamtildeLLL221*GamtildeULL211) + gamtildeUU12*(GamtildeLLL102*GamtildeULL012 + GamtildeLLL202*GamtildeULL011) + gamtildeUU12*(GamtildeLLL112*GamtildeULL112 + GamtildeLLL212*GamtildeULL111) + gamtildeUU12*(GamtildeLLL122*GamtildeULL212 + GamtildeLLL222*GamtildeULL211) + gamtildeUU20*(GamtildeLLL100*GamtildeULL022 + GamtildeLLL200*GamtildeULL021) + gamtildeUU20*(GamtildeLLL110*GamtildeULL122 + GamtildeLLL210*GamtildeULL121) + gamtildeUU20*(GamtildeLLL120*GamtildeULL222 + GamtildeLLL220*GamtildeULL221) + gamtildeUU21*(GamtildeLLL101*GamtildeULL022 + GamtildeLLL201*GamtildeULL021) + gamtildeUU21*(GamtildeLLL111*GamtildeULL122 + GamtildeLLL211*GamtildeULL121) + gamtildeUU21*(GamtildeLLL121*GamtildeULL222 + GamtildeLLL221*GamtildeULL221) + gamtildeUU22*(GamtildeLLL102*GamtildeULL022 + GamtildeLLL202*GamtildeULL021) + gamtildeUU22*(GamtildeLLL112*GamtildeULL122 + GamtildeLLL212*GamtildeULL121) + gamtildeUU22*(GamtildeLLL122*GamtildeULL222 + GamtildeLLL222*GamtildeULL221);
        amrex::Real RtildeLL22 = 1.0*GamtildeDU0*GamtildeLLL220 + 1.0*GamtildeDU1*GamtildeLLL221 + 1.0*GamtildeDU2*GamtildeLLL222 + GamtildeLLL002*GamtildeULL020*gamtildeUU00 + GamtildeLLL002*GamtildeULL021*gamtildeUU01 + GamtildeLLL002*GamtildeULL022*gamtildeUU02 + GamtildeLLL012*GamtildeULL020*gamtildeUU10 + GamtildeLLL012*GamtildeULL021*gamtildeUU11 + GamtildeLLL012*GamtildeULL022*gamtildeUU12 + GamtildeLLL022*GamtildeULL020*gamtildeUU20 + GamtildeLLL022*GamtildeULL021*gamtildeUU21 + GamtildeLLL022*GamtildeULL022*gamtildeUU22 + GamtildeLLL102*GamtildeULL120*gamtildeUU00 + GamtildeLLL102*GamtildeULL121*gamtildeUU01 + GamtildeLLL102*GamtildeULL122*gamtildeUU02 + GamtildeLLL112*GamtildeULL120*gamtildeUU10 + GamtildeLLL112*GamtildeULL121*gamtildeUU11 + GamtildeLLL112*GamtildeULL122*gamtildeUU12 + GamtildeLLL122*GamtildeULL120*gamtildeUU20 + GamtildeLLL122*GamtildeULL121*gamtildeUU21 + GamtildeLLL122*GamtildeULL122*gamtildeUU22 + 2*GamtildeLLL200*GamtildeULL002*gamtildeUU00 + 2*GamtildeLLL200*GamtildeULL012*gamtildeUU10 + 2*GamtildeLLL200*GamtildeULL022*gamtildeUU20 + 2*GamtildeLLL201*GamtildeULL002*gamtildeUU01 + 2*GamtildeLLL201*GamtildeULL012*gamtildeUU11 + 2*GamtildeLLL201*GamtildeULL022*gamtildeUU21 + 2*GamtildeLLL202*GamtildeULL002*gamtildeUU02 + 2*GamtildeLLL202*GamtildeULL012*gamtildeUU12 + 2*GamtildeLLL202*GamtildeULL022*gamtildeUU22 + GamtildeLLL202*GamtildeULL220*gamtildeUU00 + GamtildeLLL202*GamtildeULL221*gamtildeUU01 + GamtildeLLL202*GamtildeULL222*gamtildeUU02 + 2*GamtildeLLL210*GamtildeULL102*gamtildeUU00 + 2*GamtildeLLL210*GamtildeULL112*gamtildeUU10 + 2*GamtildeLLL210*GamtildeULL122*gamtildeUU20 + 2*GamtildeLLL211*GamtildeULL102*gamtildeUU01 + 2*GamtildeLLL211*GamtildeULL112*gamtildeUU11 + 2*GamtildeLLL211*GamtildeULL122*gamtildeUU21 + 2*GamtildeLLL212*GamtildeULL102*gamtildeUU02 + 2*GamtildeLLL212*GamtildeULL112*gamtildeUU12 + 2*GamtildeLLL212*GamtildeULL122*gamtildeUU22 + GamtildeLLL212*GamtildeULL220*gamtildeUU10 + GamtildeLLL212*GamtildeULL221*gamtildeUU11 + GamtildeLLL212*GamtildeULL222*gamtildeUU12 + 2*GamtildeLLL220*GamtildeULL202*gamtildeUU00 + 2*GamtildeLLL220*GamtildeULL212*gamtildeUU10 + 2*GamtildeLLL220*GamtildeULL222*gamtildeUU20 + 2*GamtildeLLL221*GamtildeULL202*gamtildeUU01 + 2*GamtildeLLL221*GamtildeULL212*gamtildeUU11 + 2*GamtildeLLL221*GamtildeULL222*gamtildeUU21 + 2*GamtildeLLL222*GamtildeULL202*gamtildeUU02 + 2*GamtildeLLL222*GamtildeULL212*gamtildeUU12 + GamtildeLLL222*GamtildeULL220*gamtildeUU20 + GamtildeLLL222*GamtildeULL221*gamtildeUU21 + 3*GamtildeLLL222*GamtildeULL222*gamtildeUU22 + 1.0*dGamtildeU02*gamtildeLL02 + 1.0*dGamtildeU12*gamtildeLL12 + 1.0*dGamtildeU22*gamtildeLL22 - 0.5*ddgamtildeLL2200*gamtildeUU00 - 0.5*ddgamtildeLL2201*gamtildeUU01 - 0.5*ddgamtildeLL2202*gamtildeUU02 - 0.5*ddgamtildeLL2210*gamtildeUU10 - 0.5*ddgamtildeLL2211*gamtildeUU11 - 0.5*ddgamtildeLL2212*gamtildeUU12 - 0.5*ddgamtildeLL2220*gamtildeUU20 - 0.5*ddgamtildeLL2221*gamtildeUU21 - 0.5*ddgamtildeLL2222*gamtildeUU22;
        amrex::Real DtildeDtildechiLL00 = -GamtildeULL000*dchi0 - GamtildeULL100*dchi1 - GamtildeULL200*dchi2 + ddchi00;
        amrex::Real DtildeDtildechiLL01 = -GamtildeULL001*dchi0 - GamtildeULL101*dchi1 - GamtildeULL201*dchi2 + ddchi01;
        amrex::Real DtildeDtildechiLL02 = -GamtildeULL002*dchi0 - GamtildeULL102*dchi1 - GamtildeULL202*dchi2 + ddchi02;
        amrex::Real DtildeDtildechiLL10 = -GamtildeULL010*dchi0 - GamtildeULL110*dchi1 - GamtildeULL210*dchi2 + ddchi10;
        amrex::Real DtildeDtildechiLL11 = -GamtildeULL011*dchi0 - GamtildeULL111*dchi1 - GamtildeULL211*dchi2 + ddchi11;
        amrex::Real DtildeDtildechiLL12 = -GamtildeULL012*dchi0 - GamtildeULL112*dchi1 - GamtildeULL212*dchi2 + ddchi12;
        amrex::Real DtildeDtildechiLL20 = -GamtildeULL020*dchi0 - GamtildeULL120*dchi1 - GamtildeULL220*dchi2 + ddchi20;
        amrex::Real DtildeDtildechiLL21 = -GamtildeULL021*dchi0 - GamtildeULL121*dchi1 - GamtildeULL221*dchi2 + ddchi21;
        amrex::Real DtildeDtildechiLL22 = -GamtildeULL022*dchi0 - GamtildeULL122*dchi1 - GamtildeULL222*dchi2 + ddchi22;
        amrex::Real TrDtildeDtildechi = DtildeDtildechiLL00*gamtildeUU00 + DtildeDtildechiLL01*gamtildeUU01 + DtildeDtildechiLL02*gamtildeUU02 + DtildeDtildechiLL10*gamtildeUU10 + DtildeDtildechiLL11*gamtildeUU11 + DtildeDtildechiLL12*gamtildeUU12 + DtildeDtildechiLL20*gamtildeUU20 + DtildeDtildechiLL21*gamtildeUU21 + DtildeDtildechiLL22*gamtildeUU22;

        amrex::Real RchiLL00 = 0.5*(DtildeDtildechiLL00 + TrDtildeDtildechi*gamtildeLL00)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL00*gamtildeUU00/std::pow(chi, 2) - 0.25*std::pow(dchi0, 2)/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL00*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL00*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL00*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL00*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL00*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL00*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL00*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL00*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL01 = 0.5*(DtildeDtildechiLL01 + TrDtildeDtildechi*gamtildeLL01)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL01*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL01*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL01*gamtildeUU10/std::pow(chi, 2) - 0.25*dchi0*dchi1/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL01*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL01*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL01*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL01*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL01*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL01*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL02 = 0.5*(DtildeDtildechiLL02 + TrDtildeDtildechi*gamtildeLL02)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL02*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL02*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL02*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL02*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL02*gamtildeUU20/std::pow(chi, 2) - 0.25*dchi0*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL02*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL02*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL02*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL02*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL10 = 0.5*(DtildeDtildechiLL10 + TrDtildeDtildechi*gamtildeLL10)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL10*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL10*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL10*gamtildeUU10/std::pow(chi, 2) - 0.25*dchi0*dchi1/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL10*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL10*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL10*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL10*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL10*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL10*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL11 = 0.5*(DtildeDtildechiLL11 + TrDtildeDtildechi*gamtildeLL11)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL11*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL11*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL11*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL11*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL11*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL11*gamtildeUU11/std::pow(chi, 2) - 0.25*std::pow(dchi1, 2)/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL11*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL11*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL11*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL12 = 0.5*(DtildeDtildechiLL12 + TrDtildeDtildechi*gamtildeLL12)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL12*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL12*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL12*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL12*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL12*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL12*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL12*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL12*gamtildeUU21/std::pow(chi, 2) - 0.25*dchi1*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL12*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL20 = 0.5*(DtildeDtildechiLL20 + TrDtildeDtildechi*gamtildeLL20)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL20*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL20*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL20*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL20*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL20*gamtildeUU20/std::pow(chi, 2) - 0.25*dchi0*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL20*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL20*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL20*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL20*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL21 = 0.5*(DtildeDtildechiLL21 + TrDtildeDtildechi*gamtildeLL21)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL21*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL21*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL21*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL21*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL21*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL21*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL21*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL21*gamtildeUU21/std::pow(chi, 2) - 0.25*dchi1*dchi2/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL21*gamtildeUU22/std::pow(chi, 2);
        amrex::Real RchiLL22 = 0.5*(DtildeDtildechiLL22 + TrDtildeDtildechi*gamtildeLL22)/chi - 0.75*std::pow(dchi0, 2)*gamtildeLL22*gamtildeUU00/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL22*gamtildeUU01/std::pow(chi, 2) - 0.75*dchi0*dchi1*gamtildeLL22*gamtildeUU10/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL22*gamtildeUU02/std::pow(chi, 2) - 0.75*dchi0*dchi2*gamtildeLL22*gamtildeUU20/std::pow(chi, 2) - 0.75*std::pow(dchi1, 2)*gamtildeLL22*gamtildeUU11/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL22*gamtildeUU12/std::pow(chi, 2) - 0.75*dchi1*dchi2*gamtildeLL22*gamtildeUU21/std::pow(chi, 2) - 0.75*std::pow(dchi2, 2)*gamtildeLL22*gamtildeUU22/std::pow(chi, 2) - 0.25*std::pow(dchi2, 2)/std::pow(chi, 2);
        amrex::Real RLL00 = RchiLL00 + RtildeLL00;
        amrex::Real RLL01 = RchiLL01 + RtildeLL01;
        amrex::Real RLL02 = RchiLL02 + RtildeLL02;
        amrex::Real RLL10 = RchiLL10 + RtildeLL10;
        amrex::Real RLL11 = RchiLL11 + RtildeLL11;
        amrex::Real RLL12 = RchiLL12 + RtildeLL12;
        amrex::Real RLL20 = RchiLL20 + RtildeLL20;
        amrex::Real RLL21 = RchiLL21 + RtildeLL21;
        amrex::Real RLL22 = RchiLL22 + RtildeLL22;
        amrex::Real Rsclr = RLL00*gamUU00 + RLL01*gamUU01 + RLL02*gamUU02 + RLL10*gamUU10 + RLL11*gamUU11 + RLL12*gamUU12 + RLL20*gamUU20 + RLL21*gamUU21 + RLL22*gamUU22;

        amrex::Real RTFLL00 = RLL00 - 0.33333333333333331*Rsclr*gamLL00;
        amrex::Real RTFLL01 = RLL01 - 0.33333333333333331*Rsclr*gamLL01;
        amrex::Real RTFLL02 = RLL02 - 0.33333333333333331*Rsclr*gamLL02;
        amrex::Real RTFLL10 = RLL10 - 0.33333333333333331*Rsclr*gamLL10;
        amrex::Real RTFLL11 = RLL11 - 0.33333333333333331*Rsclr*gamLL11;
        amrex::Real RTFLL12 = RLL12 - 0.33333333333333331*Rsclr*gamLL12;
        amrex::Real RTFLL20 = RLL20 - 0.33333333333333331*Rsclr*gamLL20;
        amrex::Real RTFLL21 = RLL21 - 0.33333333333333331*Rsclr*gamLL21;
        amrex::Real RTFLL22 = RLL22 - 0.33333333333333331*Rsclr*gamLL22;
        amrex::Real divTildebeta = GamtildeULL000*betaU0 + GamtildeULL001*betaU1 + GamtildeULL002*betaU2 + GamtildeULL110*betaU0 + GamtildeULL111*betaU1 + GamtildeULL112*betaU2 + GamtildeULL220*betaU0 + GamtildeULL221*betaU1 + GamtildeULL222*betaU2 + dbetaU00 + dbetaU11 + dbetaU22;

        rhs_fab(i, j, k, Idx::chi) = KOchi + betaDchi + 0.66666666666666663*chi*(alpha*(Khat + 2*theta) - divTildebeta);

        rhs_fab(i, j, k, Idx::gamtildeLL00) = -2*AtildeLL00*alpha + KOgamtildeLL00 + betaDgamtildeLL00 + 1.3333333333333335*dbetaU00*gamtildeLL00 + 2*dbetaU10*gamtildeLL10 - 0.66666666666666663*dbetaU11*gamtildeLL00 + 2*dbetaU20*gamtildeLL20 - 0.66666666666666663*dbetaU22*gamtildeLL00;

        rhs_fab(i, j, k, Idx::gamtildeLL01) = -2*AtildeLL01*alpha + KOgamtildeLL01 + betaDgamtildeLL01 + 0.33333333333333337*dbetaU00*gamtildeLL01 + dbetaU01*gamtildeLL00 + dbetaU10*gamtildeLL11 - 0.66666666666666663*dbetaU11*gamtildeLL01 + dbetaU11*gamtildeLL10 + dbetaU20*gamtildeLL21 + dbetaU21*gamtildeLL20 - 0.66666666666666663*dbetaU22*gamtildeLL01;

        rhs_fab(i, j, k, Idx::gamtildeLL02) = -2*AtildeLL02*alpha + KOgamtildeLL02 + betaDgamtildeLL02 + 0.33333333333333337*dbetaU00*gamtildeLL02 + dbetaU02*gamtildeLL00 + dbetaU10*gamtildeLL12 - 0.66666666666666663*dbetaU11*gamtildeLL02 + dbetaU12*gamtildeLL10 + dbetaU20*gamtildeLL22 - 0.66666666666666663*dbetaU22*gamtildeLL02 + dbetaU22*gamtildeLL20;

        rhs_fab(i, j, k, Idx::gamtildeLL11) = -2*AtildeLL11*alpha + KOgamtildeLL11 + betaDgamtildeLL11 - 0.66666666666666663*dbetaU00*gamtildeLL11 + 2*dbetaU01*gamtildeLL01 + 1.3333333333333335*dbetaU11*gamtildeLL11 + 2*dbetaU21*gamtildeLL21 - 0.66666666666666663*dbetaU22*gamtildeLL11;

        rhs_fab(i, j, k, Idx::gamtildeLL12) = -2*AtildeLL12*alpha + KOgamtildeLL12 + betaDgamtildeLL12 - 0.66666666666666663*dbetaU00*gamtildeLL12 + dbetaU01*gamtildeLL02 + dbetaU02*gamtildeLL01 + 0.33333333333333337*dbetaU11*gamtildeLL12 + dbetaU12*gamtildeLL11 + dbetaU21*gamtildeLL22 - 0.66666666666666663*dbetaU22*gamtildeLL12 + dbetaU22*gamtildeLL21;

        rhs_fab(i, j, k, Idx::gamtildeLL22) = -2*AtildeLL22*alpha + KOgamtildeLL22 + betaDgamtildeLL22 - 0.66666666666666663*dbetaU00*gamtildeLL22 + 2*dbetaU02*gamtildeLL02 - 0.66666666666666663*dbetaU11*gamtildeLL22 + 2*dbetaU12*gamtildeLL12 + 1.3333333333333335*dbetaU22*gamtildeLL22;

        amrex::Real kappa1 = 0.02;

        amrex::Real kappa2 = 0;

        rhs_fab(i, j, k, Idx::Khat) = AtildeLL00*AtildeUU00*alpha + AtildeLL01*AtildeUU01*alpha + AtildeLL02*AtildeUU02*alpha + AtildeLL10*AtildeUU10*alpha + AtildeLL11*AtildeUU11*alpha + AtildeLL12*AtildeUU12*alpha + AtildeLL20*AtildeUU20*alpha + AtildeLL21*AtildeUU21*alpha + AtildeLL22*AtildeUU22*alpha - DDalphaLL00*gamUU00 - DDalphaLL01*gamUU10 - DDalphaLL02*gamUU20 - DDalphaLL10*gamUU01 - DDalphaLL11*gamUU11 - DDalphaLL12*gamUU21 - DDalphaLL20*gamUU02 - DDalphaLL21*gamUU12 - DDalphaLL22*gamUU22 + KOKhat + 0.33333333333333331*alpha*(kappa1*theta*(1 - kappa2) + std::pow(Khat + 2*theta, 2)) + betaDKhat;

        rhs_fab(i, j, k, Idx::AtildeLL00) = -2*AtildeLL00*AtildeUL00*alpha + AtildeLL00*alpha*(Khat + 2*theta) + 1.3333333333333335*AtildeLL00*dbetaU00 - 0.66666666666666663*AtildeLL00*dbetaU11 - 0.66666666666666663*AtildeLL00*dbetaU22 - 2*AtildeLL01*AtildeUL10*alpha - 2*AtildeLL02*AtildeUL20*alpha + 2*AtildeLL10*dbetaU10 + 2*AtildeLL20*dbetaU20 + KOAtildeLL00 + betaDAtildeLL00 + chi*(-DDalphaTFLL00 + RTFLL00*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL01) = -2*AtildeLL00*AtildeUL01*alpha + AtildeLL00*dbetaU01 - 2*AtildeLL01*AtildeUL11*alpha + AtildeLL01*alpha*(Khat + 2*theta) + 0.33333333333333337*AtildeLL01*dbetaU00 - 0.66666666666666663*AtildeLL01*dbetaU11 - 0.66666666666666663*AtildeLL01*dbetaU22 - 2*AtildeLL02*AtildeUL21*alpha + AtildeLL10*dbetaU11 + AtildeLL11*dbetaU10 + AtildeLL20*dbetaU21 + AtildeLL21*dbetaU20 + KOAtildeLL01 + betaDAtildeLL01 + chi*(-DDalphaTFLL01 + RTFLL01*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL02) = -2*AtildeLL00*AtildeUL02*alpha + AtildeLL00*dbetaU02 - 2*AtildeLL01*AtildeUL12*alpha - 2*AtildeLL02*AtildeUL22*alpha + AtildeLL02*alpha*(Khat + 2*theta) + 0.33333333333333337*AtildeLL02*dbetaU00 - 0.66666666666666663*AtildeLL02*dbetaU11 - 0.66666666666666663*AtildeLL02*dbetaU22 + AtildeLL10*dbetaU12 + AtildeLL12*dbetaU10 + AtildeLL20*dbetaU22 + AtildeLL22*dbetaU20 + KOAtildeLL02 + betaDAtildeLL02 + chi*(-DDalphaTFLL02 + RTFLL02*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL11) = 2*AtildeLL01*dbetaU01 - 2*AtildeLL10*AtildeUL01*alpha - 2*AtildeLL11*AtildeUL11*alpha + AtildeLL11*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL11*dbetaU00 + 1.3333333333333335*AtildeLL11*dbetaU11 - 0.66666666666666663*AtildeLL11*dbetaU22 - 2*AtildeLL12*AtildeUL21*alpha + 2*AtildeLL21*dbetaU21 + KOAtildeLL11 + betaDAtildeLL11 + chi*(-DDalphaTFLL11 + RTFLL11*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL12) = AtildeLL01*dbetaU02 + AtildeLL02*dbetaU01 - 2*AtildeLL10*AtildeUL02*alpha - 2*AtildeLL11*AtildeUL12*alpha + AtildeLL11*dbetaU12 - 2*AtildeLL12*AtildeUL22*alpha + AtildeLL12*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL12*dbetaU00 + 0.33333333333333337*AtildeLL12*dbetaU11 - 0.66666666666666663*AtildeLL12*dbetaU22 + AtildeLL21*dbetaU22 + AtildeLL22*dbetaU21 + KOAtildeLL12 + betaDAtildeLL12 + chi*(-DDalphaTFLL12 + RTFLL12*alpha);

        rhs_fab(i, j, k, Idx::AtildeLL22) = 2*AtildeLL02*dbetaU02 + 2*AtildeLL12*dbetaU12 - 2*AtildeLL20*AtildeUL02*alpha - 2*AtildeLL21*AtildeUL12*alpha - 2*AtildeLL22*AtildeUL22*alpha + AtildeLL22*alpha*(Khat + 2*theta) - 0.66666666666666663*AtildeLL22*dbetaU00 - 0.66666666666666663*AtildeLL22*dbetaU11 + 1.3333333333333335*AtildeLL22*dbetaU22 + KOAtildeLL22 + betaDAtildeLL22 + chi*(-DDalphaTFLL22 + RTFLL22*alpha);

        rhs_fab(i, j, k, Idx::theta) = -0.5*AtildeLL00*AtildeUU00*alpha - 0.5*AtildeLL01*AtildeUU01*alpha - 0.5*AtildeLL02*AtildeUU02*alpha - 0.5*AtildeLL10*AtildeUU10*alpha - 0.5*AtildeLL11*AtildeUU11*alpha - 0.5*AtildeLL12*AtildeUU12*alpha - 0.5*AtildeLL20*AtildeUU20*alpha - 0.5*AtildeLL21*AtildeUU21*alpha - 0.5*AtildeLL22*AtildeUU22*alpha + KOtheta + 0.5*alpha*(Rsclr - 2*kappa1*theta*(kappa2 + 2) + 0.66666666666666663*std::pow(Khat + 2*theta, 2)) + betaDtheta;

        rhs_fab(i, j, k, Idx::GamtildeU0) = 2*AtildeUU00*GamtildeULL000*alpha - 2*AtildeUU00*dalpha0 + 2*AtildeUU01*GamtildeULL001*alpha - 2*AtildeUU01*dalpha1 + 2*AtildeUU02*GamtildeULL002*alpha - 2*AtildeUU02*dalpha2 + 2*AtildeUU10*GamtildeULL010*alpha + 2*AtildeUU11*GamtildeULL011*alpha + 2*AtildeUU12*GamtildeULL012*alpha + 2*AtildeUU20*GamtildeULL020*alpha + 2*AtildeUU21*GamtildeULL021*alpha + 2*AtildeUU22*GamtildeULL022*alpha - 0.33333333333333337*GamtildeDU0*dbetaU00 + 0.66666666666666663*GamtildeDU0*dbetaU11 + 0.66666666666666663*GamtildeDU0*dbetaU22 - GamtildeDU1*dbetaU01 - GamtildeDU2*dbetaU02 + KOGamtildeU0 - 2*alpha*kappa1*(-GamtildeDU0 + GamtildeU0) + 2*alpha*(-1.5*AtildeUU00*dchi0/chi - 0.33333333333333331*gamtildeUU00*(2*dKhat0 + dtheta0)) + 2*alpha*(-1.5*AtildeUU01*dchi1/chi - 0.33333333333333331*gamtildeUU01*(2*dKhat1 + dtheta1)) + 2*alpha*(-1.5*AtildeUU02*dchi2/chi - 0.33333333333333331*gamtildeUU02*(2*dKhat2 + dtheta2)) + betaDGamtildeU0 + 1.3333333333333333*ddbetaU000*gamtildeUU00 + ddbetaU001*gamtildeUU01 + ddbetaU002*gamtildeUU02 + 0.33333333333333331*ddbetaU010*gamtildeUU01 + ddbetaU010*gamtildeUU10 + ddbetaU011*gamtildeUU11 + ddbetaU012*gamtildeUU12 + 0.33333333333333331*ddbetaU020*gamtildeUU02 + ddbetaU020*gamtildeUU20 + ddbetaU021*gamtildeUU21 + ddbetaU022*gamtildeUU22 + 0.33333333333333331*ddbetaU101*gamtildeUU00 + 0.33333333333333331*ddbetaU111*gamtildeUU01 + 0.33333333333333331*ddbetaU121*gamtildeUU02 + 0.33333333333333331*ddbetaU202*gamtildeUU00 + 0.33333333333333331*ddbetaU212*gamtildeUU01 + 0.33333333333333331*ddbetaU222*gamtildeUU02;

        rhs_fab(i, j, k, Idx::GamtildeU1) = 2*AtildeUU00*GamtildeULL100*alpha + 2*AtildeUU01*GamtildeULL101*alpha + 2*AtildeUU02*GamtildeULL102*alpha + 2*AtildeUU10*GamtildeULL110*alpha - 2*AtildeUU10*dalpha0 + 2*AtildeUU11*GamtildeULL111*alpha - 2*AtildeUU11*dalpha1 + 2*AtildeUU12*GamtildeULL112*alpha - 2*AtildeUU12*dalpha2 + 2*AtildeUU20*GamtildeULL120*alpha + 2*AtildeUU21*GamtildeULL121*alpha + 2*AtildeUU22*GamtildeULL122*alpha - GamtildeDU0*dbetaU10 + 0.66666666666666663*GamtildeDU1*dbetaU00 - 0.33333333333333337*GamtildeDU1*dbetaU11 + 0.66666666666666663*GamtildeDU1*dbetaU22 - GamtildeDU2*dbetaU12 + KOGamtildeU1 - 2*alpha*kappa1*(-GamtildeDU1 + GamtildeU1) + 2*alpha*(-1.5*AtildeUU10*dchi0/chi - 0.33333333333333331*gamtildeUU10*(2*dKhat0 + dtheta0)) + 2*alpha*(-1.5*AtildeUU11*dchi1/chi - 0.33333333333333331*gamtildeUU11*(2*dKhat1 + dtheta1)) + 2*alpha*(-1.5*AtildeUU12*dchi2/chi - 0.33333333333333331*gamtildeUU12*(2*dKhat2 + dtheta2)) + betaDGamtildeU1 + 0.33333333333333331*ddbetaU000*gamtildeUU10 + 0.33333333333333331*ddbetaU010*gamtildeUU11 + 0.33333333333333331*ddbetaU020*gamtildeUU12 + ddbetaU100*gamtildeUU00 + ddbetaU101*gamtildeUU01 + 0.33333333333333331*ddbetaU101*gamtildeUU10 + ddbetaU102*gamtildeUU02 + ddbetaU110*gamtildeUU10 + 1.3333333333333333*ddbetaU111*gamtildeUU11 + ddbetaU112*gamtildeUU12 + ddbetaU120*gamtildeUU20 + 0.33333333333333331*ddbetaU121*gamtildeUU12 + ddbetaU121*gamtildeUU21 + ddbetaU122*gamtildeUU22 + 0.33333333333333331*ddbetaU202*gamtildeUU10 + 0.33333333333333331*ddbetaU212*gamtildeUU11 + 0.33333333333333331*ddbetaU222*gamtildeUU12;

        rhs_fab(i, j, k, Idx::GamtildeU2) = 2*AtildeUU00*GamtildeULL200*alpha + 2*AtildeUU01*GamtildeULL201*alpha + 2*AtildeUU02*GamtildeULL202*alpha + 2*AtildeUU10*GamtildeULL210*alpha + 2*AtildeUU11*GamtildeULL211*alpha + 2*AtildeUU12*GamtildeULL212*alpha + 2*AtildeUU20*GamtildeULL220*alpha - 2*AtildeUU20*dalpha0 + 2*AtildeUU21*GamtildeULL221*alpha - 2*AtildeUU21*dalpha1 + 2*AtildeUU22*GamtildeULL222*alpha - 2*AtildeUU22*dalpha2 - GamtildeDU0*dbetaU20 - GamtildeDU1*dbetaU21 + 0.66666666666666663*GamtildeDU2*dbetaU00 + 0.66666666666666663*GamtildeDU2*dbetaU11 - 0.33333333333333337*GamtildeDU2*dbetaU22 + KOGamtildeU2 - 2*alpha*kappa1*(-GamtildeDU2 + GamtildeU2) + 2*alpha*(-1.5*AtildeUU20*dchi0/chi - 0.33333333333333331*gamtildeUU20*(2*dKhat0 + dtheta0)) + 2*alpha*(-1.5*AtildeUU21*dchi1/chi - 0.33333333333333331*gamtildeUU21*(2*dKhat1 + dtheta1)) + 2*alpha*(-1.5*AtildeUU22*dchi2/chi - 0.33333333333333331*gamtildeUU22*(2*dKhat2 + dtheta2)) + betaDGamtildeU2 + 0.33333333333333331*ddbetaU000*gamtildeUU20 + 0.33333333333333331*ddbetaU010*gamtildeUU21 + 0.33333333333333331*ddbetaU020*gamtildeUU22 + 0.33333333333333331*ddbetaU101*gamtildeUU20 + 0.33333333333333331*ddbetaU111*gamtildeUU21 + 0.33333333333333331*ddbetaU121*gamtildeUU22 + ddbetaU200*gamtildeUU00 + ddbetaU201*gamtildeUU01 + ddbetaU202*gamtildeUU02 + 0.33333333333333331*ddbetaU202*gamtildeUU20 + ddbetaU210*gamtildeUU10 + ddbetaU211*gamtildeUU11 + ddbetaU212*gamtildeUU12 + 0.33333333333333331*ddbetaU212*gamtildeUU21 + ddbetaU220*gamtildeUU20 + ddbetaU221*gamtildeUU21 + 1.3333333333333333*ddbetaU222*gamtildeUU22;

        amrex::Real mul = 2/alpha;

        amrex::Real mus = std::pow(alpha, -2);

        rhs_fab(i, j, k, Idx::alpha) = KOalpha - Khat*std::pow(alpha, 2)*mul + betaDalpha;

        amrex::Real eta = 2.0;

        rhs_fab(i, j, k, Idx::betaU0) = GamtildeU0*std::pow(alpha, 2)*mus + KObetaU0 + betaDbetaU0 - betaU0*eta;

        rhs_fab(i, j, k, Idx::betaU1) = GamtildeU1*std::pow(alpha, 2)*mus + KObetaU1 + betaDbetaU1 - betaU1*eta;

        rhs_fab(i, j, k, Idx::betaU2) = GamtildeU2*std::pow(alpha, 2)*mus + KObetaU2 + betaDbetaU2 - betaU2*eta;

}
#endif