#ifndef ET_INTEGRATION_RHS_K_H
#define ET_INTEGRATION_RHS_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_rhs(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& rhs_fab, 
        amrex::Array4<amrex::Real const> const& state_fab,
        const amrex::Real time,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        
        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtilde_LL_00 = state_fab(i, j, k, Idx::gamtilde_LL_00);
        amrex::Real gamtilde_LL_01 = state_fab(i, j, k, Idx::gamtilde_LL_01);
        amrex::Real gamtilde_LL_02 = state_fab(i, j, k, Idx::gamtilde_LL_02);
        amrex::Real gamtilde_LL_11 = state_fab(i, j, k, Idx::gamtilde_LL_11);
        amrex::Real gamtilde_LL_12 = state_fab(i, j, k, Idx::gamtilde_LL_12);
        amrex::Real gamtilde_LL_22 = state_fab(i, j, k, Idx::gamtilde_LL_22);

        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);

        amrex::Real Atilde_LL_00 = state_fab(i, j, k, Idx::Atilde_LL_00);
        amrex::Real Atilde_LL_01 = state_fab(i, j, k, Idx::Atilde_LL_01);
        amrex::Real Atilde_LL_02 = state_fab(i, j, k, Idx::Atilde_LL_02);
        amrex::Real Atilde_LL_11 = state_fab(i, j, k, Idx::Atilde_LL_11);
        amrex::Real Atilde_LL_12 = state_fab(i, j, k, Idx::Atilde_LL_12);
        amrex::Real Atilde_LL_22 = state_fab(i, j, k, Idx::Atilde_LL_22);

        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real Gamtilde_U_0 = state_fab(i, j, k, Idx::Gamtilde_U_0);
        amrex::Real Gamtilde_U_1 = state_fab(i, j, k, Idx::Gamtilde_U_1);
        amrex::Real Gamtilde_U_2 = state_fab(i, j, k, Idx::Gamtilde_U_2);

        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real beta_U_0 = state_fab(i, j, k, Idx::beta_U_0);
        amrex::Real beta_U_1 = state_fab(i, j, k, Idx::beta_U_1);
        amrex::Real beta_U_2 = state_fab(i, j, k, Idx::beta_U_2);

        amrex::Real dDchi_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dDchi_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dDchi_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];

        amrex::Real dupDchi_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/2.0*state_fab(i + 2, j, k, Idx::chi) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::chi) - 1.0/4.0*state_fab(i - 1, j, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real dupDchi_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/2.0*state_fab(i, j + 2, k, Idx::chi) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::chi) - 1.0/4.0*state_fab(i, j - 1, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real dupDchi_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/2.0*state_fab(i, j, k + 2, Idx::chi) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::chi) - 1.0/4.0*state_fab(i, j, k - 1, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[2];

        amrex::Real ddnDchi_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::chi) - 3.0/2.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 3, j, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real ddnDchi_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::chi) - 3.0/2.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 3, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real ddnDchi_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::chi) - 3.0/2.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 3, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[2];

        amrex::Real dDDchi_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[0], 2);
        amrex::Real dDDchi_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real dDDchi_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real dDDchi_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[1], 2);
        amrex::Real dDDchi_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real dDDchi_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[2], 2);

        amrex::Real dKODchi = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::chi) - 3.0/32.0*state_fab(i, j, k + 2, Idx::chi) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::chi) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::chi) - 3.0/32.0*state_fab(i, j, k - 2, Idx::chi) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::chi) - 3.0/32.0*state_fab(i, j + 2, k, Idx::chi) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::chi) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::chi) - 3.0/32.0*state_fab(i, j - 2, k, Idx::chi) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::chi) - 3.0/32.0*state_fab(i + 2, j, k, Idx::chi) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::chi) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::chi) - 3.0/32.0*state_fab(i - 2, j, k, Idx::chi) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[0];

        amrex::Real AdvDbetachi = beta_U_0*(ddnDchi_L_0*(beta_U_0 < 0) + dupDchi_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDchi_L_1*(beta_U_1 < 0) + dupDchi_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDchi_L_2*(beta_U_2 < 0) + dupDchi_L_2*(beta_U_2 > 0));

        amrex::Real dDgamtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dDgamtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dDgamtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dDgamtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dDgamtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dDgamtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dDgamtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dDgamtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dDgamtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dDgamtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dDgamtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dDgamtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dDgamtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dDgamtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dDgamtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dDgamtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dDgamtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dDgamtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dupDgamtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dupDgamtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dupDgamtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dupDgamtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dupDgamtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dupDgamtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dupDgamtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dupDgamtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dupDgamtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dupDgamtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dupDgamtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dupDgamtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dupDgamtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dupDgamtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dupDgamtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dupDgamtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dupDgamtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dupDgamtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real ddnDgamtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real ddnDgamtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real ddnDgamtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real ddnDgamtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real ddnDgamtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real ddnDgamtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real ddnDgamtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real ddnDgamtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real ddnDgamtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real ddnDgamtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real ddnDgamtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real ddnDgamtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real ddnDgamtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real ddnDgamtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real ddnDgamtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real ddnDgamtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real ddnDgamtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real ddnDgamtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dDDgamtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODgamtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dKODgamtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dKODgamtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dKODgamtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dKODgamtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dKODgamtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];

        amrex::Real AdvDbetagamtilde_LL_00 = beta_U_0*(ddnDgamtilde_LLL_000*(beta_U_0 < 0) + dupDgamtilde_LLL_000*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_001*(beta_U_1 < 0) + dupDgamtilde_LLL_001*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_002*(beta_U_2 < 0) + dupDgamtilde_LLL_002*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_01 = beta_U_0*(ddnDgamtilde_LLL_010*(beta_U_0 < 0) + dupDgamtilde_LLL_010*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_011*(beta_U_1 < 0) + dupDgamtilde_LLL_011*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_012*(beta_U_2 < 0) + dupDgamtilde_LLL_012*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_02 = beta_U_0*(ddnDgamtilde_LLL_020*(beta_U_0 < 0) + dupDgamtilde_LLL_020*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_021*(beta_U_1 < 0) + dupDgamtilde_LLL_021*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_022*(beta_U_2 < 0) + dupDgamtilde_LLL_022*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_11 = beta_U_0*(ddnDgamtilde_LLL_110*(beta_U_0 < 0) + dupDgamtilde_LLL_110*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_111*(beta_U_1 < 0) + dupDgamtilde_LLL_111*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_112*(beta_U_2 < 0) + dupDgamtilde_LLL_112*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_12 = beta_U_0*(ddnDgamtilde_LLL_120*(beta_U_0 < 0) + dupDgamtilde_LLL_120*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_121*(beta_U_1 < 0) + dupDgamtilde_LLL_121*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_122*(beta_U_2 < 0) + dupDgamtilde_LLL_122*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_22 = beta_U_0*(ddnDgamtilde_LLL_220*(beta_U_0 < 0) + dupDgamtilde_LLL_220*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_221*(beta_U_1 < 0) + dupDgamtilde_LLL_221*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_222*(beta_U_2 < 0) + dupDgamtilde_LLL_222*(beta_U_2 > 0));

        amrex::Real dDKhat_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dDKhat_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dDKhat_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];

        amrex::Real dupDKhat_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Khat) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real dupDKhat_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Khat) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real dupDKhat_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Khat) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[2];

        amrex::Real ddnDKhat_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Khat) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Khat) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real ddnDKhat_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Khat) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Khat) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real ddnDKhat_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Khat) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Khat) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[2];

        amrex::Real dDDKhat_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[0], 2);
        amrex::Real dDDKhat_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Khat) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Khat) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Khat) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Khat) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Khat) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Khat) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Khat) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Khat) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Khat) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Khat) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Khat) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Khat) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Khat) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Khat) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Khat) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Khat))/(dx[0]*dx[1]);
        amrex::Real dDDKhat_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Khat) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Khat) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Khat) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Khat) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Khat) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Khat) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Khat) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Khat) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Khat) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Khat) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Khat) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Khat) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Khat) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Khat) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Khat) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Khat))/(dx[0]*dx[2]);
        amrex::Real dDDKhat_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[1], 2);
        amrex::Real dDDKhat_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Khat) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Khat) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Khat) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Khat) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Khat) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Khat) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Khat) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Khat) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Khat) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Khat) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Khat) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Khat) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Khat) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Khat) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Khat) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Khat))/(dx[1]*dx[2]);
        amrex::Real dDDKhat_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[2], 2);

        amrex::Real dKODKhat = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Khat) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Khat) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Khat) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Khat) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Khat) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Khat) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Khat) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Khat) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Khat) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Khat) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Khat) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Khat) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Khat) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Khat) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Khat) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[0];

        amrex::Real AdvDbetaKhat = beta_U_0*(ddnDKhat_L_0*(beta_U_0 < 0) + dupDKhat_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDKhat_L_1*(beta_U_1 < 0) + dupDKhat_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDKhat_L_2*(beta_U_2 < 0) + dupDKhat_L_2*(beta_U_2 > 0));

        amrex::Real dDAtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dDAtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dDAtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dDAtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dDAtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dDAtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dDAtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dDAtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dDAtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dDAtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dDAtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dDAtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dDAtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dDAtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dDAtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dDAtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dDAtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dDAtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dupDAtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dupDAtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dupDAtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dupDAtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dupDAtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dupDAtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dupDAtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dupDAtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dupDAtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dupDAtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dupDAtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dupDAtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dupDAtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dupDAtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dupDAtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dupDAtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dupDAtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dupDAtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real ddnDAtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real ddnDAtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real ddnDAtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real ddnDAtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real ddnDAtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real ddnDAtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real ddnDAtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real ddnDAtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real ddnDAtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real ddnDAtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real ddnDAtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real ddnDAtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real ddnDAtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real ddnDAtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real ddnDAtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real ddnDAtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real ddnDAtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real ddnDAtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dDDAtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODAtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dKODAtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dKODAtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dKODAtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dKODAtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dKODAtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];

        amrex::Real AdvDbetaAtilde_LL_00 = beta_U_0*(ddnDAtilde_LLL_000*(beta_U_0 < 0) + dupDAtilde_LLL_000*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_001*(beta_U_1 < 0) + dupDAtilde_LLL_001*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_002*(beta_U_2 < 0) + dupDAtilde_LLL_002*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_01 = beta_U_0*(ddnDAtilde_LLL_010*(beta_U_0 < 0) + dupDAtilde_LLL_010*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_011*(beta_U_1 < 0) + dupDAtilde_LLL_011*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_012*(beta_U_2 < 0) + dupDAtilde_LLL_012*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_02 = beta_U_0*(ddnDAtilde_LLL_020*(beta_U_0 < 0) + dupDAtilde_LLL_020*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_021*(beta_U_1 < 0) + dupDAtilde_LLL_021*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_022*(beta_U_2 < 0) + dupDAtilde_LLL_022*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_11 = beta_U_0*(ddnDAtilde_LLL_110*(beta_U_0 < 0) + dupDAtilde_LLL_110*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_111*(beta_U_1 < 0) + dupDAtilde_LLL_111*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_112*(beta_U_2 < 0) + dupDAtilde_LLL_112*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_12 = beta_U_0*(ddnDAtilde_LLL_120*(beta_U_0 < 0) + dupDAtilde_LLL_120*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_121*(beta_U_1 < 0) + dupDAtilde_LLL_121*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_122*(beta_U_2 < 0) + dupDAtilde_LLL_122*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_22 = beta_U_0*(ddnDAtilde_LLL_220*(beta_U_0 < 0) + dupDAtilde_LLL_220*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_221*(beta_U_1 < 0) + dupDAtilde_LLL_221*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_222*(beta_U_2 < 0) + dupDAtilde_LLL_222*(beta_U_2 > 0));

        amrex::Real dDtheta_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dDtheta_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dDtheta_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];

        amrex::Real dupDtheta_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/2.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::theta) - 1.0/4.0*state_fab(i - 1, j, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real dupDtheta_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/2.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::theta) - 1.0/4.0*state_fab(i, j - 1, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real dupDtheta_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/2.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::theta) - 1.0/4.0*state_fab(i, j, k - 1, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real ddnDtheta_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/2.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 3, j, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real ddnDtheta_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/2.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 3, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real ddnDtheta_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/2.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 3, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real dDDtheta_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 2, j, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[0], 2);
        amrex::Real dDDtheta_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::theta) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::theta) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::theta) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::theta) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::theta) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::theta) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::theta) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::theta) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::theta))/(dx[0]*dx[1]);
        amrex::Real dDDtheta_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::theta) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::theta) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::theta) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::theta) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::theta) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::theta) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::theta) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::theta) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::theta))/(dx[0]*dx[2]);
        amrex::Real dDDtheta_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 2, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[1], 2);
        amrex::Real dDDtheta_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::theta) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::theta) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::theta) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::theta) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::theta) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::theta) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::theta) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::theta) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::theta))/(dx[1]*dx[2]);
        amrex::Real dDDtheta_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 2, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[2], 2);

        amrex::Real dKODtheta = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::theta) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k - 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::theta) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j - 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::theta) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i - 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[0];

        amrex::Real AdvDbetatheta = beta_U_0*(ddnDtheta_L_0*(beta_U_0 < 0) + dupDtheta_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDtheta_L_1*(beta_U_1 < 0) + dupDtheta_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDtheta_L_2*(beta_U_2 < 0) + dupDtheta_L_2*(beta_U_2 > 0));

        amrex::Real dDGamtilde_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dDGamtilde_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real dDGamtilde_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real dDGamtilde_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dDGamtilde_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real dDGamtilde_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real dDGamtilde_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real dDGamtilde_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real dDGamtilde_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real dupDGamtilde_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dupDGamtilde_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real dupDGamtilde_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real dupDGamtilde_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dupDGamtilde_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real dupDGamtilde_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real dupDGamtilde_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real dupDGamtilde_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real dupDGamtilde_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real ddnDGamtilde_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real ddnDGamtilde_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real ddnDGamtilde_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real ddnDGamtilde_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real ddnDGamtilde_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real ddnDGamtilde_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real ddnDGamtilde_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real ddnDGamtilde_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real ddnDGamtilde_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real dDDGamtilde_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDGamtilde_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDGamtilde_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODGamtilde_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dKODGamtilde_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dKODGamtilde_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];

        amrex::Real AdvDbetaGamtilde_U_0 = beta_U_0*(ddnDGamtilde_UL_00*(beta_U_0 < 0) + dupDGamtilde_UL_00*(beta_U_0 > 0)) + beta_U_1*(ddnDGamtilde_UL_01*(beta_U_1 < 0) + dupDGamtilde_UL_01*(beta_U_1 > 0)) + beta_U_2*(ddnDGamtilde_UL_02*(beta_U_2 < 0) + dupDGamtilde_UL_02*(beta_U_2 > 0));
        amrex::Real AdvDbetaGamtilde_U_1 = beta_U_0*(ddnDGamtilde_UL_10*(beta_U_0 < 0) + dupDGamtilde_UL_10*(beta_U_0 > 0)) + beta_U_1*(ddnDGamtilde_UL_11*(beta_U_1 < 0) + dupDGamtilde_UL_11*(beta_U_1 > 0)) + beta_U_2*(ddnDGamtilde_UL_12*(beta_U_2 < 0) + dupDGamtilde_UL_12*(beta_U_2 > 0));
        amrex::Real AdvDbetaGamtilde_U_2 = beta_U_0*(ddnDGamtilde_UL_20*(beta_U_0 < 0) + dupDGamtilde_UL_20*(beta_U_0 > 0)) + beta_U_1*(ddnDGamtilde_UL_21*(beta_U_1 < 0) + dupDGamtilde_UL_21*(beta_U_1 > 0)) + beta_U_2*(ddnDGamtilde_UL_22*(beta_U_2 < 0) + dupDGamtilde_UL_22*(beta_U_2 > 0));

        amrex::Real dDalpha_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
        amrex::Real dDalpha_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
        amrex::Real dDalpha_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];

        amrex::Real dupDalpha_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/2.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real dupDalpha_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/2.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real dupDalpha_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/2.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::alpha) - 1.0/4.0*state_fab(i, j, k - 1, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real ddnDalpha_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/2.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 3, j, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real ddnDalpha_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/2.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 3, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real ddnDalpha_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/2.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 3, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real dDDalpha_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 2, j, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
        amrex::Real dDDalpha_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real dDDalpha_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real dDDalpha_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 2, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
        amrex::Real dDDalpha_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real dDDalpha_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 2, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);

        amrex::Real dKODalpha = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::alpha) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k - 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::alpha) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j - 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::alpha) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i - 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[0];

        amrex::Real AdvDbetaalpha = beta_U_0*(ddnDalpha_L_0*(beta_U_0 < 0) + dupDalpha_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDalpha_L_1*(beta_U_1 < 0) + dupDalpha_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDalpha_L_2*(beta_U_2 < 0) + dupDalpha_L_2*(beta_U_2 > 0));

        amrex::Real dDbeta_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dDbeta_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_0))/dx[1];
        amrex::Real dDbeta_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_0))/dx[2];
        amrex::Real dDbeta_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dDbeta_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_1))/dx[1];
        amrex::Real dDbeta_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_1))/dx[2];
        amrex::Real dDbeta_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dDbeta_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_2))/dx[1];
        amrex::Real dDbeta_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_2))/dx[2];

        amrex::Real dupDbeta_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dupDbeta_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real dupDbeta_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real dupDbeta_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dupDbeta_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real dupDbeta_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real dupDbeta_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dupDbeta_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real dupDbeta_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real ddnDbeta_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real ddnDbeta_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real ddnDbeta_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real ddnDbeta_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real ddnDbeta_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real ddnDbeta_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real ddnDbeta_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real ddnDbeta_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real ddnDbeta_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real dDDbeta_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODbeta_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dKODbeta_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dKODbeta_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];

        amrex::Real AdvDbetabeta_U_0 = beta_U_0*(ddnDbeta_UL_00*(beta_U_0 < 0) + dupDbeta_UL_00*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_01*(beta_U_1 < 0) + dupDbeta_UL_01*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_02*(beta_U_2 < 0) + dupDbeta_UL_02*(beta_U_2 > 0));
        amrex::Real AdvDbetabeta_U_1 = beta_U_0*(ddnDbeta_UL_10*(beta_U_0 < 0) + dupDbeta_UL_10*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_11*(beta_U_1 < 0) + dupDbeta_UL_11*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_12*(beta_U_2 < 0) + dupDbeta_UL_12*(beta_U_2 > 0));
        amrex::Real AdvDbetabeta_U_2 = beta_U_0*(ddnDbeta_UL_20*(beta_U_0 < 0) + dupDbeta_UL_20*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_21*(beta_U_1 < 0) + dupDbeta_UL_21*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_22*(beta_U_2 < 0) + dupDbeta_UL_22*(beta_U_2 > 0));

        amrex::Real invgamtilde_UU_00 = (gamtilde_LL_11*gamtilde_LL_22 - std::pow(gamtilde_LL_12, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_01 = (-gamtilde_LL_01*gamtilde_LL_22 + gamtilde_LL_02*gamtilde_LL_12)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_02 = (gamtilde_LL_01*gamtilde_LL_12 - gamtilde_LL_02*gamtilde_LL_11)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_11 = (gamtilde_LL_00*gamtilde_LL_22 - std::pow(gamtilde_LL_02, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_12 = (-gamtilde_LL_00*gamtilde_LL_12 + gamtilde_LL_01*gamtilde_LL_02)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_22 = (gamtilde_LL_00*gamtilde_LL_11 - std::pow(gamtilde_LL_01, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);

        amrex::Real Christoffelgamtilde_LLL_000 = 0.5*dDgamtilde_LLL_000;
        amrex::Real Christoffelgamtilde_LLL_001 = 0.5*dDgamtilde_LLL_001;
        amrex::Real Christoffelgamtilde_LLL_002 = 0.5*dDgamtilde_LLL_002;
        amrex::Real Christoffelgamtilde_LLL_011 = 1.0*dDgamtilde_LLL_011 - 0.5*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_012 = 0.5*dDgamtilde_LLL_012 + 0.5*dDgamtilde_LLL_021 - 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_022 = 1.0*dDgamtilde_LLL_022 - 0.5*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_100 = -0.5*dDgamtilde_LLL_001 + 1.0*dDgamtilde_LLL_010;
        amrex::Real Christoffelgamtilde_LLL_101 = 0.5*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_102 = 0.5*dDgamtilde_LLL_012 - 0.5*dDgamtilde_LLL_021 + 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_111 = 0.5*dDgamtilde_LLL_111;
        amrex::Real Christoffelgamtilde_LLL_112 = 0.5*dDgamtilde_LLL_112;
        amrex::Real Christoffelgamtilde_LLL_122 = 1.0*dDgamtilde_LLL_122 - 0.5*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_200 = -0.5*dDgamtilde_LLL_002 + 1.0*dDgamtilde_LLL_020;
        amrex::Real Christoffelgamtilde_LLL_201 = -0.5*dDgamtilde_LLL_012 + 0.5*dDgamtilde_LLL_021 + 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_202 = 0.5*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_211 = -0.5*dDgamtilde_LLL_112 + 1.0*dDgamtilde_LLL_121;
        amrex::Real Christoffelgamtilde_LLL_212 = 0.5*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_222 = 0.5*dDgamtilde_LLL_222;

        amrex::Real Christoffelgamtilde_ULL_000 = Christoffelgamtilde_LLL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_200*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_001 = Christoffelgamtilde_LLL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_002 = Christoffelgamtilde_LLL_002*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_011 = Christoffelgamtilde_LLL_011*invgamtilde_UU_00 + Christoffelgamtilde_LLL_111*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_012 = Christoffelgamtilde_LLL_012*invgamtilde_UU_00 + Christoffelgamtilde_LLL_112*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_022 = Christoffelgamtilde_LLL_022*invgamtilde_UU_00 + Christoffelgamtilde_LLL_122*invgamtilde_UU_01 + Christoffelgamtilde_LLL_222*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_100 = Christoffelgamtilde_LLL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_100*invgamtilde_UU_11 + Christoffelgamtilde_LLL_200*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_101 = Christoffelgamtilde_LLL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_201*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_102 = Christoffelgamtilde_LLL_002*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*invgamtilde_UU_11 + Christoffelgamtilde_LLL_202*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_111 = Christoffelgamtilde_LLL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_111*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_112 = Christoffelgamtilde_LLL_012*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_122 = Christoffelgamtilde_LLL_022*invgamtilde_UU_01 + Christoffelgamtilde_LLL_122*invgamtilde_UU_11 + Christoffelgamtilde_LLL_222*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_200 = Christoffelgamtilde_LLL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_100*invgamtilde_UU_12 + Christoffelgamtilde_LLL_200*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_201 = Christoffelgamtilde_LLL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_201*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_202 = Christoffelgamtilde_LLL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_211 = Christoffelgamtilde_LLL_011*invgamtilde_UU_02 + Christoffelgamtilde_LLL_111*invgamtilde_UU_12 + Christoffelgamtilde_LLL_211*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_212 = Christoffelgamtilde_LLL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_222 = Christoffelgamtilde_LLL_022*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*invgamtilde_UU_22;

        amrex::Real ConformalChristoffelchigamtilde_ULL_000 = Christoffelgamtilde_ULL_000 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_00/chi - 1.0*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_001 = Christoffelgamtilde_ULL_001 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_01/chi - 0.5*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_002 = Christoffelgamtilde_ULL_002 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_02/chi - 0.5*dDchi_L_2/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_011 = Christoffelgamtilde_ULL_011 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_012 = Christoffelgamtilde_ULL_012 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_022 = Christoffelgamtilde_ULL_022 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_100 = Christoffelgamtilde_ULL_100 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_101 = Christoffelgamtilde_ULL_101 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_01/chi - 0.5*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_102 = Christoffelgamtilde_ULL_102 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_111 = Christoffelgamtilde_ULL_111 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_11/chi - 1.0*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_112 = Christoffelgamtilde_ULL_112 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_12/chi - 0.5*dDchi_L_2/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_122 = Christoffelgamtilde_ULL_122 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_200 = Christoffelgamtilde_ULL_200 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_201 = Christoffelgamtilde_ULL_201 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_202 = Christoffelgamtilde_ULL_202 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_02/chi - 0.5*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_211 = Christoffelgamtilde_ULL_211 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_212 = Christoffelgamtilde_ULL_212 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_12/chi - 0.5*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_222 = Christoffelgamtilde_ULL_222 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_22/chi - 1.0*dDchi_L_2/chi;

        amrex::Real CovdDDalpha_LL_00 = -ConformalChristoffelchigamtilde_ULL_000*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_100*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_200*dDalpha_L_2 + dDDalpha_LL_00;
        amrex::Real CovdDDalpha_LL_01 = -ConformalChristoffelchigamtilde_ULL_001*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_101*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_201*dDalpha_L_2 + dDDalpha_LL_01;
        amrex::Real CovdDDalpha_LL_02 = -ConformalChristoffelchigamtilde_ULL_002*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_102*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_202*dDalpha_L_2 + dDDalpha_LL_02;
        amrex::Real CovdDDalpha_LL_11 = -ConformalChristoffelchigamtilde_ULL_011*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_111*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_211*dDalpha_L_2 + dDDalpha_LL_11;
        amrex::Real CovdDDalpha_LL_12 = -ConformalChristoffelchigamtilde_ULL_012*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_112*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_212*dDalpha_L_2 + dDDalpha_LL_12;
        amrex::Real CovdDDalpha_LL_22 = -ConformalChristoffelchigamtilde_ULL_022*dDalpha_L_0 - ConformalChristoffelchigamtilde_ULL_122*dDalpha_L_1 - ConformalChristoffelchigamtilde_ULL_222*dDalpha_L_2 + dDDalpha_LL_22;

        amrex::Real gam_LL_00 = gamtilde_LL_00/chi;
        amrex::Real gam_LL_01 = gamtilde_LL_01/chi;
        amrex::Real gam_LL_02 = gamtilde_LL_02/chi;
        amrex::Real gam_LL_10 = gamtilde_LL_01/chi;
        amrex::Real gam_LL_11 = gamtilde_LL_11/chi;
        amrex::Real gam_LL_12 = gamtilde_LL_12/chi;
        amrex::Real gam_LL_20 = gamtilde_LL_02/chi;
        amrex::Real gam_LL_21 = gamtilde_LL_12/chi;
        amrex::Real gam_LL_22 = gamtilde_LL_22/chi;

        amrex::Real invgam_UU_00 = chi*invgamtilde_UU_00;
        amrex::Real invgam_UU_01 = chi*invgamtilde_UU_01;
        amrex::Real invgam_UU_02 = chi*invgamtilde_UU_02;
        amrex::Real invgam_UU_10 = chi*invgamtilde_UU_01;
        amrex::Real invgam_UU_11 = chi*invgamtilde_UU_11;
        amrex::Real invgam_UU_12 = chi*invgamtilde_UU_12;
        amrex::Real invgam_UU_20 = chi*invgamtilde_UU_02;
        amrex::Real invgam_UU_21 = chi*invgamtilde_UU_12;
        amrex::Real invgam_UU_22 = chi*invgamtilde_UU_22;

        amrex::Real Atilde_UU_00 = Atilde_LL_00*std::pow(invgamtilde_UU_00, 2) + 2*Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_01 + 2*Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_02 + Atilde_LL_11*std::pow(invgamtilde_UU_01, 2) + 2*Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_22*std::pow(invgamtilde_UU_02, 2);
        amrex::Real Atilde_UU_01 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_01 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_11 + Atilde_LL_01*std::pow(invgamtilde_UU_01, 2) + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_11 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real Atilde_UU_02 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_22 + Atilde_LL_02*std::pow(invgamtilde_UU_02, 2) + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real Atilde_UU_10 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_01 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_11 + Atilde_LL_01*std::pow(invgamtilde_UU_01, 2) + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_11 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real Atilde_UU_11 = Atilde_LL_00*std::pow(invgamtilde_UU_01, 2) + 2*Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_11 + 2*Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_11*std::pow(invgamtilde_UU_11, 2) + 2*Atilde_LL_12*invgamtilde_UU_11*invgamtilde_UU_12 + Atilde_LL_22*std::pow(invgamtilde_UU_12, 2);
        amrex::Real Atilde_UU_12 = Atilde_LL_00*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_02*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_11*invgamtilde_UU_11*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_11*invgamtilde_UU_22 + Atilde_LL_12*std::pow(invgamtilde_UU_12, 2) + Atilde_LL_22*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real Atilde_UU_20 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_22 + Atilde_LL_02*std::pow(invgamtilde_UU_02, 2) + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real Atilde_UU_21 = Atilde_LL_00*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_02*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_11*invgamtilde_UU_11*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_11*invgamtilde_UU_22 + Atilde_LL_12*std::pow(invgamtilde_UU_12, 2) + Atilde_LL_22*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real Atilde_UU_22 = Atilde_LL_00*std::pow(invgamtilde_UU_02, 2) + 2*Atilde_LL_01*invgamtilde_UU_02*invgamtilde_UU_12 + 2*Atilde_LL_02*invgamtilde_UU_02*invgamtilde_UU_22 + Atilde_LL_11*std::pow(invgamtilde_UU_12, 2) + 2*Atilde_LL_12*invgamtilde_UU_12*invgamtilde_UU_22 + Atilde_LL_22*std::pow(invgamtilde_UU_22, 2);

        amrex::Real Atilde_UL_00 = Atilde_LL_00*invgamtilde_UU_00 + Atilde_LL_01*invgamtilde_UU_01 + Atilde_LL_02*invgamtilde_UU_02;
        amrex::Real Atilde_UL_01 = Atilde_LL_01*invgamtilde_UU_00 + Atilde_LL_11*invgamtilde_UU_01 + Atilde_LL_12*invgamtilde_UU_02;
        amrex::Real Atilde_UL_02 = Atilde_LL_02*invgamtilde_UU_00 + Atilde_LL_12*invgamtilde_UU_01 + Atilde_LL_22*invgamtilde_UU_02;
        amrex::Real Atilde_UL_10 = Atilde_LL_00*invgamtilde_UU_01 + Atilde_LL_01*invgamtilde_UU_11 + Atilde_LL_02*invgamtilde_UU_12;
        amrex::Real Atilde_UL_11 = Atilde_LL_01*invgamtilde_UU_01 + Atilde_LL_11*invgamtilde_UU_11 + Atilde_LL_12*invgamtilde_UU_12;
        amrex::Real Atilde_UL_12 = Atilde_LL_02*invgamtilde_UU_01 + Atilde_LL_12*invgamtilde_UU_11 + Atilde_LL_22*invgamtilde_UU_12;
        amrex::Real Atilde_UL_20 = Atilde_LL_00*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_12 + Atilde_LL_02*invgamtilde_UU_22;
        amrex::Real Atilde_UL_21 = Atilde_LL_01*invgamtilde_UU_02 + Atilde_LL_11*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_22;
        amrex::Real Atilde_UL_22 = Atilde_LL_02*invgamtilde_UU_02 + Atilde_LL_12*invgamtilde_UU_12 + Atilde_LL_22*invgamtilde_UU_22;

        amrex::Real CovDDalphaTF_LL_00 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_00*invgam_UU_00 + CovdDDalpha_LL_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_00*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_00*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_00*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_00*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_00*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_00*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_00*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_00*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_01 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_01*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_01*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_01*invgam_UU_10 + CovdDDalpha_LL_01 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_01*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_01*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_01*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_01*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_01*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_01*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_02 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_02*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_02*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_02*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_02*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_02*invgam_UU_20 + CovdDDalpha_LL_02 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_02*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_02*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_02*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_02*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_10 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_10*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_10*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_10*invgam_UU_10 + CovdDDalpha_LL_01 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_10*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_10*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_10*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_10*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_10*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_10*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_11 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_11*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_11*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_11*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_11*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_11*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_11*invgam_UU_11 + CovdDDalpha_LL_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_11*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_11*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_11*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_12 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_12*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_12*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_12*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_12*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_12*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_12*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_12*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_12*invgam_UU_21 + CovdDDalpha_LL_12 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_12*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_20 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_20*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_20*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_20*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_20*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_20*invgam_UU_20 + CovdDDalpha_LL_02 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_20*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_20*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_20*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_20*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_21 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_21*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_21*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_21*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_21*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_21*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_21*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_21*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_21*invgam_UU_21 + CovdDDalpha_LL_12 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_21*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_22 = -0.33333333333333331*CovdDDalpha_LL_00*gam_LL_22*invgam_UU_00 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_22*invgam_UU_01 - 0.33333333333333331*CovdDDalpha_LL_01*gam_LL_22*invgam_UU_10 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_22*invgam_UU_02 - 0.33333333333333331*CovdDDalpha_LL_02*gam_LL_22*invgam_UU_20 - 0.33333333333333331*CovdDDalpha_LL_11*gam_LL_22*invgam_UU_11 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_22*invgam_UU_12 - 0.33333333333333331*CovdDDalpha_LL_12*gam_LL_22*invgam_UU_21 - 0.33333333333333331*CovdDDalpha_LL_22*gam_LL_22*invgam_UU_22 + CovdDDalpha_LL_22;

        amrex::Real ChristoffelDgamtilde_U_0 = Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_ULL_022*invgamtilde_UU_22;
        amrex::Real ChristoffelDgamtilde_U_1 = Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_ULL_122*invgamtilde_UU_22;
        amrex::Real ChristoffelDgamtilde_U_2 = Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_ULL_222*invgamtilde_UU_22;

        amrex::Real Z4cRicciTildegamtilde_LL_00 = 1.0*ChristoffelDgamtilde_U_0*Christoffelgamtilde_ULL_000 + 1.0*ChristoffelDgamtilde_U_1*Christoffelgamtilde_ULL_001 + 1.0*ChristoffelDgamtilde_U_2*Christoffelgamtilde_ULL_002 + 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_0000*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_0001*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_0002*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_0011*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_0012*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_0022*invgamtilde_UU_22 + 1.0*dDGamtilde_UL_00*gamtilde_LL_00 + 1.0*dDGamtilde_UL_10*gamtilde_LL_01 + 1.0*dDGamtilde_UL_20*gamtilde_LL_02;
        amrex::Real Z4cRicciTildegamtilde_LL_01 = 0.5*ChristoffelDgamtilde_U_0*(Christoffelgamtilde_ULL_001 + Christoffelgamtilde_ULL_100) + 0.5*ChristoffelDgamtilde_U_1*(Christoffelgamtilde_ULL_011 + Christoffelgamtilde_ULL_101) + 0.5*ChristoffelDgamtilde_U_2*(Christoffelgamtilde_ULL_012 + Christoffelgamtilde_ULL_102) + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_0100*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_0101*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_0102*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_0111*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_0112*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_0122*invgamtilde_UU_22 + 0.5*dDGamtilde_UL_00*gamtilde_LL_01 + 0.5*dDGamtilde_UL_01*gamtilde_LL_00 + 0.5*dDGamtilde_UL_10*gamtilde_LL_11 + 0.5*dDGamtilde_UL_11*gamtilde_LL_01 + 0.5*dDGamtilde_UL_20*gamtilde_LL_12 + 0.5*dDGamtilde_UL_21*gamtilde_LL_02 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_000) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_200) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_000) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_100) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_200) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_002) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_000) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_202) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_200) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_001) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_201) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_002) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_001) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_202) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_201) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_002) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_202);
        amrex::Real Z4cRicciTildegamtilde_LL_02 = 0.5*ChristoffelDgamtilde_U_0*(Christoffelgamtilde_ULL_002 + Christoffelgamtilde_ULL_200) + 0.5*ChristoffelDgamtilde_U_1*(Christoffelgamtilde_ULL_012 + Christoffelgamtilde_ULL_201) + 0.5*ChristoffelDgamtilde_U_2*(Christoffelgamtilde_ULL_022 + Christoffelgamtilde_ULL_202) + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_0200*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_0201*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_0202*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_0211*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_0212*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_0222*invgamtilde_UU_22 + 0.5*dDGamtilde_UL_00*gamtilde_LL_02 + 0.5*dDGamtilde_UL_02*gamtilde_LL_00 + 0.5*dDGamtilde_UL_10*gamtilde_LL_12 + 0.5*dDGamtilde_UL_12*gamtilde_LL_01 + 0.5*dDGamtilde_UL_20*gamtilde_LL_22 + 0.5*dDGamtilde_UL_22*gamtilde_LL_02 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_000) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_100) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_000) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_100) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_002) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_102) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_000) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_100) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_200) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_001) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_101) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_002) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_001) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_102) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_101) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_002) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_102) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202);
        amrex::Real Z4cRicciTildegamtilde_LL_11 = 1.0*ChristoffelDgamtilde_U_0*Christoffelgamtilde_ULL_101 + 1.0*ChristoffelDgamtilde_U_1*Christoffelgamtilde_ULL_111 + 1.0*ChristoffelDgamtilde_U_2*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_111*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_112*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_111*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_1100*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_1101*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_1102*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_1111*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_1112*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_1122*invgamtilde_UU_22 + 1.0*dDGamtilde_UL_01*gamtilde_LL_01 + 1.0*dDGamtilde_UL_11*gamtilde_LL_11 + 1.0*dDGamtilde_UL_21*gamtilde_LL_12;
        amrex::Real Z4cRicciTildegamtilde_LL_12 = 0.5*ChristoffelDgamtilde_U_0*(Christoffelgamtilde_ULL_102 + Christoffelgamtilde_ULL_201) + 0.5*ChristoffelDgamtilde_U_1*(Christoffelgamtilde_ULL_112 + Christoffelgamtilde_ULL_211) + 0.5*ChristoffelDgamtilde_U_2*(Christoffelgamtilde_ULL_122 + Christoffelgamtilde_ULL_212) + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_111*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_112*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_101*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_111*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_112*invgamtilde_UU_22 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_1200*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_1201*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_1202*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_1211*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_1212*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_1222*invgamtilde_UU_22 + 0.5*dDGamtilde_UL_01*gamtilde_LL_02 + 0.5*dDGamtilde_UL_02*gamtilde_LL_01 + 0.5*dDGamtilde_UL_11*gamtilde_LL_12 + 0.5*dDGamtilde_UL_12*gamtilde_LL_11 + 0.5*dDGamtilde_UL_21*gamtilde_LL_22 + 0.5*dDGamtilde_UL_22*gamtilde_LL_12 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_001) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_101) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_011) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_111) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_211) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_012) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_112) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_001) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_101) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_011) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_111) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_012) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_011) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_112) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_111) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_211) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_012) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_112) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212);
        amrex::Real Z4cRicciTildegamtilde_LL_22 = 1.0*ChristoffelDgamtilde_U_0*Christoffelgamtilde_ULL_202 + 1.0*ChristoffelDgamtilde_U_1*Christoffelgamtilde_ULL_212 + 1.0*ChristoffelDgamtilde_U_2*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_022*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_022*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_022*invgamtilde_UU_22 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_112*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_122*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_122*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_122*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_002*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_012*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_022*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_002*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_012*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_022*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_102*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_112*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_122*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_022*invgamtilde_UU_22 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_222*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_102*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_112*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_122*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_122*invgamtilde_UU_22 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_222*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_222*invgamtilde_UU_22 - 0.5*dDDgamtilde_LLLL_2200*invgamtilde_UU_00 - 1.0*dDDgamtilde_LLLL_2201*invgamtilde_UU_01 - 1.0*dDDgamtilde_LLLL_2202*invgamtilde_UU_02 - 0.5*dDDgamtilde_LLLL_2211*invgamtilde_UU_11 - 1.0*dDDgamtilde_LLLL_2212*invgamtilde_UU_12 - 0.5*dDDgamtilde_LLLL_2222*invgamtilde_UU_22 + 1.0*dDGamtilde_UL_02*gamtilde_LL_02 + 1.0*dDGamtilde_UL_12*gamtilde_LL_12 + 1.0*dDGamtilde_UL_22*gamtilde_LL_22;

        amrex::Real CovdDchi_L_0 = dDchi_L_0;
        amrex::Real CovdDchi_L_1 = dDchi_L_1;
        amrex::Real CovdDchi_L_2 = dDchi_L_2;

        amrex::Real CovdDDchi_LL_00 = -Christoffelgamtilde_ULL_000*dDchi_L_0 - Christoffelgamtilde_ULL_100*dDchi_L_1 - Christoffelgamtilde_ULL_200*dDchi_L_2 + dDDchi_LL_00;
        amrex::Real CovdDDchi_LL_01 = -Christoffelgamtilde_ULL_001*dDchi_L_0 - Christoffelgamtilde_ULL_101*dDchi_L_1 - Christoffelgamtilde_ULL_201*dDchi_L_2 + dDDchi_LL_01;
        amrex::Real CovdDDchi_LL_02 = -Christoffelgamtilde_ULL_002*dDchi_L_0 - Christoffelgamtilde_ULL_102*dDchi_L_1 - Christoffelgamtilde_ULL_202*dDchi_L_2 + dDDchi_LL_02;
        amrex::Real CovdDDchi_LL_11 = -Christoffelgamtilde_ULL_011*dDchi_L_0 - Christoffelgamtilde_ULL_111*dDchi_L_1 - Christoffelgamtilde_ULL_211*dDchi_L_2 + dDDchi_LL_11;
        amrex::Real CovdDDchi_LL_12 = -Christoffelgamtilde_ULL_012*dDchi_L_0 - Christoffelgamtilde_ULL_112*dDchi_L_1 - Christoffelgamtilde_ULL_212*dDchi_L_2 + dDDchi_LL_12;
        amrex::Real CovdDDchi_LL_22 = -Christoffelgamtilde_ULL_022*dDchi_L_0 - Christoffelgamtilde_ULL_122*dDchi_L_1 - Christoffelgamtilde_ULL_222*dDchi_L_2 + dDDchi_LL_22;

        amrex::Real TrCovDtildeDtildechi = CovdDDchi_LL_00*invgamtilde_UU_00 + 2*CovdDDchi_LL_01*invgamtilde_UU_01 + 2*CovdDDchi_LL_02*invgamtilde_UU_02 + CovdDDchi_LL_11*invgamtilde_UU_11 + 2*CovdDDchi_LL_12*invgamtilde_UU_12 + CovdDDchi_LL_22*invgamtilde_UU_22;

        amrex::Real Z4cRicciFromchigamtilde_LL_00 = (1.0/2.0)*CovdDDchi_LL_00/chi - 1.0/4.0*std::pow(CovdDchi_L_0, 2)/std::pow(chi, 2) + gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_00*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));
        amrex::Real Z4cRicciFromchigamtilde_LL_01 = (1.0/2.0)*CovdDDchi_LL_01/chi - 1.0/4.0*CovdDchi_L_0*CovdDchi_L_1/std::pow(chi, 2) + gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_01*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));
        amrex::Real Z4cRicciFromchigamtilde_LL_02 = (1.0/2.0)*CovdDDchi_LL_02/chi - 1.0/4.0*CovdDchi_L_0*CovdDchi_L_2/std::pow(chi, 2) + gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_02*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));
        amrex::Real Z4cRicciFromchigamtilde_LL_11 = (1.0/2.0)*CovdDDchi_LL_11/chi - 1.0/4.0*std::pow(CovdDchi_L_1, 2)/std::pow(chi, 2) + gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_11*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));
        amrex::Real Z4cRicciFromchigamtilde_LL_12 = (1.0/2.0)*CovdDDchi_LL_12/chi - 1.0/4.0*CovdDchi_L_1*CovdDchi_L_2/std::pow(chi, 2) + gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_12*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));
        amrex::Real Z4cRicciFromchigamtilde_LL_22 = (1.0/2.0)*CovdDDchi_LL_22/chi - 1.0/4.0*std::pow(CovdDchi_L_2, 2)/std::pow(chi, 2) + gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_00*invgamtilde_UU_00/chi - 3.0/4.0*std::pow(CovdDchi_L_0, 2)*invgamtilde_UU_00/std::pow(chi, 2)) + 2*gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_01*invgamtilde_UU_01/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_1*invgamtilde_UU_01/std::pow(chi, 2)) + 2*gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_02*invgamtilde_UU_02/chi - 3.0/4.0*CovdDchi_L_0*CovdDchi_L_2*invgamtilde_UU_02/std::pow(chi, 2)) + gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_11*invgamtilde_UU_11/chi - 3.0/4.0*std::pow(CovdDchi_L_1, 2)*invgamtilde_UU_11/std::pow(chi, 2)) + 2*gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_12*invgamtilde_UU_12/chi - 3.0/4.0*CovdDchi_L_1*CovdDchi_L_2*invgamtilde_UU_12/std::pow(chi, 2)) + gamtilde_LL_22*((1.0/2.0)*CovdDDchi_LL_22*invgamtilde_UU_22/chi - 3.0/4.0*std::pow(CovdDchi_L_2, 2)*invgamtilde_UU_22/std::pow(chi, 2));

        amrex::Real R_LL_00 = Z4cRicciFromchigamtilde_LL_00 + Z4cRicciTildegamtilde_LL_00;
        amrex::Real R_LL_01 = Z4cRicciFromchigamtilde_LL_01 + Z4cRicciTildegamtilde_LL_01;
        amrex::Real R_LL_02 = Z4cRicciFromchigamtilde_LL_02 + Z4cRicciTildegamtilde_LL_02;
        amrex::Real R_LL_10 = Z4cRicciFromchigamtilde_LL_01 + Z4cRicciTildegamtilde_LL_01;
        amrex::Real R_LL_11 = Z4cRicciFromchigamtilde_LL_11 + Z4cRicciTildegamtilde_LL_11;
        amrex::Real R_LL_12 = Z4cRicciFromchigamtilde_LL_12 + Z4cRicciTildegamtilde_LL_12;
        amrex::Real R_LL_20 = Z4cRicciFromchigamtilde_LL_02 + Z4cRicciTildegamtilde_LL_02;
        amrex::Real R_LL_21 = Z4cRicciFromchigamtilde_LL_12 + Z4cRicciTildegamtilde_LL_12;
        amrex::Real R_LL_22 = Z4cRicciFromchigamtilde_LL_22 + Z4cRicciTildegamtilde_LL_22;

        amrex::Real Rsclr = R_LL_00*invgam_UU_00 + R_LL_01*invgam_UU_01 + R_LL_02*invgam_UU_02 + R_LL_10*invgam_UU_10 + R_LL_11*invgam_UU_11 + R_LL_12*invgam_UU_12 + R_LL_20*invgam_UU_20 + R_LL_21*invgam_UU_21 + R_LL_22*invgam_UU_22;

        amrex::Real RTF_LL_00 = R_LL_00 - 0.33333333333333331*Rsclr*gam_LL_00;
        amrex::Real RTF_LL_01 = R_LL_01 - 0.33333333333333331*Rsclr*gam_LL_01;
        amrex::Real RTF_LL_02 = R_LL_02 - 0.33333333333333331*Rsclr*gam_LL_02;
        amrex::Real RTF_LL_10 = R_LL_10 - 0.33333333333333331*Rsclr*gam_LL_10;
        amrex::Real RTF_LL_11 = R_LL_11 - 0.33333333333333331*Rsclr*gam_LL_11;
        amrex::Real RTF_LL_12 = R_LL_12 - 0.33333333333333331*Rsclr*gam_LL_12;
        amrex::Real RTF_LL_20 = R_LL_20 - 0.33333333333333331*Rsclr*gam_LL_20;
        amrex::Real RTF_LL_21 = R_LL_21 - 0.33333333333333331*Rsclr*gam_LL_21;
        amrex::Real RTF_LL_22 = R_LL_22 - 0.33333333333333331*Rsclr*gam_LL_22;

        amrex::Real CovdDbeta_UL_00 = Christoffelgamtilde_ULL_000*beta_U_0 + Christoffelgamtilde_ULL_001*beta_U_1 + Christoffelgamtilde_ULL_002*beta_U_2 + dDbeta_UL_00;
        amrex::Real CovdDbeta_UL_01 = Christoffelgamtilde_ULL_001*beta_U_0 + Christoffelgamtilde_ULL_011*beta_U_1 + Christoffelgamtilde_ULL_012*beta_U_2 + dDbeta_UL_01;
        amrex::Real CovdDbeta_UL_02 = Christoffelgamtilde_ULL_002*beta_U_0 + Christoffelgamtilde_ULL_012*beta_U_1 + Christoffelgamtilde_ULL_022*beta_U_2 + dDbeta_UL_02;
        amrex::Real CovdDbeta_UL_10 = Christoffelgamtilde_ULL_100*beta_U_0 + Christoffelgamtilde_ULL_101*beta_U_1 + Christoffelgamtilde_ULL_102*beta_U_2 + dDbeta_UL_10;
        amrex::Real CovdDbeta_UL_11 = Christoffelgamtilde_ULL_101*beta_U_0 + Christoffelgamtilde_ULL_111*beta_U_1 + Christoffelgamtilde_ULL_112*beta_U_2 + dDbeta_UL_11;
        amrex::Real CovdDbeta_UL_12 = Christoffelgamtilde_ULL_102*beta_U_0 + Christoffelgamtilde_ULL_112*beta_U_1 + Christoffelgamtilde_ULL_122*beta_U_2 + dDbeta_UL_12;
        amrex::Real CovdDbeta_UL_20 = Christoffelgamtilde_ULL_200*beta_U_0 + Christoffelgamtilde_ULL_201*beta_U_1 + Christoffelgamtilde_ULL_202*beta_U_2 + dDbeta_UL_20;
        amrex::Real CovdDbeta_UL_21 = Christoffelgamtilde_ULL_201*beta_U_0 + Christoffelgamtilde_ULL_211*beta_U_1 + Christoffelgamtilde_ULL_212*beta_U_2 + dDbeta_UL_21;
        amrex::Real CovdDbeta_UL_22 = Christoffelgamtilde_ULL_202*beta_U_0 + Christoffelgamtilde_ULL_212*beta_U_1 + Christoffelgamtilde_ULL_222*beta_U_2 + dDbeta_UL_22;

        amrex::Real divTildebeta = CovdDbeta_UL_00 + CovdDbeta_UL_11 + CovdDbeta_UL_22;

        rhs_fab(i, j, k, Idx::chi) = AdvDbetachi + 0.66666666666666663*chi*(alpha*(Khat + 2*theta) - divTildebeta) + 0.29999999999999999*dKODchi;

        rhs_fab(i, j, k, Idx::gamtilde_LL_00) = AdvDbetagamtilde_LL_00 - 2*Atilde_LL_00*alpha + 1.3333333333333335*dDbeta_UL_00*gamtilde_LL_00 + 2*dDbeta_UL_10*gamtilde_LL_01 - 0.66666666666666663*dDbeta_UL_11*gamtilde_LL_00 + 2*dDbeta_UL_20*gamtilde_LL_02 - 0.66666666666666663*dDbeta_UL_22*gamtilde_LL_00 + 0.29999999999999999*dKODgamtilde_LL_00;
        rhs_fab(i, j, k, Idx::gamtilde_LL_01) = AdvDbetagamtilde_LL_01 - 2*Atilde_LL_01*alpha + 0.33333333333333337*dDbeta_UL_00*gamtilde_LL_01 + dDbeta_UL_01*gamtilde_LL_00 + dDbeta_UL_10*gamtilde_LL_11 + 0.33333333333333337*dDbeta_UL_11*gamtilde_LL_01 + dDbeta_UL_20*gamtilde_LL_12 + dDbeta_UL_21*gamtilde_LL_02 - 0.66666666666666663*dDbeta_UL_22*gamtilde_LL_01 + 0.29999999999999999*dKODgamtilde_LL_01;
        rhs_fab(i, j, k, Idx::gamtilde_LL_02) = AdvDbetagamtilde_LL_02 - 2*Atilde_LL_02*alpha + 0.33333333333333337*dDbeta_UL_00*gamtilde_LL_02 + dDbeta_UL_02*gamtilde_LL_00 + dDbeta_UL_10*gamtilde_LL_12 - 0.66666666666666663*dDbeta_UL_11*gamtilde_LL_02 + dDbeta_UL_12*gamtilde_LL_01 + dDbeta_UL_20*gamtilde_LL_22 + 0.33333333333333337*dDbeta_UL_22*gamtilde_LL_02 + 0.29999999999999999*dKODgamtilde_LL_02;
        rhs_fab(i, j, k, Idx::gamtilde_LL_11) = AdvDbetagamtilde_LL_11 - 2*Atilde_LL_11*alpha - 0.66666666666666663*dDbeta_UL_00*gamtilde_LL_11 + 2*dDbeta_UL_01*gamtilde_LL_01 + 1.3333333333333335*dDbeta_UL_11*gamtilde_LL_11 + 2*dDbeta_UL_21*gamtilde_LL_12 - 0.66666666666666663*dDbeta_UL_22*gamtilde_LL_11 + 0.29999999999999999*dKODgamtilde_LL_11;
        rhs_fab(i, j, k, Idx::gamtilde_LL_12) = AdvDbetagamtilde_LL_12 - 2*Atilde_LL_12*alpha - 0.66666666666666663*dDbeta_UL_00*gamtilde_LL_12 + dDbeta_UL_01*gamtilde_LL_02 + dDbeta_UL_02*gamtilde_LL_01 + 0.33333333333333337*dDbeta_UL_11*gamtilde_LL_12 + dDbeta_UL_12*gamtilde_LL_11 + dDbeta_UL_21*gamtilde_LL_22 + 0.33333333333333337*dDbeta_UL_22*gamtilde_LL_12 + 0.29999999999999999*dKODgamtilde_LL_12;
        rhs_fab(i, j, k, Idx::gamtilde_LL_22) = AdvDbetagamtilde_LL_22 - 2*Atilde_LL_22*alpha - 0.66666666666666663*dDbeta_UL_00*gamtilde_LL_22 + 2*dDbeta_UL_02*gamtilde_LL_02 - 0.66666666666666663*dDbeta_UL_11*gamtilde_LL_22 + 2*dDbeta_UL_12*gamtilde_LL_12 + 1.3333333333333335*dDbeta_UL_22*gamtilde_LL_22 + 0.29999999999999999*dKODgamtilde_LL_22;

        amrex::Real kappa1 = 0.02;

        amrex::Real kappa2 = 0;

        rhs_fab(i, j, k, Idx::Khat) = AdvDbetaKhat + Atilde_LL_00*Atilde_UU_00*alpha + Atilde_LL_01*Atilde_UU_01*alpha + Atilde_LL_01*Atilde_UU_10*alpha + Atilde_LL_02*Atilde_UU_02*alpha + Atilde_LL_02*Atilde_UU_20*alpha + Atilde_LL_11*Atilde_UU_11*alpha + Atilde_LL_12*Atilde_UU_12*alpha + Atilde_LL_12*Atilde_UU_21*alpha + Atilde_LL_22*Atilde_UU_22*alpha - CovdDDalpha_LL_00*invgam_UU_00 - CovdDDalpha_LL_01*invgam_UU_01 - CovdDDalpha_LL_01*invgam_UU_10 - CovdDDalpha_LL_02*invgam_UU_02 - CovdDDalpha_LL_02*invgam_UU_20 - CovdDDalpha_LL_11*invgam_UU_11 - CovdDDalpha_LL_12*invgam_UU_12 - CovdDDalpha_LL_12*invgam_UU_21 - CovdDDalpha_LL_22*invgam_UU_22 + 0.33333333333333331*alpha*kappa1*theta*(1 - kappa2) + 0.33333333333333331*alpha*std::pow(Khat + 2*theta, 2) + 0.29999999999999999*dKODKhat;

        rhs_fab(i, j, k, Idx::Atilde_LL_00) = AdvDbetaAtilde_LL_00 - 2*Atilde_LL_00*Atilde_UL_00*alpha + Atilde_LL_00*alpha*(Khat + 2*theta) + 1.3333333333333335*Atilde_LL_00*dDbeta_UL_00 - 0.66666666666666663*Atilde_LL_00*dDbeta_UL_11 - 0.66666666666666663*Atilde_LL_00*dDbeta_UL_22 - 2*Atilde_LL_01*Atilde_UL_10*alpha + 2*Atilde_LL_01*dDbeta_UL_10 - 2*Atilde_LL_02*Atilde_UL_20*alpha + 2*Atilde_LL_02*dDbeta_UL_20 + chi*(-CovDDalphaTF_LL_00 + RTF_LL_00*alpha) + 0.29999999999999999*dKODAtilde_LL_00;
        rhs_fab(i, j, k, Idx::Atilde_LL_01) = AdvDbetaAtilde_LL_01 - 2*Atilde_LL_00*Atilde_UL_01*alpha + Atilde_LL_00*dDbeta_UL_01 - 2*Atilde_LL_01*Atilde_UL_11*alpha + Atilde_LL_01*alpha*(Khat + 2*theta) + 0.33333333333333337*Atilde_LL_01*dDbeta_UL_00 + 0.33333333333333337*Atilde_LL_01*dDbeta_UL_11 - 0.66666666666666663*Atilde_LL_01*dDbeta_UL_22 - 2*Atilde_LL_02*Atilde_UL_21*alpha + Atilde_LL_02*dDbeta_UL_21 + Atilde_LL_11*dDbeta_UL_10 + Atilde_LL_12*dDbeta_UL_20 + chi*(-CovDDalphaTF_LL_01 + RTF_LL_01*alpha) + 0.29999999999999999*dKODAtilde_LL_01;
        rhs_fab(i, j, k, Idx::Atilde_LL_02) = AdvDbetaAtilde_LL_02 - 2*Atilde_LL_00*Atilde_UL_02*alpha + Atilde_LL_00*dDbeta_UL_02 - 2*Atilde_LL_01*Atilde_UL_12*alpha + Atilde_LL_01*dDbeta_UL_12 - 2*Atilde_LL_02*Atilde_UL_22*alpha + Atilde_LL_02*alpha*(Khat + 2*theta) + 0.33333333333333337*Atilde_LL_02*dDbeta_UL_00 - 0.66666666666666663*Atilde_LL_02*dDbeta_UL_11 + 0.33333333333333337*Atilde_LL_02*dDbeta_UL_22 + Atilde_LL_12*dDbeta_UL_10 + Atilde_LL_22*dDbeta_UL_20 + chi*(-CovDDalphaTF_LL_02 + RTF_LL_02*alpha) + 0.29999999999999999*dKODAtilde_LL_02;
        rhs_fab(i, j, k, Idx::Atilde_LL_11) = AdvDbetaAtilde_LL_11 - 2*Atilde_LL_01*Atilde_UL_01*alpha + 2*Atilde_LL_01*dDbeta_UL_01 - 2*Atilde_LL_11*Atilde_UL_11*alpha + Atilde_LL_11*alpha*(Khat + 2*theta) - 0.66666666666666663*Atilde_LL_11*dDbeta_UL_00 + 1.3333333333333335*Atilde_LL_11*dDbeta_UL_11 - 0.66666666666666663*Atilde_LL_11*dDbeta_UL_22 - 2*Atilde_LL_12*Atilde_UL_21*alpha + 2*Atilde_LL_12*dDbeta_UL_21 + chi*(-CovDDalphaTF_LL_11 + RTF_LL_11*alpha) + 0.29999999999999999*dKODAtilde_LL_11;
        rhs_fab(i, j, k, Idx::Atilde_LL_12) = AdvDbetaAtilde_LL_12 - 2*Atilde_LL_01*Atilde_UL_02*alpha + Atilde_LL_01*dDbeta_UL_02 + Atilde_LL_02*dDbeta_UL_01 - 2*Atilde_LL_11*Atilde_UL_12*alpha + Atilde_LL_11*dDbeta_UL_12 - 2*Atilde_LL_12*Atilde_UL_22*alpha + Atilde_LL_12*alpha*(Khat + 2*theta) - 0.66666666666666663*Atilde_LL_12*dDbeta_UL_00 + 0.33333333333333337*Atilde_LL_12*dDbeta_UL_11 + 0.33333333333333337*Atilde_LL_12*dDbeta_UL_22 + Atilde_LL_22*dDbeta_UL_21 + chi*(-CovDDalphaTF_LL_12 + RTF_LL_12*alpha) + 0.29999999999999999*dKODAtilde_LL_12;
        rhs_fab(i, j, k, Idx::Atilde_LL_22) = AdvDbetaAtilde_LL_22 - 2*Atilde_LL_02*Atilde_UL_02*alpha + 2*Atilde_LL_02*dDbeta_UL_02 - 2*Atilde_LL_12*Atilde_UL_12*alpha + 2*Atilde_LL_12*dDbeta_UL_12 - 2*Atilde_LL_22*Atilde_UL_22*alpha + Atilde_LL_22*alpha*(Khat + 2*theta) - 0.66666666666666663*Atilde_LL_22*dDbeta_UL_00 - 0.66666666666666663*Atilde_LL_22*dDbeta_UL_11 + 1.3333333333333335*Atilde_LL_22*dDbeta_UL_22 + chi*(-CovDDalphaTF_LL_22 + RTF_LL_22*alpha) + 0.29999999999999999*dKODAtilde_LL_22;

        rhs_fab(i, j, k, Idx::theta) = AdvDbetatheta - 0.5*Atilde_LL_00*Atilde_UU_00*alpha - 0.5*Atilde_LL_01*Atilde_UU_01*alpha - 0.5*Atilde_LL_01*Atilde_UU_10*alpha - 0.5*Atilde_LL_02*Atilde_UU_02*alpha - 0.5*Atilde_LL_02*Atilde_UU_20*alpha - 0.5*Atilde_LL_11*Atilde_UU_11*alpha - 0.5*Atilde_LL_12*Atilde_UU_12*alpha - 0.5*Atilde_LL_12*Atilde_UU_21*alpha - 0.5*Atilde_LL_22*Atilde_UU_22*alpha + 0.5*alpha*(Rsclr - 2*kappa1*theta*(kappa2 + 2) + 0.66666666666666663*std::pow(Khat + 2*theta, 2)) + 0.29999999999999999*dKODtheta;

        rhs_fab(i, j, k, Idx::Gamtilde_U_0) = AdvDbetaGamtilde_U_0 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_000*alpha - 2*Atilde_UU_00*dDalpha_L_0 + 2*Atilde_UU_01*Christoffelgamtilde_ULL_001*alpha - 2*Atilde_UU_01*dDalpha_L_1 + 2*Atilde_UU_02*Christoffelgamtilde_ULL_002*alpha - 2*Atilde_UU_02*dDalpha_L_2 + 2*Atilde_UU_10*Christoffelgamtilde_ULL_001*alpha + 2*Atilde_UU_11*Christoffelgamtilde_ULL_011*alpha + 2*Atilde_UU_12*Christoffelgamtilde_ULL_012*alpha + 2*Atilde_UU_20*Christoffelgamtilde_ULL_002*alpha + 2*Atilde_UU_21*Christoffelgamtilde_ULL_012*alpha + 2*Atilde_UU_22*Christoffelgamtilde_ULL_022*alpha - 0.33333333333333337*ChristoffelDgamtilde_U_0*dDbeta_UL_00 + 0.66666666666666663*ChristoffelDgamtilde_U_0*dDbeta_UL_11 + 0.66666666666666663*ChristoffelDgamtilde_U_0*dDbeta_UL_22 - ChristoffelDgamtilde_U_1*dDbeta_UL_01 - ChristoffelDgamtilde_U_2*dDbeta_UL_02 - 2*alpha*kappa1*(-ChristoffelDgamtilde_U_0 + Gamtilde_U_0) + 2*alpha*(-1.5*Atilde_UU_00*dDchi_L_0/chi - 0.33333333333333331*invgamtilde_UU_00*(2*dDKhat_L_0 + dDtheta_L_0)) + 2*alpha*(-1.5*Atilde_UU_01*dDchi_L_1/chi - 0.33333333333333331*invgamtilde_UU_01*(2*dDKhat_L_1 + dDtheta_L_1)) + 2*alpha*(-1.5*Atilde_UU_02*dDchi_L_2/chi - 0.33333333333333331*invgamtilde_UU_02*(2*dDKhat_L_2 + dDtheta_L_2)) + 1.3333333333333333*dDDbeta_ULL_000*invgamtilde_UU_00 + 2.333333333333333*dDDbeta_ULL_001*invgamtilde_UU_01 + 2.333333333333333*dDDbeta_ULL_002*invgamtilde_UU_02 + dDDbeta_ULL_011*invgamtilde_UU_11 + 2*dDDbeta_ULL_012*invgamtilde_UU_12 + dDDbeta_ULL_022*invgamtilde_UU_22 + 0.33333333333333331*dDDbeta_ULL_101*invgamtilde_UU_00 + 0.33333333333333331*dDDbeta_ULL_111*invgamtilde_UU_01 + 0.33333333333333331*dDDbeta_ULL_112*invgamtilde_UU_02 + 0.33333333333333331*dDDbeta_ULL_202*invgamtilde_UU_00 + 0.33333333333333331*dDDbeta_ULL_212*invgamtilde_UU_01 + 0.33333333333333331*dDDbeta_ULL_222*invgamtilde_UU_02 + 0.29999999999999999*dKODGamtilde_U_0;
        rhs_fab(i, j, k, Idx::Gamtilde_U_1) = AdvDbetaGamtilde_U_1 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_100*alpha + 2*Atilde_UU_01*Christoffelgamtilde_ULL_101*alpha + 2*Atilde_UU_02*Christoffelgamtilde_ULL_102*alpha + 2*Atilde_UU_10*Christoffelgamtilde_ULL_101*alpha - 2*Atilde_UU_10*dDalpha_L_0 + 2*Atilde_UU_11*Christoffelgamtilde_ULL_111*alpha - 2*Atilde_UU_11*dDalpha_L_1 + 2*Atilde_UU_12*Christoffelgamtilde_ULL_112*alpha - 2*Atilde_UU_12*dDalpha_L_2 + 2*Atilde_UU_20*Christoffelgamtilde_ULL_102*alpha + 2*Atilde_UU_21*Christoffelgamtilde_ULL_112*alpha + 2*Atilde_UU_22*Christoffelgamtilde_ULL_122*alpha - ChristoffelDgamtilde_U_0*dDbeta_UL_10 + 0.66666666666666663*ChristoffelDgamtilde_U_1*dDbeta_UL_00 - 0.33333333333333337*ChristoffelDgamtilde_U_1*dDbeta_UL_11 + 0.66666666666666663*ChristoffelDgamtilde_U_1*dDbeta_UL_22 - ChristoffelDgamtilde_U_2*dDbeta_UL_12 - 2*alpha*kappa1*(-ChristoffelDgamtilde_U_1 + Gamtilde_U_1) + 2*alpha*(-1.5*Atilde_UU_10*dDchi_L_0/chi - 0.33333333333333331*invgamtilde_UU_01*(2*dDKhat_L_0 + dDtheta_L_0)) + 2*alpha*(-1.5*Atilde_UU_11*dDchi_L_1/chi - 0.33333333333333331*invgamtilde_UU_11*(2*dDKhat_L_1 + dDtheta_L_1)) + 2*alpha*(-1.5*Atilde_UU_12*dDchi_L_2/chi - 0.33333333333333331*invgamtilde_UU_12*(2*dDKhat_L_2 + dDtheta_L_2)) + 0.33333333333333331*dDDbeta_ULL_000*invgamtilde_UU_01 + 0.33333333333333331*dDDbeta_ULL_001*invgamtilde_UU_11 + 0.33333333333333331*dDDbeta_ULL_002*invgamtilde_UU_12 + dDDbeta_ULL_100*invgamtilde_UU_00 + 2.333333333333333*dDDbeta_ULL_101*invgamtilde_UU_01 + 2*dDDbeta_ULL_102*invgamtilde_UU_02 + 1.3333333333333333*dDDbeta_ULL_111*invgamtilde_UU_11 + 2.333333333333333*dDDbeta_ULL_112*invgamtilde_UU_12 + dDDbeta_ULL_122*invgamtilde_UU_22 + 0.33333333333333331*dDDbeta_ULL_202*invgamtilde_UU_01 + 0.33333333333333331*dDDbeta_ULL_212*invgamtilde_UU_11 + 0.33333333333333331*dDDbeta_ULL_222*invgamtilde_UU_12 + 0.29999999999999999*dKODGamtilde_U_1;
        rhs_fab(i, j, k, Idx::Gamtilde_U_2) = AdvDbetaGamtilde_U_2 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_200*alpha + 2*Atilde_UU_01*Christoffelgamtilde_ULL_201*alpha + 2*Atilde_UU_02*Christoffelgamtilde_ULL_202*alpha + 2*Atilde_UU_10*Christoffelgamtilde_ULL_201*alpha + 2*Atilde_UU_11*Christoffelgamtilde_ULL_211*alpha + 2*Atilde_UU_12*Christoffelgamtilde_ULL_212*alpha + 2*Atilde_UU_20*Christoffelgamtilde_ULL_202*alpha - 2*Atilde_UU_20*dDalpha_L_0 + 2*Atilde_UU_21*Christoffelgamtilde_ULL_212*alpha - 2*Atilde_UU_21*dDalpha_L_1 + 2*Atilde_UU_22*Christoffelgamtilde_ULL_222*alpha - 2*Atilde_UU_22*dDalpha_L_2 - ChristoffelDgamtilde_U_0*dDbeta_UL_20 - ChristoffelDgamtilde_U_1*dDbeta_UL_21 + 0.66666666666666663*ChristoffelDgamtilde_U_2*dDbeta_UL_00 + 0.66666666666666663*ChristoffelDgamtilde_U_2*dDbeta_UL_11 - 0.33333333333333337*ChristoffelDgamtilde_U_2*dDbeta_UL_22 - 2*alpha*kappa1*(-ChristoffelDgamtilde_U_2 + Gamtilde_U_2) + 2*alpha*(-1.5*Atilde_UU_20*dDchi_L_0/chi - 0.33333333333333331*invgamtilde_UU_02*(2*dDKhat_L_0 + dDtheta_L_0)) + 2*alpha*(-1.5*Atilde_UU_21*dDchi_L_1/chi - 0.33333333333333331*invgamtilde_UU_12*(2*dDKhat_L_1 + dDtheta_L_1)) + 2*alpha*(-1.5*Atilde_UU_22*dDchi_L_2/chi - 0.33333333333333331*invgamtilde_UU_22*(2*dDKhat_L_2 + dDtheta_L_2)) + 0.33333333333333331*dDDbeta_ULL_000*invgamtilde_UU_02 + 0.33333333333333331*dDDbeta_ULL_001*invgamtilde_UU_12 + 0.33333333333333331*dDDbeta_ULL_002*invgamtilde_UU_22 + 0.33333333333333331*dDDbeta_ULL_101*invgamtilde_UU_02 + 0.33333333333333331*dDDbeta_ULL_111*invgamtilde_UU_12 + 0.33333333333333331*dDDbeta_ULL_112*invgamtilde_UU_22 + dDDbeta_ULL_200*invgamtilde_UU_00 + 2*dDDbeta_ULL_201*invgamtilde_UU_01 + 2.333333333333333*dDDbeta_ULL_202*invgamtilde_UU_02 + dDDbeta_ULL_211*invgamtilde_UU_11 + 2.333333333333333*dDDbeta_ULL_212*invgamtilde_UU_12 + 1.3333333333333333*dDDbeta_ULL_222*invgamtilde_UU_22 + 0.29999999999999999*dKODGamtilde_U_2;

        amrex::Real mul = 2/alpha;

        amrex::Real mus = std::pow(alpha, -2);

        rhs_fab(i, j, k, Idx::alpha) = AdvDbetaalpha - Khat*std::pow(alpha, 2)*mul + 0.29999999999999999*dKODalpha;

        amrex::Real eta = 0.25;

        rhs_fab(i, j, k, Idx::beta_U_0) = AdvDbetabeta_U_0 + Gamtilde_U_0*std::pow(alpha, 2)*mus - beta_U_0*eta + 0.29999999999999999*dKODbeta_U_0;
        rhs_fab(i, j, k, Idx::beta_U_1) = AdvDbetabeta_U_1 + Gamtilde_U_1*std::pow(alpha, 2)*mus - beta_U_1*eta + 0.29999999999999999*dKODbeta_U_1;
        rhs_fab(i, j, k, Idx::beta_U_2) = AdvDbetabeta_U_2 + Gamtilde_U_2*std::pow(alpha, 2)*mus - beta_U_2*eta + 0.29999999999999999*dKODbeta_U_2;
        
}
#endif