#ifndef ET_INTEGRATION_RHS_K_H
#define ET_INTEGRATION_RHS_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_rhs(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& rhs_fab, 
        amrex::Array4<amrex::Real const> const& state_fab,
        const amrex::Real time,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x_U_0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x_U_1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x_U_2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        
        amrex::Real KOSigma = 3.0;

        amrex::Real kappa1 = 1.0;

        amrex::Real kappa2 = 0;

        amrex::Real kappa3 = 1.0;

        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real phi = state_fab(i, j, k, Idx::phi);

        amrex::Real gamtilde_LL_00 = state_fab(i, j, k, Idx::gamtilde_LL_00);
        amrex::Real gamtilde_LL_01 = state_fab(i, j, k, Idx::gamtilde_LL_01);
        amrex::Real gamtilde_LL_02 = state_fab(i, j, k, Idx::gamtilde_LL_02);
        amrex::Real gamtilde_LL_11 = state_fab(i, j, k, Idx::gamtilde_LL_11);
        amrex::Real gamtilde_LL_12 = state_fab(i, j, k, Idx::gamtilde_LL_12);
        amrex::Real gamtilde_LL_22 = state_fab(i, j, k, Idx::gamtilde_LL_22);

        amrex::Real K = state_fab(i, j, k, Idx::K);

        amrex::Real Atilde_LL_00 = state_fab(i, j, k, Idx::Atilde_LL_00);
        amrex::Real Atilde_LL_01 = state_fab(i, j, k, Idx::Atilde_LL_01);
        amrex::Real Atilde_LL_02 = state_fab(i, j, k, Idx::Atilde_LL_02);
        amrex::Real Atilde_LL_11 = state_fab(i, j, k, Idx::Atilde_LL_11);
        amrex::Real Atilde_LL_12 = state_fab(i, j, k, Idx::Atilde_LL_12);
        amrex::Real Atilde_LL_22 = state_fab(i, j, k, Idx::Atilde_LL_22);

        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real Gamhat_U_0 = state_fab(i, j, k, Idx::Gamhat_U_0);
        amrex::Real Gamhat_U_1 = state_fab(i, j, k, Idx::Gamhat_U_1);
        amrex::Real Gamhat_U_2 = state_fab(i, j, k, Idx::Gamhat_U_2);

        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real beta_U_0 = state_fab(i, j, k, Idx::beta_U_0);
        amrex::Real beta_U_1 = state_fab(i, j, k, Idx::beta_U_1);
        amrex::Real beta_U_2 = state_fab(i, j, k, Idx::beta_U_2);

        amrex::Real B_U_0 = state_fab(i, j, k, Idx::B_U_0);
        amrex::Real B_U_1 = state_fab(i, j, k, Idx::B_U_1);
        amrex::Real B_U_2 = state_fab(i, j, k, Idx::B_U_2);

        amrex::Real dDphi_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::phi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::phi))/dx[0];
        amrex::Real dDphi_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::phi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::phi))/dx[1];
        amrex::Real dDphi_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::phi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::phi))/dx[2];

        amrex::Real dupDphi_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/2.0*state_fab(i + 2, j, k, Idx::phi) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::phi) - 1.0/4.0*state_fab(i - 1, j, k, Idx::phi) - 5.0/6.0*state_fab(i, j, k, Idx::phi))/dx[0];
        amrex::Real dupDphi_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/2.0*state_fab(i, j + 2, k, Idx::phi) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::phi) - 1.0/4.0*state_fab(i, j - 1, k, Idx::phi) - 5.0/6.0*state_fab(i, j, k, Idx::phi))/dx[1];
        amrex::Real dupDphi_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/2.0*state_fab(i, j, k + 2, Idx::phi) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::phi) - 1.0/4.0*state_fab(i, j, k - 1, Idx::phi) - 5.0/6.0*state_fab(i, j, k, Idx::phi))/dx[2];

        amrex::Real ddnDphi_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::phi) - 3.0/2.0*state_fab(i - 1, j, k, Idx::phi) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::phi) - 1.0/12.0*state_fab(i - 3, j, k, Idx::phi) + (5.0/6.0)*state_fab(i, j, k, Idx::phi))/dx[0];
        amrex::Real ddnDphi_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::phi) - 3.0/2.0*state_fab(i, j - 1, k, Idx::phi) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::phi) - 1.0/12.0*state_fab(i, j - 3, k, Idx::phi) + (5.0/6.0)*state_fab(i, j, k, Idx::phi))/dx[1];
        amrex::Real ddnDphi_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::phi) - 3.0/2.0*state_fab(i, j, k - 1, Idx::phi) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::phi) - 1.0/12.0*state_fab(i, j, k - 3, Idx::phi) + (5.0/6.0)*state_fab(i, j, k, Idx::phi))/dx[2];

        amrex::Real dDDphi_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[0], 2);
        amrex::Real dDDphi_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi))/(dx[0]*dx[1]);
        amrex::Real dDDphi_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi))/(dx[0]*dx[2]);
        amrex::Real dDDphi_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[1], 2);
        amrex::Real dDDphi_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi))/(dx[1]*dx[2]);
        amrex::Real dDDphi_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[2], 2);

        amrex::Real dKODphi = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::phi) - 3.0/32.0*state_fab(i, j, k + 2, Idx::phi) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::phi) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::phi) - 3.0/32.0*state_fab(i, j, k - 2, Idx::phi) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::phi) - 5.0/16.0*state_fab(i, j, k, Idx::phi))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::phi) - 3.0/32.0*state_fab(i, j + 2, k, Idx::phi) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::phi) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::phi) - 3.0/32.0*state_fab(i, j - 2, k, Idx::phi) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::phi) - 5.0/16.0*state_fab(i, j, k, Idx::phi))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::phi) - 3.0/32.0*state_fab(i + 2, j, k, Idx::phi) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::phi) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::phi) - 3.0/32.0*state_fab(i - 2, j, k, Idx::phi) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::phi) - 5.0/16.0*state_fab(i, j, k, Idx::phi))/dx[0];

        amrex::Real AdvDbetaphi = beta_U_0*(ddnDphi_L_0*(beta_U_0 < 0) + dupDphi_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDphi_L_1*(beta_U_1 < 0) + dupDphi_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDphi_L_2*(beta_U_2 < 0) + dupDphi_L_2*(beta_U_2 > 0));

        amrex::Real dDgamtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dDgamtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dDgamtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dDgamtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dDgamtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dDgamtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dDgamtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dDgamtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dDgamtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dDgamtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dDgamtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dDgamtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dDgamtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dDgamtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dDgamtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dDgamtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dDgamtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dDgamtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dupDgamtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dupDgamtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dupDgamtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dupDgamtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dupDgamtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dupDgamtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dupDgamtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dupDgamtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dupDgamtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dupDgamtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dupDgamtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dupDgamtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dupDgamtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dupDgamtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dupDgamtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dupDgamtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dupDgamtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dupDgamtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real ddnDgamtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real ddnDgamtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real ddnDgamtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real ddnDgamtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real ddnDgamtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real ddnDgamtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real ddnDgamtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real ddnDgamtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real ddnDgamtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real ddnDgamtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real ddnDgamtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real ddnDgamtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real ddnDgamtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real ddnDgamtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real ddnDgamtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real ddnDgamtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real ddnDgamtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real ddnDgamtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dDDgamtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODgamtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dKODgamtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dKODgamtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dKODgamtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dKODgamtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dKODgamtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];

        amrex::Real AdvDbetagamtilde_LL_00 = beta_U_0*(ddnDgamtilde_LLL_000*(beta_U_0 < 0) + dupDgamtilde_LLL_000*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_001*(beta_U_1 < 0) + dupDgamtilde_LLL_001*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_002*(beta_U_2 < 0) + dupDgamtilde_LLL_002*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_01 = beta_U_0*(ddnDgamtilde_LLL_010*(beta_U_0 < 0) + dupDgamtilde_LLL_010*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_011*(beta_U_1 < 0) + dupDgamtilde_LLL_011*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_012*(beta_U_2 < 0) + dupDgamtilde_LLL_012*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_02 = beta_U_0*(ddnDgamtilde_LLL_020*(beta_U_0 < 0) + dupDgamtilde_LLL_020*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_021*(beta_U_1 < 0) + dupDgamtilde_LLL_021*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_022*(beta_U_2 < 0) + dupDgamtilde_LLL_022*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_11 = beta_U_0*(ddnDgamtilde_LLL_110*(beta_U_0 < 0) + dupDgamtilde_LLL_110*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_111*(beta_U_1 < 0) + dupDgamtilde_LLL_111*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_112*(beta_U_2 < 0) + dupDgamtilde_LLL_112*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_12 = beta_U_0*(ddnDgamtilde_LLL_120*(beta_U_0 < 0) + dupDgamtilde_LLL_120*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_121*(beta_U_1 < 0) + dupDgamtilde_LLL_121*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_122*(beta_U_2 < 0) + dupDgamtilde_LLL_122*(beta_U_2 > 0));
        amrex::Real AdvDbetagamtilde_LL_22 = beta_U_0*(ddnDgamtilde_LLL_220*(beta_U_0 < 0) + dupDgamtilde_LLL_220*(beta_U_0 > 0)) + beta_U_1*(ddnDgamtilde_LLL_221*(beta_U_1 < 0) + dupDgamtilde_LLL_221*(beta_U_1 > 0)) + beta_U_2*(ddnDgamtilde_LLL_222*(beta_U_2 < 0) + dupDgamtilde_LLL_222*(beta_U_2 > 0));

        amrex::Real dDK_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::K) - 1.0/12.0*state_fab(i + 2, j, k, Idx::K) - 2.0/3.0*state_fab(i - 1, j, k, Idx::K) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::K))/dx[0];
        amrex::Real dDK_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::K) - 1.0/12.0*state_fab(i, j + 2, k, Idx::K) - 2.0/3.0*state_fab(i, j - 1, k, Idx::K) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::K))/dx[1];
        amrex::Real dDK_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::K) - 1.0/12.0*state_fab(i, j, k + 2, Idx::K) - 2.0/3.0*state_fab(i, j, k - 1, Idx::K) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::K))/dx[2];

        amrex::Real dupDK_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::K) - 1.0/2.0*state_fab(i + 2, j, k, Idx::K) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::K) - 1.0/4.0*state_fab(i - 1, j, k, Idx::K) - 5.0/6.0*state_fab(i, j, k, Idx::K))/dx[0];
        amrex::Real dupDK_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::K) - 1.0/2.0*state_fab(i, j + 2, k, Idx::K) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::K) - 1.0/4.0*state_fab(i, j - 1, k, Idx::K) - 5.0/6.0*state_fab(i, j, k, Idx::K))/dx[1];
        amrex::Real dupDK_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::K) - 1.0/2.0*state_fab(i, j, k + 2, Idx::K) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::K) - 1.0/4.0*state_fab(i, j, k - 1, Idx::K) - 5.0/6.0*state_fab(i, j, k, Idx::K))/dx[2];

        amrex::Real ddnDK_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::K) - 3.0/2.0*state_fab(i - 1, j, k, Idx::K) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::K) - 1.0/12.0*state_fab(i - 3, j, k, Idx::K) + (5.0/6.0)*state_fab(i, j, k, Idx::K))/dx[0];
        amrex::Real ddnDK_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::K) - 3.0/2.0*state_fab(i, j - 1, k, Idx::K) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::K) - 1.0/12.0*state_fab(i, j - 3, k, Idx::K) + (5.0/6.0)*state_fab(i, j, k, Idx::K))/dx[1];
        amrex::Real ddnDK_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::K) - 3.0/2.0*state_fab(i, j, k - 1, Idx::K) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::K) - 1.0/12.0*state_fab(i, j, k - 3, Idx::K) + (5.0/6.0)*state_fab(i, j, k, Idx::K))/dx[2];

        amrex::Real dDDK_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::K) - 1.0/12.0*state_fab(i + 2, j, k, Idx::K) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::K) - 1.0/12.0*state_fab(i - 2, j, k, Idx::K) - 5.0/2.0*state_fab(i, j, k, Idx::K))/std::pow(dx[0], 2);
        amrex::Real dDDK_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::K) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::K) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::K) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::K) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::K) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::K) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::K) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::K) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::K) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::K) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::K) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::K) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::K) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::K) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::K) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::K))/(dx[0]*dx[1]);
        amrex::Real dDDK_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::K) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::K) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::K) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::K) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::K) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::K) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::K) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::K) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::K) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::K) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::K) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::K) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::K) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::K) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::K) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::K))/(dx[0]*dx[2]);
        amrex::Real dDDK_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::K) - 1.0/12.0*state_fab(i, j + 2, k, Idx::K) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::K) - 1.0/12.0*state_fab(i, j - 2, k, Idx::K) - 5.0/2.0*state_fab(i, j, k, Idx::K))/std::pow(dx[1], 2);
        amrex::Real dDDK_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::K) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::K) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::K) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::K) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::K) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::K) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::K) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::K) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::K) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::K) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::K) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::K) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::K) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::K) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::K) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::K))/(dx[1]*dx[2]);
        amrex::Real dDDK_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::K) - 1.0/12.0*state_fab(i, j, k + 2, Idx::K) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::K) - 1.0/12.0*state_fab(i, j, k - 2, Idx::K) - 5.0/2.0*state_fab(i, j, k, Idx::K))/std::pow(dx[2], 2);

        amrex::Real dKODK = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::K) - 3.0/32.0*state_fab(i, j, k + 2, Idx::K) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::K) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::K) - 3.0/32.0*state_fab(i, j, k - 2, Idx::K) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::K) - 5.0/16.0*state_fab(i, j, k, Idx::K))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::K) - 3.0/32.0*state_fab(i, j + 2, k, Idx::K) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::K) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::K) - 3.0/32.0*state_fab(i, j - 2, k, Idx::K) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::K) - 5.0/16.0*state_fab(i, j, k, Idx::K))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::K) - 3.0/32.0*state_fab(i + 2, j, k, Idx::K) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::K) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::K) - 3.0/32.0*state_fab(i - 2, j, k, Idx::K) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::K) - 5.0/16.0*state_fab(i, j, k, Idx::K))/dx[0];

        amrex::Real AdvDbetaK = beta_U_0*(ddnDK_L_0*(beta_U_0 < 0) + dupDK_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDK_L_1*(beta_U_1 < 0) + dupDK_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDK_L_2*(beta_U_2 < 0) + dupDK_L_2*(beta_U_2 > 0));

        amrex::Real dDAtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dDAtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dDAtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dDAtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dDAtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dDAtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dDAtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dDAtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dDAtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dDAtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dDAtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dDAtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dDAtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dDAtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dDAtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dDAtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dDAtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dDAtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dupDAtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dupDAtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dupDAtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dupDAtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dupDAtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dupDAtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dupDAtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dupDAtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dupDAtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dupDAtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dupDAtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dupDAtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dupDAtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dupDAtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dupDAtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dupDAtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dupDAtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dupDAtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real ddnDAtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real ddnDAtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real ddnDAtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real ddnDAtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real ddnDAtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real ddnDAtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real ddnDAtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real ddnDAtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real ddnDAtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real ddnDAtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real ddnDAtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real ddnDAtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real ddnDAtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real ddnDAtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real ddnDAtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real ddnDAtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real ddnDAtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real ddnDAtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dDDAtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODAtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dKODAtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dKODAtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dKODAtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dKODAtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dKODAtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];

        amrex::Real AdvDbetaAtilde_LL_00 = beta_U_0*(ddnDAtilde_LLL_000*(beta_U_0 < 0) + dupDAtilde_LLL_000*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_001*(beta_U_1 < 0) + dupDAtilde_LLL_001*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_002*(beta_U_2 < 0) + dupDAtilde_LLL_002*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_01 = beta_U_0*(ddnDAtilde_LLL_010*(beta_U_0 < 0) + dupDAtilde_LLL_010*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_011*(beta_U_1 < 0) + dupDAtilde_LLL_011*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_012*(beta_U_2 < 0) + dupDAtilde_LLL_012*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_02 = beta_U_0*(ddnDAtilde_LLL_020*(beta_U_0 < 0) + dupDAtilde_LLL_020*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_021*(beta_U_1 < 0) + dupDAtilde_LLL_021*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_022*(beta_U_2 < 0) + dupDAtilde_LLL_022*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_11 = beta_U_0*(ddnDAtilde_LLL_110*(beta_U_0 < 0) + dupDAtilde_LLL_110*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_111*(beta_U_1 < 0) + dupDAtilde_LLL_111*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_112*(beta_U_2 < 0) + dupDAtilde_LLL_112*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_12 = beta_U_0*(ddnDAtilde_LLL_120*(beta_U_0 < 0) + dupDAtilde_LLL_120*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_121*(beta_U_1 < 0) + dupDAtilde_LLL_121*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_122*(beta_U_2 < 0) + dupDAtilde_LLL_122*(beta_U_2 > 0));
        amrex::Real AdvDbetaAtilde_LL_22 = beta_U_0*(ddnDAtilde_LLL_220*(beta_U_0 < 0) + dupDAtilde_LLL_220*(beta_U_0 > 0)) + beta_U_1*(ddnDAtilde_LLL_221*(beta_U_1 < 0) + dupDAtilde_LLL_221*(beta_U_1 > 0)) + beta_U_2*(ddnDAtilde_LLL_222*(beta_U_2 < 0) + dupDAtilde_LLL_222*(beta_U_2 > 0));

        amrex::Real dDtheta_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dDtheta_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dDtheta_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];

        amrex::Real dupDtheta_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/2.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::theta) - 1.0/4.0*state_fab(i - 1, j, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real dupDtheta_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/2.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::theta) - 1.0/4.0*state_fab(i, j - 1, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real dupDtheta_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/2.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::theta) - 1.0/4.0*state_fab(i, j, k - 1, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real ddnDtheta_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/2.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 3, j, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real ddnDtheta_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/2.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 3, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real ddnDtheta_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/2.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 3, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real dDDtheta_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 2, j, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[0], 2);
        amrex::Real dDDtheta_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::theta) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::theta) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::theta) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::theta) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::theta) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::theta) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::theta) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::theta) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::theta))/(dx[0]*dx[1]);
        amrex::Real dDDtheta_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::theta) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::theta) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::theta) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::theta) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::theta) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::theta) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::theta) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::theta) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::theta))/(dx[0]*dx[2]);
        amrex::Real dDDtheta_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 2, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[1], 2);
        amrex::Real dDDtheta_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::theta) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::theta) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::theta) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::theta) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::theta) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::theta) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::theta) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::theta) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::theta))/(dx[1]*dx[2]);
        amrex::Real dDDtheta_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 2, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[2], 2);

        amrex::Real dKODtheta = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::theta) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k - 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::theta) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j - 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::theta) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i - 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[0];

        amrex::Real AdvDbetatheta = beta_U_0*(ddnDtheta_L_0*(beta_U_0 < 0) + dupDtheta_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDtheta_L_1*(beta_U_1 < 0) + dupDtheta_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDtheta_L_2*(beta_U_2 < 0) + dupDtheta_L_2*(beta_U_2 > 0));

        amrex::Real dDGamhat_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_0))/dx[0];
        amrex::Real dDGamhat_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_0))/dx[1];
        amrex::Real dDGamhat_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_0))/dx[2];
        amrex::Real dDGamhat_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_1))/dx[0];
        amrex::Real dDGamhat_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_1))/dx[1];
        amrex::Real dDGamhat_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_1))/dx[2];
        amrex::Real dDGamhat_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_2))/dx[0];
        amrex::Real dDGamhat_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_2))/dx[1];
        amrex::Real dDGamhat_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_2))/dx[2];

        amrex::Real dupDGamhat_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamhat_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[0];
        amrex::Real dupDGamhat_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamhat_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[1];
        amrex::Real dupDGamhat_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamhat_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamhat_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[2];
        amrex::Real dupDGamhat_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamhat_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[0];
        amrex::Real dupDGamhat_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamhat_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[1];
        amrex::Real dupDGamhat_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamhat_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamhat_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[2];
        amrex::Real dupDGamhat_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamhat_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[0];
        amrex::Real dupDGamhat_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamhat_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[1];
        amrex::Real dupDGamhat_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamhat_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamhat_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[2];

        amrex::Real ddnDGamhat_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamhat_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamhat_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[0];
        amrex::Real ddnDGamhat_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamhat_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamhat_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[1];
        amrex::Real ddnDGamhat_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamhat_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamhat_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[2];
        amrex::Real ddnDGamhat_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamhat_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamhat_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[0];
        amrex::Real ddnDGamhat_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamhat_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamhat_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[1];
        amrex::Real ddnDGamhat_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamhat_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamhat_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[2];
        amrex::Real ddnDGamhat_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamhat_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamhat_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[0];
        amrex::Real ddnDGamhat_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamhat_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamhat_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[1];
        amrex::Real ddnDGamhat_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamhat_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamhat_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[2];

        amrex::Real dDDGamhat_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamhat_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDGamhat_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamhat_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamhat_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDGamhat_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamhat_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamhat_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDGamhat_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamhat_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDGamhat_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamhat_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamhat_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamhat_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamhat_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamhat_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamhat_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamhat_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDGamhat_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamhat_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDGamhat_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamhat_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDGamhat_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamhat_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamhat_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDGamhat_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamhat_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamhat_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDGamhat_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamhat_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDGamhat_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamhat_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamhat_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamhat_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamhat_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamhat_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamhat_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamhat_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDGamhat_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamhat_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDGamhat_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamhat_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamhat_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDGamhat_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamhat_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamhat_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDGamhat_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamhat_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamhat_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDGamhat_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamhat_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamhat_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDGamhat_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamhat_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamhat_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamhat_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamhat_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamhat_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamhat_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamhat_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDGamhat_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamhat_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamhat_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamhat_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODGamhat_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamhat_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamhat_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamhat_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamhat_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_0))/dx[0];
        amrex::Real dKODGamhat_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamhat_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamhat_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamhat_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamhat_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_1))/dx[0];
        amrex::Real dKODGamhat_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamhat_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamhat_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamhat_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamhat_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamhat_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamhat_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamhat_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamhat_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamhat_U_2))/dx[0];

        amrex::Real AdvDbetaGamhat_U_0 = beta_U_0*(ddnDGamhat_UL_00*(beta_U_0 < 0) + dupDGamhat_UL_00*(beta_U_0 > 0)) + beta_U_1*(ddnDGamhat_UL_01*(beta_U_1 < 0) + dupDGamhat_UL_01*(beta_U_1 > 0)) + beta_U_2*(ddnDGamhat_UL_02*(beta_U_2 < 0) + dupDGamhat_UL_02*(beta_U_2 > 0));
        amrex::Real AdvDbetaGamhat_U_1 = beta_U_0*(ddnDGamhat_UL_10*(beta_U_0 < 0) + dupDGamhat_UL_10*(beta_U_0 > 0)) + beta_U_1*(ddnDGamhat_UL_11*(beta_U_1 < 0) + dupDGamhat_UL_11*(beta_U_1 > 0)) + beta_U_2*(ddnDGamhat_UL_12*(beta_U_2 < 0) + dupDGamhat_UL_12*(beta_U_2 > 0));
        amrex::Real AdvDbetaGamhat_U_2 = beta_U_0*(ddnDGamhat_UL_20*(beta_U_0 < 0) + dupDGamhat_UL_20*(beta_U_0 > 0)) + beta_U_1*(ddnDGamhat_UL_21*(beta_U_1 < 0) + dupDGamhat_UL_21*(beta_U_1 > 0)) + beta_U_2*(ddnDGamhat_UL_22*(beta_U_2 < 0) + dupDGamhat_UL_22*(beta_U_2 > 0));

        amrex::Real dDalpha_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
        amrex::Real dDalpha_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
        amrex::Real dDalpha_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];

        amrex::Real dupDalpha_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/2.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real dupDalpha_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/2.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real dupDalpha_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/2.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::alpha) - 1.0/4.0*state_fab(i, j, k - 1, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real ddnDalpha_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/2.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 3, j, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real ddnDalpha_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/2.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 3, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real ddnDalpha_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/2.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 3, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real dDDalpha_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 2, j, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
        amrex::Real dDDalpha_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real dDDalpha_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real dDDalpha_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 2, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
        amrex::Real dDDalpha_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real dDDalpha_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 2, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);

        amrex::Real dKODalpha = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::alpha) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k - 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::alpha) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j - 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::alpha) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i - 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[0];

        amrex::Real AdvDbetaalpha = beta_U_0*(ddnDalpha_L_0*(beta_U_0 < 0) + dupDalpha_L_0*(beta_U_0 > 0)) + beta_U_1*(ddnDalpha_L_1*(beta_U_1 < 0) + dupDalpha_L_1*(beta_U_1 > 0)) + beta_U_2*(ddnDalpha_L_2*(beta_U_2 < 0) + dupDalpha_L_2*(beta_U_2 > 0));

        amrex::Real dDbeta_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dDbeta_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_0))/dx[1];
        amrex::Real dDbeta_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_0))/dx[2];
        amrex::Real dDbeta_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dDbeta_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_1))/dx[1];
        amrex::Real dDbeta_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_1))/dx[2];
        amrex::Real dDbeta_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dDbeta_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_2))/dx[1];
        amrex::Real dDbeta_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_2))/dx[2];

        amrex::Real dupDbeta_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dupDbeta_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real dupDbeta_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real dupDbeta_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dupDbeta_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real dupDbeta_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real dupDbeta_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dupDbeta_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real dupDbeta_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real ddnDbeta_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real ddnDbeta_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real ddnDbeta_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real ddnDbeta_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real ddnDbeta_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real ddnDbeta_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real ddnDbeta_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real ddnDbeta_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real ddnDbeta_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real dDDbeta_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODbeta_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dKODbeta_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dKODbeta_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];

        amrex::Real AdvDbetabeta_U_0 = beta_U_0*(ddnDbeta_UL_00*(beta_U_0 < 0) + dupDbeta_UL_00*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_01*(beta_U_1 < 0) + dupDbeta_UL_01*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_02*(beta_U_2 < 0) + dupDbeta_UL_02*(beta_U_2 > 0));
        amrex::Real AdvDbetabeta_U_1 = beta_U_0*(ddnDbeta_UL_10*(beta_U_0 < 0) + dupDbeta_UL_10*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_11*(beta_U_1 < 0) + dupDbeta_UL_11*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_12*(beta_U_2 < 0) + dupDbeta_UL_12*(beta_U_2 > 0));
        amrex::Real AdvDbetabeta_U_2 = beta_U_0*(ddnDbeta_UL_20*(beta_U_0 < 0) + dupDbeta_UL_20*(beta_U_0 > 0)) + beta_U_1*(ddnDbeta_UL_21*(beta_U_1 < 0) + dupDbeta_UL_21*(beta_U_1 > 0)) + beta_U_2*(ddnDbeta_UL_22*(beta_U_2 < 0) + dupDbeta_UL_22*(beta_U_2 > 0));

        amrex::Real dDB_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::B_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::B_U_0))/dx[0];
        amrex::Real dDB_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::B_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::B_U_0))/dx[1];
        amrex::Real dDB_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::B_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::B_U_0))/dx[2];
        amrex::Real dDB_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::B_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::B_U_1))/dx[0];
        amrex::Real dDB_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::B_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::B_U_1))/dx[1];
        amrex::Real dDB_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::B_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::B_U_1))/dx[2];
        amrex::Real dDB_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::B_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::B_U_2))/dx[0];
        amrex::Real dDB_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::B_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::B_U_2))/dx[1];
        amrex::Real dDB_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::B_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::B_U_2))/dx[2];

        amrex::Real dupDB_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::B_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::B_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::B_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::B_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_0))/dx[0];
        amrex::Real dupDB_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::B_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::B_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::B_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::B_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_0))/dx[1];
        amrex::Real dupDB_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::B_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::B_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::B_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::B_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_0))/dx[2];
        amrex::Real dupDB_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::B_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::B_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::B_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::B_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_1))/dx[0];
        amrex::Real dupDB_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::B_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::B_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::B_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::B_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_1))/dx[1];
        amrex::Real dupDB_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::B_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::B_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::B_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::B_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_1))/dx[2];
        amrex::Real dupDB_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::B_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::B_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::B_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::B_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_2))/dx[0];
        amrex::Real dupDB_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::B_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::B_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::B_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::B_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_2))/dx[1];
        amrex::Real dupDB_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::B_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::B_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::B_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::B_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::B_U_2))/dx[2];

        amrex::Real ddnDB_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::B_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::B_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::B_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::B_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_0))/dx[0];
        amrex::Real ddnDB_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::B_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::B_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::B_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::B_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_0))/dx[1];
        amrex::Real ddnDB_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::B_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::B_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::B_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::B_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_0))/dx[2];
        amrex::Real ddnDB_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::B_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::B_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::B_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::B_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_1))/dx[0];
        amrex::Real ddnDB_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::B_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::B_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::B_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::B_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_1))/dx[1];
        amrex::Real ddnDB_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::B_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::B_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::B_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::B_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_1))/dx[2];
        amrex::Real ddnDB_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::B_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::B_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::B_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::B_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_2))/dx[0];
        amrex::Real ddnDB_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::B_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::B_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::B_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::B_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_2))/dx[1];
        amrex::Real ddnDB_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::B_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::B_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::B_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::B_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::B_U_2))/dx[2];

        amrex::Real dDDB_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::B_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::B_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDB_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::B_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::B_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::B_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::B_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::B_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::B_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::B_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::B_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::B_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::B_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::B_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::B_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::B_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::B_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::B_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::B_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDB_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::B_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::B_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::B_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::B_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::B_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::B_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::B_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::B_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::B_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::B_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::B_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::B_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::B_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::B_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::B_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::B_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDB_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::B_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::B_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDB_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::B_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::B_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::B_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::B_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::B_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::B_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::B_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::B_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::B_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::B_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::B_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::B_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::B_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::B_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::B_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::B_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDB_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::B_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::B_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDB_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::B_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::B_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDB_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::B_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::B_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::B_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::B_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::B_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::B_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::B_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::B_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::B_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::B_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::B_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::B_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::B_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::B_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::B_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::B_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDB_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::B_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::B_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::B_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::B_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::B_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::B_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::B_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::B_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::B_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::B_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::B_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::B_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::B_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::B_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::B_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::B_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDB_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::B_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::B_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDB_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::B_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::B_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::B_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::B_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::B_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::B_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::B_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::B_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::B_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::B_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::B_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::B_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::B_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::B_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::B_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::B_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDB_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::B_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::B_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDB_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::B_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::B_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::B_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::B_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDB_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::B_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::B_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::B_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::B_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::B_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::B_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::B_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::B_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::B_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::B_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::B_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::B_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::B_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::B_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::B_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::B_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDB_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::B_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::B_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::B_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::B_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::B_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::B_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::B_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::B_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::B_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::B_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::B_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::B_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::B_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::B_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::B_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::B_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDB_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::B_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::B_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::B_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::B_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDB_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::B_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::B_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::B_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::B_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::B_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::B_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::B_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::B_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::B_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::B_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::B_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::B_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::B_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::B_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::B_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::B_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDB_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::B_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::B_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::B_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::B_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::B_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODB_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::B_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::B_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::B_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::B_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::B_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::B_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::B_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::B_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::B_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::B_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::B_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::B_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::B_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::B_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::B_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::B_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::B_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::B_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_0))/dx[0];
        amrex::Real dKODB_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::B_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::B_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::B_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::B_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::B_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::B_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::B_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::B_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::B_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::B_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::B_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::B_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::B_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::B_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::B_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::B_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::B_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::B_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_1))/dx[0];
        amrex::Real dKODB_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::B_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::B_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::B_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::B_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::B_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::B_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::B_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::B_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::B_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::B_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::B_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::B_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::B_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::B_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::B_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::B_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::B_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::B_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::B_U_2))/dx[0];

        amrex::Real AdvDbetaB_U_0 = beta_U_0*(ddnDB_UL_00*(beta_U_0 < 0) + dupDB_UL_00*(beta_U_0 > 0)) + beta_U_1*(ddnDB_UL_01*(beta_U_1 < 0) + dupDB_UL_01*(beta_U_1 > 0)) + beta_U_2*(ddnDB_UL_02*(beta_U_2 < 0) + dupDB_UL_02*(beta_U_2 > 0));
        amrex::Real AdvDbetaB_U_1 = beta_U_0*(ddnDB_UL_10*(beta_U_0 < 0) + dupDB_UL_10*(beta_U_0 > 0)) + beta_U_1*(ddnDB_UL_11*(beta_U_1 < 0) + dupDB_UL_11*(beta_U_1 > 0)) + beta_U_2*(ddnDB_UL_12*(beta_U_2 < 0) + dupDB_UL_12*(beta_U_2 > 0));
        amrex::Real AdvDbetaB_U_2 = beta_U_0*(ddnDB_UL_20*(beta_U_0 < 0) + dupDB_UL_20*(beta_U_0 > 0)) + beta_U_1*(ddnDB_UL_21*(beta_U_1 < 0) + dupDB_UL_21*(beta_U_1 > 0)) + beta_U_2*(ddnDB_UL_22*(beta_U_2 < 0) + dupDB_UL_22*(beta_U_2 > 0));

        amrex::Real invgamtilde_UU_00 = (gamtilde_LL_11*gamtilde_LL_22 - std::pow(gamtilde_LL_12, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_01 = (-gamtilde_LL_01*gamtilde_LL_22 + gamtilde_LL_02*gamtilde_LL_12)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_02 = (gamtilde_LL_01*gamtilde_LL_12 - gamtilde_LL_02*gamtilde_LL_11)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_11 = (gamtilde_LL_00*gamtilde_LL_22 - std::pow(gamtilde_LL_02, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_12 = (-gamtilde_LL_00*gamtilde_LL_12 + gamtilde_LL_01*gamtilde_LL_02)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_22 = (gamtilde_LL_00*gamtilde_LL_11 - std::pow(gamtilde_LL_01, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);

        amrex::Real gam_LL_00 = gamtilde_LL_00/std::pow(phi, 2);
        amrex::Real gam_LL_01 = gamtilde_LL_01/std::pow(phi, 2);
        amrex::Real gam_LL_02 = gamtilde_LL_02/std::pow(phi, 2);
        amrex::Real gam_LL_11 = gamtilde_LL_11/std::pow(phi, 2);
        amrex::Real gam_LL_12 = gamtilde_LL_12/std::pow(phi, 2);
        amrex::Real gam_LL_22 = gamtilde_LL_22/std::pow(phi, 2);

        amrex::Real invgam_UU_00 = invgamtilde_UU_00*std::pow(phi, 2);
        amrex::Real invgam_UU_01 = invgamtilde_UU_01*std::pow(phi, 2);
        amrex::Real invgam_UU_02 = invgamtilde_UU_02*std::pow(phi, 2);
        amrex::Real invgam_UU_11 = invgamtilde_UU_11*std::pow(phi, 2);
        amrex::Real invgam_UU_12 = invgamtilde_UU_12*std::pow(phi, 2);
        amrex::Real invgam_UU_22 = invgamtilde_UU_22*std::pow(phi, 2);

        amrex::Real Christoffelgamtilde_LLL_000 = (1.0/2.0)*dDgamtilde_LLL_000;
        amrex::Real Christoffelgamtilde_LLL_001 = (1.0/2.0)*dDgamtilde_LLL_001;
        amrex::Real Christoffelgamtilde_LLL_002 = (1.0/2.0)*dDgamtilde_LLL_002;
        amrex::Real Christoffelgamtilde_LLL_011 = dDgamtilde_LLL_011 - 1.0/2.0*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_012 = (1.0/2.0)*dDgamtilde_LLL_012 + (1.0/2.0)*dDgamtilde_LLL_021 - 1.0/2.0*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_022 = dDgamtilde_LLL_022 - 1.0/2.0*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_100 = -1.0/2.0*dDgamtilde_LLL_001 + dDgamtilde_LLL_010;
        amrex::Real Christoffelgamtilde_LLL_101 = (1.0/2.0)*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_102 = (1.0/2.0)*dDgamtilde_LLL_012 - 1.0/2.0*dDgamtilde_LLL_021 + (1.0/2.0)*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_111 = (1.0/2.0)*dDgamtilde_LLL_111;
        amrex::Real Christoffelgamtilde_LLL_112 = (1.0/2.0)*dDgamtilde_LLL_112;
        amrex::Real Christoffelgamtilde_LLL_122 = dDgamtilde_LLL_122 - 1.0/2.0*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_200 = -1.0/2.0*dDgamtilde_LLL_002 + dDgamtilde_LLL_020;
        amrex::Real Christoffelgamtilde_LLL_201 = -1.0/2.0*dDgamtilde_LLL_012 + (1.0/2.0)*dDgamtilde_LLL_021 + (1.0/2.0)*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_202 = (1.0/2.0)*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_211 = -1.0/2.0*dDgamtilde_LLL_112 + dDgamtilde_LLL_121;
        amrex::Real Christoffelgamtilde_LLL_212 = (1.0/2.0)*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_222 = (1.0/2.0)*dDgamtilde_LLL_222;

        amrex::Real Christoffelgamtilde_ULL_000 = Christoffelgamtilde_LLL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_200*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_001 = Christoffelgamtilde_LLL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_002 = Christoffelgamtilde_LLL_002*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_011 = Christoffelgamtilde_LLL_011*invgamtilde_UU_00 + Christoffelgamtilde_LLL_111*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_012 = Christoffelgamtilde_LLL_012*invgamtilde_UU_00 + Christoffelgamtilde_LLL_112*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_022 = Christoffelgamtilde_LLL_022*invgamtilde_UU_00 + Christoffelgamtilde_LLL_122*invgamtilde_UU_01 + Christoffelgamtilde_LLL_222*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_100 = Christoffelgamtilde_LLL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_100*invgamtilde_UU_11 + Christoffelgamtilde_LLL_200*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_101 = Christoffelgamtilde_LLL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_201*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_102 = Christoffelgamtilde_LLL_002*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*invgamtilde_UU_11 + Christoffelgamtilde_LLL_202*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_111 = Christoffelgamtilde_LLL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_111*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_112 = Christoffelgamtilde_LLL_012*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_122 = Christoffelgamtilde_LLL_022*invgamtilde_UU_01 + Christoffelgamtilde_LLL_122*invgamtilde_UU_11 + Christoffelgamtilde_LLL_222*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_200 = Christoffelgamtilde_LLL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_100*invgamtilde_UU_12 + Christoffelgamtilde_LLL_200*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_201 = Christoffelgamtilde_LLL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_201*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_202 = Christoffelgamtilde_LLL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_211 = Christoffelgamtilde_LLL_011*invgamtilde_UU_02 + Christoffelgamtilde_LLL_111*invgamtilde_UU_12 + Christoffelgamtilde_LLL_211*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_212 = Christoffelgamtilde_LLL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_222 = Christoffelgamtilde_LLL_022*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*invgamtilde_UU_22;

        amrex::Real Gam_ULL_000 = Christoffelgamtilde_ULL_000 + 1.0*dDphi_L_0*gamtilde_LL_00*invgamtilde_UU_00/phi - 2.0*dDphi_L_0/phi + 1.0*dDphi_L_1*gamtilde_LL_00*invgamtilde_UU_01/phi + 1.0*dDphi_L_2*gamtilde_LL_00*invgamtilde_UU_02/phi;
        amrex::Real Gam_ULL_001 = Christoffelgamtilde_ULL_001 + 1.0*dDphi_L_0*gamtilde_LL_01*invgamtilde_UU_00/phi + 1.0*dDphi_L_1*gamtilde_LL_01*invgamtilde_UU_01/phi - 1.0*dDphi_L_1/phi + 1.0*dDphi_L_2*gamtilde_LL_01*invgamtilde_UU_02/phi;
        amrex::Real Gam_ULL_002 = Christoffelgamtilde_ULL_002 + 1.0*dDphi_L_0*gamtilde_LL_02*invgamtilde_UU_00/phi + 1.0*dDphi_L_1*gamtilde_LL_02*invgamtilde_UU_01/phi + 1.0*dDphi_L_2*gamtilde_LL_02*invgamtilde_UU_02/phi - 1.0*dDphi_L_2/phi;
        amrex::Real Gam_ULL_011 = Christoffelgamtilde_ULL_011 + 1.0*dDphi_L_0*gamtilde_LL_11*invgamtilde_UU_00/phi + 1.0*dDphi_L_1*gamtilde_LL_11*invgamtilde_UU_01/phi + 1.0*dDphi_L_2*gamtilde_LL_11*invgamtilde_UU_02/phi;
        amrex::Real Gam_ULL_012 = Christoffelgamtilde_ULL_012 + 1.0*dDphi_L_0*gamtilde_LL_12*invgamtilde_UU_00/phi + 1.0*dDphi_L_1*gamtilde_LL_12*invgamtilde_UU_01/phi + 1.0*dDphi_L_2*gamtilde_LL_12*invgamtilde_UU_02/phi;
        amrex::Real Gam_ULL_022 = Christoffelgamtilde_ULL_022 + 1.0*dDphi_L_0*gamtilde_LL_22*invgamtilde_UU_00/phi + 1.0*dDphi_L_1*gamtilde_LL_22*invgamtilde_UU_01/phi + 1.0*dDphi_L_2*gamtilde_LL_22*invgamtilde_UU_02/phi;
        amrex::Real Gam_ULL_100 = Christoffelgamtilde_ULL_100 + 1.0*dDphi_L_0*gamtilde_LL_00*invgamtilde_UU_01/phi + 1.0*dDphi_L_1*gamtilde_LL_00*invgamtilde_UU_11/phi + 1.0*dDphi_L_2*gamtilde_LL_00*invgamtilde_UU_12/phi;
        amrex::Real Gam_ULL_101 = Christoffelgamtilde_ULL_101 + 1.0*dDphi_L_0*gamtilde_LL_01*invgamtilde_UU_01/phi - 1.0*dDphi_L_0/phi + 1.0*dDphi_L_1*gamtilde_LL_01*invgamtilde_UU_11/phi + 1.0*dDphi_L_2*gamtilde_LL_01*invgamtilde_UU_12/phi;
        amrex::Real Gam_ULL_102 = Christoffelgamtilde_ULL_102 + 1.0*dDphi_L_0*gamtilde_LL_02*invgamtilde_UU_01/phi + 1.0*dDphi_L_1*gamtilde_LL_02*invgamtilde_UU_11/phi + 1.0*dDphi_L_2*gamtilde_LL_02*invgamtilde_UU_12/phi;
        amrex::Real Gam_ULL_111 = Christoffelgamtilde_ULL_111 + 1.0*dDphi_L_0*gamtilde_LL_11*invgamtilde_UU_01/phi + 1.0*dDphi_L_1*gamtilde_LL_11*invgamtilde_UU_11/phi - 2.0*dDphi_L_1/phi + 1.0*dDphi_L_2*gamtilde_LL_11*invgamtilde_UU_12/phi;
        amrex::Real Gam_ULL_112 = Christoffelgamtilde_ULL_112 + 1.0*dDphi_L_0*gamtilde_LL_12*invgamtilde_UU_01/phi + 1.0*dDphi_L_1*gamtilde_LL_12*invgamtilde_UU_11/phi + 1.0*dDphi_L_2*gamtilde_LL_12*invgamtilde_UU_12/phi - 1.0*dDphi_L_2/phi;
        amrex::Real Gam_ULL_122 = Christoffelgamtilde_ULL_122 + 1.0*dDphi_L_0*gamtilde_LL_22*invgamtilde_UU_01/phi + 1.0*dDphi_L_1*gamtilde_LL_22*invgamtilde_UU_11/phi + 1.0*dDphi_L_2*gamtilde_LL_22*invgamtilde_UU_12/phi;
        amrex::Real Gam_ULL_200 = Christoffelgamtilde_ULL_200 + 1.0*dDphi_L_0*gamtilde_LL_00*invgamtilde_UU_02/phi + 1.0*dDphi_L_1*gamtilde_LL_00*invgamtilde_UU_12/phi + 1.0*dDphi_L_2*gamtilde_LL_00*invgamtilde_UU_22/phi;
        amrex::Real Gam_ULL_201 = Christoffelgamtilde_ULL_201 + 1.0*dDphi_L_0*gamtilde_LL_01*invgamtilde_UU_02/phi + 1.0*dDphi_L_1*gamtilde_LL_01*invgamtilde_UU_12/phi + 1.0*dDphi_L_2*gamtilde_LL_01*invgamtilde_UU_22/phi;
        amrex::Real Gam_ULL_202 = Christoffelgamtilde_ULL_202 + 1.0*dDphi_L_0*gamtilde_LL_02*invgamtilde_UU_02/phi - 1.0*dDphi_L_0/phi + 1.0*dDphi_L_1*gamtilde_LL_02*invgamtilde_UU_12/phi + 1.0*dDphi_L_2*gamtilde_LL_02*invgamtilde_UU_22/phi;
        amrex::Real Gam_ULL_211 = Christoffelgamtilde_ULL_211 + 1.0*dDphi_L_0*gamtilde_LL_11*invgamtilde_UU_02/phi + 1.0*dDphi_L_1*gamtilde_LL_11*invgamtilde_UU_12/phi + 1.0*dDphi_L_2*gamtilde_LL_11*invgamtilde_UU_22/phi;
        amrex::Real Gam_ULL_212 = Christoffelgamtilde_ULL_212 + 1.0*dDphi_L_0*gamtilde_LL_12*invgamtilde_UU_02/phi + 1.0*dDphi_L_1*gamtilde_LL_12*invgamtilde_UU_12/phi - 1.0*dDphi_L_1/phi + 1.0*dDphi_L_2*gamtilde_LL_12*invgamtilde_UU_22/phi;
        amrex::Real Gam_ULL_222 = Christoffelgamtilde_ULL_222 + 1.0*dDphi_L_0*gamtilde_LL_22*invgamtilde_UU_02/phi + 1.0*dDphi_L_1*gamtilde_LL_22*invgamtilde_UU_12/phi + 1.0*dDphi_L_2*gamtilde_LL_22*invgamtilde_UU_22/phi - 2.0*dDphi_L_2/phi;

        amrex::Real D_LLL_000 = (1.0/2.0)*dDgamtilde_LLL_000;
        amrex::Real D_LLL_001 = (1.0/2.0)*dDgamtilde_LLL_001;
        amrex::Real D_LLL_002 = (1.0/2.0)*dDgamtilde_LLL_002;
        amrex::Real D_LLL_010 = (1.0/2.0)*dDgamtilde_LLL_010;
        amrex::Real D_LLL_011 = (1.0/2.0)*dDgamtilde_LLL_011;
        amrex::Real D_LLL_012 = (1.0/2.0)*dDgamtilde_LLL_012;
        amrex::Real D_LLL_020 = (1.0/2.0)*dDgamtilde_LLL_020;
        amrex::Real D_LLL_021 = (1.0/2.0)*dDgamtilde_LLL_021;
        amrex::Real D_LLL_022 = (1.0/2.0)*dDgamtilde_LLL_022;
        amrex::Real D_LLL_110 = (1.0/2.0)*dDgamtilde_LLL_110;
        amrex::Real D_LLL_111 = (1.0/2.0)*dDgamtilde_LLL_111;
        amrex::Real D_LLL_112 = (1.0/2.0)*dDgamtilde_LLL_112;
        amrex::Real D_LLL_120 = (1.0/2.0)*dDgamtilde_LLL_120;
        amrex::Real D_LLL_121 = (1.0/2.0)*dDgamtilde_LLL_121;
        amrex::Real D_LLL_122 = (1.0/2.0)*dDgamtilde_LLL_122;
        amrex::Real D_LLL_220 = (1.0/2.0)*dDgamtilde_LLL_220;
        amrex::Real D_LLL_221 = (1.0/2.0)*dDgamtilde_LLL_221;
        amrex::Real D_LLL_222 = (1.0/2.0)*dDgamtilde_LLL_222;

        amrex::Real D_LUU_000 = D_LLL_000*std::pow(invgamtilde_UU_00, 2) + 2*D_LLL_010*invgamtilde_UU_00*invgamtilde_UU_01 + 2*D_LLL_020*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_110*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_120*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_220*std::pow(invgamtilde_UU_02, 2);
        amrex::Real D_LUU_001 = D_LLL_001*std::pow(invgamtilde_UU_00, 2) + 2*D_LLL_011*invgamtilde_UU_00*invgamtilde_UU_01 + 2*D_LLL_021*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_111*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_121*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_221*std::pow(invgamtilde_UU_02, 2);
        amrex::Real D_LUU_002 = D_LLL_002*std::pow(invgamtilde_UU_00, 2) + 2*D_LLL_012*invgamtilde_UU_00*invgamtilde_UU_01 + 2*D_LLL_022*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_112*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_122*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_222*std::pow(invgamtilde_UU_02, 2);
        amrex::Real D_LUU_010 = D_LLL_000*invgamtilde_UU_00*invgamtilde_UU_01 + D_LLL_010*invgamtilde_UU_00*invgamtilde_UU_11 + D_LLL_010*std::pow(invgamtilde_UU_01, 2) + D_LLL_020*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_020*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_110*invgamtilde_UU_01*invgamtilde_UU_11 + D_LLL_120*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_120*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_220*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real D_LUU_011 = D_LLL_001*invgamtilde_UU_00*invgamtilde_UU_01 + D_LLL_011*invgamtilde_UU_00*invgamtilde_UU_11 + D_LLL_011*std::pow(invgamtilde_UU_01, 2) + D_LLL_021*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_021*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_111*invgamtilde_UU_01*invgamtilde_UU_11 + D_LLL_121*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_121*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_221*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real D_LUU_012 = D_LLL_002*invgamtilde_UU_00*invgamtilde_UU_01 + D_LLL_012*invgamtilde_UU_00*invgamtilde_UU_11 + D_LLL_012*std::pow(invgamtilde_UU_01, 2) + D_LLL_022*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_022*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_112*invgamtilde_UU_01*invgamtilde_UU_11 + D_LLL_122*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_122*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_222*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real D_LUU_020 = D_LLL_000*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_010*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_010*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_020*invgamtilde_UU_00*invgamtilde_UU_22 + D_LLL_020*std::pow(invgamtilde_UU_02, 2) + D_LLL_110*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_120*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_120*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_220*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real D_LUU_021 = D_LLL_001*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_011*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_011*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_021*invgamtilde_UU_00*invgamtilde_UU_22 + D_LLL_021*std::pow(invgamtilde_UU_02, 2) + D_LLL_111*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_121*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_121*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_221*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real D_LUU_022 = D_LLL_002*invgamtilde_UU_00*invgamtilde_UU_02 + D_LLL_012*invgamtilde_UU_00*invgamtilde_UU_12 + D_LLL_012*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_022*invgamtilde_UU_00*invgamtilde_UU_22 + D_LLL_022*std::pow(invgamtilde_UU_02, 2) + D_LLL_112*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_122*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_122*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_222*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real D_LUU_110 = D_LLL_000*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_010*invgamtilde_UU_01*invgamtilde_UU_11 + 2*D_LLL_020*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_110*std::pow(invgamtilde_UU_11, 2) + 2*D_LLL_120*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_220*std::pow(invgamtilde_UU_12, 2);
        amrex::Real D_LUU_111 = D_LLL_001*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_011*invgamtilde_UU_01*invgamtilde_UU_11 + 2*D_LLL_021*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_111*std::pow(invgamtilde_UU_11, 2) + 2*D_LLL_121*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_221*std::pow(invgamtilde_UU_12, 2);
        amrex::Real D_LUU_112 = D_LLL_002*std::pow(invgamtilde_UU_01, 2) + 2*D_LLL_012*invgamtilde_UU_01*invgamtilde_UU_11 + 2*D_LLL_022*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_112*std::pow(invgamtilde_UU_11, 2) + 2*D_LLL_122*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_222*std::pow(invgamtilde_UU_12, 2);
        amrex::Real D_LUU_120 = D_LLL_000*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_010*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_010*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_020*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_020*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_110*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_120*invgamtilde_UU_11*invgamtilde_UU_22 + D_LLL_120*std::pow(invgamtilde_UU_12, 2) + D_LLL_220*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real D_LUU_121 = D_LLL_001*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_011*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_011*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_021*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_021*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_111*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_121*invgamtilde_UU_11*invgamtilde_UU_22 + D_LLL_121*std::pow(invgamtilde_UU_12, 2) + D_LLL_221*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real D_LUU_122 = D_LLL_002*invgamtilde_UU_01*invgamtilde_UU_02 + D_LLL_012*invgamtilde_UU_01*invgamtilde_UU_12 + D_LLL_012*invgamtilde_UU_02*invgamtilde_UU_11 + D_LLL_022*invgamtilde_UU_01*invgamtilde_UU_22 + D_LLL_022*invgamtilde_UU_02*invgamtilde_UU_12 + D_LLL_112*invgamtilde_UU_11*invgamtilde_UU_12 + D_LLL_122*invgamtilde_UU_11*invgamtilde_UU_22 + D_LLL_122*std::pow(invgamtilde_UU_12, 2) + D_LLL_222*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real D_LUU_220 = D_LLL_000*std::pow(invgamtilde_UU_02, 2) + 2*D_LLL_010*invgamtilde_UU_02*invgamtilde_UU_12 + 2*D_LLL_020*invgamtilde_UU_02*invgamtilde_UU_22 + D_LLL_110*std::pow(invgamtilde_UU_12, 2) + 2*D_LLL_120*invgamtilde_UU_12*invgamtilde_UU_22 + D_LLL_220*std::pow(invgamtilde_UU_22, 2);
        amrex::Real D_LUU_221 = D_LLL_001*std::pow(invgamtilde_UU_02, 2) + 2*D_LLL_011*invgamtilde_UU_02*invgamtilde_UU_12 + 2*D_LLL_021*invgamtilde_UU_02*invgamtilde_UU_22 + D_LLL_111*std::pow(invgamtilde_UU_12, 2) + 2*D_LLL_121*invgamtilde_UU_12*invgamtilde_UU_22 + D_LLL_221*std::pow(invgamtilde_UU_22, 2);
        amrex::Real D_LUU_222 = D_LLL_002*std::pow(invgamtilde_UU_02, 2) + 2*D_LLL_012*invgamtilde_UU_02*invgamtilde_UU_12 + 2*D_LLL_022*invgamtilde_UU_02*invgamtilde_UU_22 + D_LLL_112*std::pow(invgamtilde_UU_12, 2) + 2*D_LLL_122*invgamtilde_UU_12*invgamtilde_UU_22 + D_LLL_222*std::pow(invgamtilde_UU_22, 2);

        amrex::Real dDD_LLLL_0000 = (1.0/2.0)*dDDgamtilde_LLLL_0000;
        amrex::Real dDD_LLLL_0001 = (1.0/2.0)*dDDgamtilde_LLLL_0001;
        amrex::Real dDD_LLLL_0002 = (1.0/2.0)*dDDgamtilde_LLLL_0002;
        amrex::Real dDD_LLLL_0011 = (1.0/2.0)*dDDgamtilde_LLLL_0011;
        amrex::Real dDD_LLLL_0012 = (1.0/2.0)*dDDgamtilde_LLLL_0012;
        amrex::Real dDD_LLLL_0022 = (1.0/2.0)*dDDgamtilde_LLLL_0022;
        amrex::Real dDD_LLLL_0100 = (1.0/2.0)*dDDgamtilde_LLLL_0100;
        amrex::Real dDD_LLLL_0101 = (1.0/2.0)*dDDgamtilde_LLLL_0101;
        amrex::Real dDD_LLLL_0102 = (1.0/2.0)*dDDgamtilde_LLLL_0102;
        amrex::Real dDD_LLLL_0111 = (1.0/2.0)*dDDgamtilde_LLLL_0111;
        amrex::Real dDD_LLLL_0112 = (1.0/2.0)*dDDgamtilde_LLLL_0112;
        amrex::Real dDD_LLLL_0122 = (1.0/2.0)*dDDgamtilde_LLLL_0122;
        amrex::Real dDD_LLLL_0200 = (1.0/2.0)*dDDgamtilde_LLLL_0200;
        amrex::Real dDD_LLLL_0201 = (1.0/2.0)*dDDgamtilde_LLLL_0201;
        amrex::Real dDD_LLLL_0202 = (1.0/2.0)*dDDgamtilde_LLLL_0202;
        amrex::Real dDD_LLLL_0211 = (1.0/2.0)*dDDgamtilde_LLLL_0211;
        amrex::Real dDD_LLLL_0212 = (1.0/2.0)*dDDgamtilde_LLLL_0212;
        amrex::Real dDD_LLLL_0222 = (1.0/2.0)*dDDgamtilde_LLLL_0222;
        amrex::Real dDD_LLLL_1100 = (1.0/2.0)*dDDgamtilde_LLLL_1100;
        amrex::Real dDD_LLLL_1101 = (1.0/2.0)*dDDgamtilde_LLLL_1101;
        amrex::Real dDD_LLLL_1102 = (1.0/2.0)*dDDgamtilde_LLLL_1102;
        amrex::Real dDD_LLLL_1111 = (1.0/2.0)*dDDgamtilde_LLLL_1111;
        amrex::Real dDD_LLLL_1112 = (1.0/2.0)*dDDgamtilde_LLLL_1112;
        amrex::Real dDD_LLLL_1122 = (1.0/2.0)*dDDgamtilde_LLLL_1122;
        amrex::Real dDD_LLLL_1200 = (1.0/2.0)*dDDgamtilde_LLLL_1200;
        amrex::Real dDD_LLLL_1201 = (1.0/2.0)*dDDgamtilde_LLLL_1201;
        amrex::Real dDD_LLLL_1202 = (1.0/2.0)*dDDgamtilde_LLLL_1202;
        amrex::Real dDD_LLLL_1211 = (1.0/2.0)*dDDgamtilde_LLLL_1211;
        amrex::Real dDD_LLLL_1212 = (1.0/2.0)*dDDgamtilde_LLLL_1212;
        amrex::Real dDD_LLLL_1222 = (1.0/2.0)*dDDgamtilde_LLLL_1222;
        amrex::Real dDD_LLLL_2200 = (1.0/2.0)*dDDgamtilde_LLLL_2200;
        amrex::Real dDD_LLLL_2201 = (1.0/2.0)*dDDgamtilde_LLLL_2201;
        amrex::Real dDD_LLLL_2202 = (1.0/2.0)*dDDgamtilde_LLLL_2202;
        amrex::Real dDD_LLLL_2211 = (1.0/2.0)*dDDgamtilde_LLLL_2211;
        amrex::Real dDD_LLLL_2212 = (1.0/2.0)*dDDgamtilde_LLLL_2212;
        amrex::Real dDD_LLLL_2222 = (1.0/2.0)*dDDgamtilde_LLLL_2222;

        amrex::Real dDgamtilde_UUL_000 = -2*D_LUU_000;
        amrex::Real dDgamtilde_UUL_001 = -2*D_LUU_001;
        amrex::Real dDgamtilde_UUL_002 = -2*D_LUU_002;
        amrex::Real dDgamtilde_UUL_010 = -2*D_LUU_010;
        amrex::Real dDgamtilde_UUL_011 = -2*D_LUU_011;
        amrex::Real dDgamtilde_UUL_012 = -2*D_LUU_012;
        amrex::Real dDgamtilde_UUL_020 = -2*D_LUU_020;
        amrex::Real dDgamtilde_UUL_021 = -2*D_LUU_021;
        amrex::Real dDgamtilde_UUL_022 = -2*D_LUU_022;
        amrex::Real dDgamtilde_UUL_110 = -2*D_LUU_110;
        amrex::Real dDgamtilde_UUL_111 = -2*D_LUU_111;
        amrex::Real dDgamtilde_UUL_112 = -2*D_LUU_112;
        amrex::Real dDgamtilde_UUL_120 = -2*D_LUU_120;
        amrex::Real dDgamtilde_UUL_121 = -2*D_LUU_121;
        amrex::Real dDgamtilde_UUL_122 = -2*D_LUU_122;
        amrex::Real dDgamtilde_UUL_220 = -2*D_LUU_220;
        amrex::Real dDgamtilde_UUL_221 = -2*D_LUU_221;
        amrex::Real dDgamtilde_UUL_222 = -2*D_LUU_222;

        amrex::Real dDGamtilde_ULLL_0000 = -2*D_LLL_000*D_LUU_000 - 2*D_LUU_010*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_020*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0000*invgamtilde_UU_00 + invgamtilde_UU_01*(-dDD_LLLL_0001 + 2*dDD_LLLL_0100) + invgamtilde_UU_02*(-dDD_LLLL_0002 + 2*dDD_LLLL_0200);
        amrex::Real dDGamtilde_ULLL_0001 = -2*D_LLL_000*D_LUU_001 - 2*D_LUU_011*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_021*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0001*invgamtilde_UU_00 + invgamtilde_UU_01*(-dDD_LLLL_0011 + 2*dDD_LLLL_0101) + invgamtilde_UU_02*(-dDD_LLLL_0012 + 2*dDD_LLLL_0201);
        amrex::Real dDGamtilde_ULLL_0002 = -2*D_LLL_000*D_LUU_002 - 2*D_LUU_012*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_022*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0002*invgamtilde_UU_00 + invgamtilde_UU_01*(-dDD_LLLL_0012 + 2*dDD_LLLL_0102) + invgamtilde_UU_02*(-dDD_LLLL_0022 + 2*dDD_LLLL_0202);
        amrex::Real dDGamtilde_ULLL_0010 = -2*D_LLL_001*D_LUU_000 - 2*D_LLL_110*D_LUU_010 - 2*D_LUU_020*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0001*invgamtilde_UU_00 + dDD_LLLL_1100*invgamtilde_UU_01 + invgamtilde_UU_02*(-dDD_LLLL_0102 + dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_0011 = -2*D_LLL_001*D_LUU_001 - 2*D_LLL_110*D_LUU_011 - 2*D_LUU_021*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0011*invgamtilde_UU_00 + dDD_LLLL_1101*invgamtilde_UU_01 + invgamtilde_UU_02*(-dDD_LLLL_0112 + dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_0012 = -2*D_LLL_001*D_LUU_002 - 2*D_LLL_110*D_LUU_012 - 2*D_LUU_022*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_00 + dDD_LLLL_1102*invgamtilde_UU_01 + invgamtilde_UU_02*(-dDD_LLLL_0122 + dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_0020 = -2*D_LLL_002*D_LUU_000 - 2*D_LLL_220*D_LUU_020 - 2*D_LUU_010*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0002*invgamtilde_UU_00 + dDD_LLLL_2200*invgamtilde_UU_02 + invgamtilde_UU_01*(dDD_LLLL_0102 - dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_0021 = -2*D_LLL_002*D_LUU_001 - 2*D_LLL_220*D_LUU_021 - 2*D_LUU_011*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_00 + dDD_LLLL_2201*invgamtilde_UU_02 + invgamtilde_UU_01*(dDD_LLLL_0112 - dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_0022 = -2*D_LLL_002*D_LUU_002 - 2*D_LLL_220*D_LUU_022 - 2*D_LUU_012*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0022*invgamtilde_UU_00 + dDD_LLLL_2202*invgamtilde_UU_02 + invgamtilde_UU_01*(dDD_LLLL_0122 - dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_0110 = -2*D_LLL_111*D_LUU_010 - 2*D_LUU_000*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_020*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1101*invgamtilde_UU_01 + invgamtilde_UU_00*(2*dDD_LLLL_0101 - dDD_LLLL_1100) + invgamtilde_UU_02*(-dDD_LLLL_1102 + 2*dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_0111 = -2*D_LLL_111*D_LUU_011 - 2*D_LUU_001*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_021*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1111*invgamtilde_UU_01 + invgamtilde_UU_00*(2*dDD_LLLL_0111 - dDD_LLLL_1101) + invgamtilde_UU_02*(-dDD_LLLL_1112 + 2*dDD_LLLL_1211);
        amrex::Real dDGamtilde_ULLL_0112 = -2*D_LLL_111*D_LUU_012 - 2*D_LUU_002*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_022*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1112*invgamtilde_UU_01 + invgamtilde_UU_00*(2*dDD_LLLL_0112 - dDD_LLLL_1102) + invgamtilde_UU_02*(-dDD_LLLL_1122 + 2*dDD_LLLL_1212);
        amrex::Real dDGamtilde_ULLL_0120 = -2*D_LLL_112*D_LUU_010 - 2*D_LLL_221*D_LUU_020 - 2*D_LUU_000*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1102*invgamtilde_UU_01 + dDD_LLLL_2201*invgamtilde_UU_02 + invgamtilde_UU_00*(dDD_LLLL_0102 + dDD_LLLL_0201 - dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_0121 = -2*D_LLL_112*D_LUU_011 - 2*D_LLL_221*D_LUU_021 - 2*D_LUU_001*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1112*invgamtilde_UU_01 + dDD_LLLL_2211*invgamtilde_UU_02 + invgamtilde_UU_00*(dDD_LLLL_0112 + dDD_LLLL_0211 - dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_0122 = -2*D_LLL_112*D_LUU_012 - 2*D_LLL_221*D_LUU_022 - 2*D_LUU_002*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1122*invgamtilde_UU_01 + dDD_LLLL_2212*invgamtilde_UU_02 + invgamtilde_UU_00*(dDD_LLLL_0122 + dDD_LLLL_0212 - dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_0220 = -2*D_LLL_222*D_LUU_020 - 2*D_LUU_000*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_010*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2202*invgamtilde_UU_02 + invgamtilde_UU_00*(2*dDD_LLLL_0202 - dDD_LLLL_2200) + invgamtilde_UU_01*(2*dDD_LLLL_1202 - dDD_LLLL_2201);
        amrex::Real dDGamtilde_ULLL_0221 = -2*D_LLL_222*D_LUU_021 - 2*D_LUU_001*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_011*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2212*invgamtilde_UU_02 + invgamtilde_UU_00*(2*dDD_LLLL_0212 - dDD_LLLL_2201) + invgamtilde_UU_01*(2*dDD_LLLL_1212 - dDD_LLLL_2211);
        amrex::Real dDGamtilde_ULLL_0222 = -2*D_LLL_222*D_LUU_022 - 2*D_LUU_002*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_012*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2222*invgamtilde_UU_02 + invgamtilde_UU_00*(2*dDD_LLLL_0222 - dDD_LLLL_2202) + invgamtilde_UU_01*(2*dDD_LLLL_1222 - dDD_LLLL_2212);
        amrex::Real dDGamtilde_ULLL_1000 = -2*D_LLL_000*D_LUU_010 - 2*D_LUU_110*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_120*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0000*invgamtilde_UU_01 + invgamtilde_UU_11*(-dDD_LLLL_0001 + 2*dDD_LLLL_0100) + invgamtilde_UU_12*(-dDD_LLLL_0002 + 2*dDD_LLLL_0200);
        amrex::Real dDGamtilde_ULLL_1001 = -2*D_LLL_000*D_LUU_011 - 2*D_LUU_111*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_121*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0001*invgamtilde_UU_01 + invgamtilde_UU_11*(-dDD_LLLL_0011 + 2*dDD_LLLL_0101) + invgamtilde_UU_12*(-dDD_LLLL_0012 + 2*dDD_LLLL_0201);
        amrex::Real dDGamtilde_ULLL_1002 = -2*D_LLL_000*D_LUU_012 - 2*D_LUU_112*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_122*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0002*invgamtilde_UU_01 + invgamtilde_UU_11*(-dDD_LLLL_0012 + 2*dDD_LLLL_0102) + invgamtilde_UU_12*(-dDD_LLLL_0022 + 2*dDD_LLLL_0202);
        amrex::Real dDGamtilde_ULLL_1010 = -2*D_LLL_001*D_LUU_010 - 2*D_LLL_110*D_LUU_110 - 2*D_LUU_120*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0001*invgamtilde_UU_01 + dDD_LLLL_1100*invgamtilde_UU_11 + invgamtilde_UU_12*(-dDD_LLLL_0102 + dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_1011 = -2*D_LLL_001*D_LUU_011 - 2*D_LLL_110*D_LUU_111 - 2*D_LUU_121*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0011*invgamtilde_UU_01 + dDD_LLLL_1101*invgamtilde_UU_11 + invgamtilde_UU_12*(-dDD_LLLL_0112 + dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_1012 = -2*D_LLL_001*D_LUU_012 - 2*D_LLL_110*D_LUU_112 - 2*D_LUU_122*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_01 + dDD_LLLL_1102*invgamtilde_UU_11 + invgamtilde_UU_12*(-dDD_LLLL_0122 + dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_1020 = -2*D_LLL_002*D_LUU_010 - 2*D_LLL_220*D_LUU_120 - 2*D_LUU_110*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0002*invgamtilde_UU_01 + dDD_LLLL_2200*invgamtilde_UU_12 + invgamtilde_UU_11*(dDD_LLLL_0102 - dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_1021 = -2*D_LLL_002*D_LUU_011 - 2*D_LLL_220*D_LUU_121 - 2*D_LUU_111*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_01 + dDD_LLLL_2201*invgamtilde_UU_12 + invgamtilde_UU_11*(dDD_LLLL_0112 - dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_1022 = -2*D_LLL_002*D_LUU_012 - 2*D_LLL_220*D_LUU_122 - 2*D_LUU_112*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0022*invgamtilde_UU_01 + dDD_LLLL_2202*invgamtilde_UU_12 + invgamtilde_UU_11*(dDD_LLLL_0122 - dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_1110 = -2*D_LLL_111*D_LUU_110 - 2*D_LUU_010*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_120*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1101*invgamtilde_UU_11 + invgamtilde_UU_01*(2*dDD_LLLL_0101 - dDD_LLLL_1100) + invgamtilde_UU_12*(-dDD_LLLL_1102 + 2*dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_1111 = -2*D_LLL_111*D_LUU_111 - 2*D_LUU_011*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_121*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1111*invgamtilde_UU_11 + invgamtilde_UU_01*(2*dDD_LLLL_0111 - dDD_LLLL_1101) + invgamtilde_UU_12*(-dDD_LLLL_1112 + 2*dDD_LLLL_1211);
        amrex::Real dDGamtilde_ULLL_1112 = -2*D_LLL_111*D_LUU_112 - 2*D_LUU_012*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_122*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1112*invgamtilde_UU_11 + invgamtilde_UU_01*(2*dDD_LLLL_0112 - dDD_LLLL_1102) + invgamtilde_UU_12*(-dDD_LLLL_1122 + 2*dDD_LLLL_1212);
        amrex::Real dDGamtilde_ULLL_1120 = -2*D_LLL_112*D_LUU_110 - 2*D_LLL_221*D_LUU_120 - 2*D_LUU_010*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1102*invgamtilde_UU_11 + dDD_LLLL_2201*invgamtilde_UU_12 + invgamtilde_UU_01*(dDD_LLLL_0102 + dDD_LLLL_0201 - dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_1121 = -2*D_LLL_112*D_LUU_111 - 2*D_LLL_221*D_LUU_121 - 2*D_LUU_011*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1112*invgamtilde_UU_11 + dDD_LLLL_2211*invgamtilde_UU_12 + invgamtilde_UU_01*(dDD_LLLL_0112 + dDD_LLLL_0211 - dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_1122 = -2*D_LLL_112*D_LUU_112 - 2*D_LLL_221*D_LUU_122 - 2*D_LUU_012*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1122*invgamtilde_UU_11 + dDD_LLLL_2212*invgamtilde_UU_12 + invgamtilde_UU_01*(dDD_LLLL_0122 + dDD_LLLL_0212 - dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_1220 = -2*D_LLL_222*D_LUU_120 - 2*D_LUU_010*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_110*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2202*invgamtilde_UU_12 + invgamtilde_UU_01*(2*dDD_LLLL_0202 - dDD_LLLL_2200) + invgamtilde_UU_11*(2*dDD_LLLL_1202 - dDD_LLLL_2201);
        amrex::Real dDGamtilde_ULLL_1221 = -2*D_LLL_222*D_LUU_121 - 2*D_LUU_011*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_111*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2212*invgamtilde_UU_12 + invgamtilde_UU_01*(2*dDD_LLLL_0212 - dDD_LLLL_2201) + invgamtilde_UU_11*(2*dDD_LLLL_1212 - dDD_LLLL_2211);
        amrex::Real dDGamtilde_ULLL_1222 = -2*D_LLL_222*D_LUU_122 - 2*D_LUU_012*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_112*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2222*invgamtilde_UU_12 + invgamtilde_UU_01*(2*dDD_LLLL_0222 - dDD_LLLL_2202) + invgamtilde_UU_11*(2*dDD_LLLL_1222 - dDD_LLLL_2212);
        amrex::Real dDGamtilde_ULLL_2000 = -2*D_LLL_000*D_LUU_020 - 2*D_LUU_120*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_220*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0000*invgamtilde_UU_02 + invgamtilde_UU_12*(-dDD_LLLL_0001 + 2*dDD_LLLL_0100) + invgamtilde_UU_22*(-dDD_LLLL_0002 + 2*dDD_LLLL_0200);
        amrex::Real dDGamtilde_ULLL_2001 = -2*D_LLL_000*D_LUU_021 - 2*D_LUU_121*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_221*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0001*invgamtilde_UU_02 + invgamtilde_UU_12*(-dDD_LLLL_0011 + 2*dDD_LLLL_0101) + invgamtilde_UU_22*(-dDD_LLLL_0012 + 2*dDD_LLLL_0201);
        amrex::Real dDGamtilde_ULLL_2002 = -2*D_LLL_000*D_LUU_022 - 2*D_LUU_122*(-D_LLL_001 + 2*D_LLL_010) - 2*D_LUU_222*(-D_LLL_002 + 2*D_LLL_020) + dDD_LLLL_0002*invgamtilde_UU_02 + invgamtilde_UU_12*(-dDD_LLLL_0012 + 2*dDD_LLLL_0102) + invgamtilde_UU_22*(-dDD_LLLL_0022 + 2*dDD_LLLL_0202);
        amrex::Real dDGamtilde_ULLL_2010 = -2*D_LLL_001*D_LUU_020 - 2*D_LLL_110*D_LUU_120 - 2*D_LUU_220*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0001*invgamtilde_UU_02 + dDD_LLLL_1100*invgamtilde_UU_12 + invgamtilde_UU_22*(-dDD_LLLL_0102 + dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_2011 = -2*D_LLL_001*D_LUU_021 - 2*D_LLL_110*D_LUU_121 - 2*D_LUU_221*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0011*invgamtilde_UU_02 + dDD_LLLL_1101*invgamtilde_UU_12 + invgamtilde_UU_22*(-dDD_LLLL_0112 + dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_2012 = -2*D_LLL_001*D_LUU_022 - 2*D_LLL_110*D_LUU_122 - 2*D_LUU_222*(-D_LLL_012 + D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_02 + dDD_LLLL_1102*invgamtilde_UU_12 + invgamtilde_UU_22*(-dDD_LLLL_0122 + dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_2020 = -2*D_LLL_002*D_LUU_020 - 2*D_LLL_220*D_LUU_220 - 2*D_LUU_120*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0002*invgamtilde_UU_02 + dDD_LLLL_2200*invgamtilde_UU_22 + invgamtilde_UU_12*(dDD_LLLL_0102 - dDD_LLLL_0201 + dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_2021 = -2*D_LLL_002*D_LUU_021 - 2*D_LLL_220*D_LUU_221 - 2*D_LUU_121*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0012*invgamtilde_UU_02 + dDD_LLLL_2201*invgamtilde_UU_22 + invgamtilde_UU_12*(dDD_LLLL_0112 - dDD_LLLL_0211 + dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_2022 = -2*D_LLL_002*D_LUU_022 - 2*D_LLL_220*D_LUU_222 - 2*D_LUU_122*(D_LLL_012 - D_LLL_021 + D_LLL_120) + dDD_LLLL_0022*invgamtilde_UU_02 + dDD_LLLL_2202*invgamtilde_UU_22 + invgamtilde_UU_12*(dDD_LLLL_0122 - dDD_LLLL_0212 + dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_2110 = -2*D_LLL_111*D_LUU_120 - 2*D_LUU_020*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_220*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1101*invgamtilde_UU_12 + invgamtilde_UU_02*(2*dDD_LLLL_0101 - dDD_LLLL_1100) + invgamtilde_UU_22*(-dDD_LLLL_1102 + 2*dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_2111 = -2*D_LLL_111*D_LUU_121 - 2*D_LUU_021*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_221*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1111*invgamtilde_UU_12 + invgamtilde_UU_02*(2*dDD_LLLL_0111 - dDD_LLLL_1101) + invgamtilde_UU_22*(-dDD_LLLL_1112 + 2*dDD_LLLL_1211);
        amrex::Real dDGamtilde_ULLL_2112 = -2*D_LLL_111*D_LUU_122 - 2*D_LUU_022*(2*D_LLL_011 - D_LLL_110) - 2*D_LUU_222*(-D_LLL_112 + 2*D_LLL_121) + dDD_LLLL_1112*invgamtilde_UU_12 + invgamtilde_UU_02*(2*dDD_LLLL_0112 - dDD_LLLL_1102) + invgamtilde_UU_22*(-dDD_LLLL_1122 + 2*dDD_LLLL_1212);
        amrex::Real dDGamtilde_ULLL_2120 = -2*D_LLL_112*D_LUU_120 - 2*D_LLL_221*D_LUU_220 - 2*D_LUU_020*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1102*invgamtilde_UU_12 + dDD_LLLL_2201*invgamtilde_UU_22 + invgamtilde_UU_02*(dDD_LLLL_0102 + dDD_LLLL_0201 - dDD_LLLL_1200);
        amrex::Real dDGamtilde_ULLL_2121 = -2*D_LLL_112*D_LUU_121 - 2*D_LLL_221*D_LUU_221 - 2*D_LUU_021*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1112*invgamtilde_UU_12 + dDD_LLLL_2211*invgamtilde_UU_22 + invgamtilde_UU_02*(dDD_LLLL_0112 + dDD_LLLL_0211 - dDD_LLLL_1201);
        amrex::Real dDGamtilde_ULLL_2122 = -2*D_LLL_112*D_LUU_122 - 2*D_LLL_221*D_LUU_222 - 2*D_LUU_022*(D_LLL_012 + D_LLL_021 - D_LLL_120) + dDD_LLLL_1122*invgamtilde_UU_12 + dDD_LLLL_2212*invgamtilde_UU_22 + invgamtilde_UU_02*(dDD_LLLL_0122 + dDD_LLLL_0212 - dDD_LLLL_1202);
        amrex::Real dDGamtilde_ULLL_2220 = -2*D_LLL_222*D_LUU_220 - 2*D_LUU_020*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_120*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2202*invgamtilde_UU_22 + invgamtilde_UU_02*(2*dDD_LLLL_0202 - dDD_LLLL_2200) + invgamtilde_UU_12*(2*dDD_LLLL_1202 - dDD_LLLL_2201);
        amrex::Real dDGamtilde_ULLL_2221 = -2*D_LLL_222*D_LUU_221 - 2*D_LUU_021*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_121*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2212*invgamtilde_UU_22 + invgamtilde_UU_02*(2*dDD_LLLL_0212 - dDD_LLLL_2201) + invgamtilde_UU_12*(2*dDD_LLLL_1212 - dDD_LLLL_2211);
        amrex::Real dDGamtilde_ULLL_2222 = -2*D_LLL_222*D_LUU_222 - 2*D_LUU_022*(2*D_LLL_022 - D_LLL_220) - 2*D_LUU_122*(2*D_LLL_122 - D_LLL_221) + dDD_LLLL_2222*invgamtilde_UU_22 + invgamtilde_UU_02*(2*dDD_LLLL_0222 - dDD_LLLL_2202) + invgamtilde_UU_12*(2*dDD_LLLL_1222 - dDD_LLLL_2212);

        amrex::Real Atilde_UU_00 = Atilde_LL_00*std::pow(invgamtilde_UU_00, 2) + 2*Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_01 + 2*Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_02 + Atilde_LL_11*std::pow(invgamtilde_UU_01, 2) + 2*Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_22*std::pow(invgamtilde_UU_02, 2);
        amrex::Real Atilde_UU_01 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_01 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_11 + Atilde_LL_01*std::pow(invgamtilde_UU_01, 2) + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_11 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_12;
        amrex::Real Atilde_UU_02 = Atilde_LL_00*invgamtilde_UU_00*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_00*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_02*invgamtilde_UU_00*invgamtilde_UU_22 + Atilde_LL_02*std::pow(invgamtilde_UU_02, 2) + Atilde_LL_11*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_12*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_22*invgamtilde_UU_02*invgamtilde_UU_22;
        amrex::Real Atilde_UU_11 = Atilde_LL_00*std::pow(invgamtilde_UU_01, 2) + 2*Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_11 + 2*Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_11*std::pow(invgamtilde_UU_11, 2) + 2*Atilde_LL_12*invgamtilde_UU_11*invgamtilde_UU_12 + Atilde_LL_22*std::pow(invgamtilde_UU_12, 2);
        amrex::Real Atilde_UU_12 = Atilde_LL_00*invgamtilde_UU_01*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_01*invgamtilde_UU_12 + Atilde_LL_01*invgamtilde_UU_02*invgamtilde_UU_11 + Atilde_LL_02*invgamtilde_UU_01*invgamtilde_UU_22 + Atilde_LL_02*invgamtilde_UU_02*invgamtilde_UU_12 + Atilde_LL_11*invgamtilde_UU_11*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_11*invgamtilde_UU_22 + Atilde_LL_12*std::pow(invgamtilde_UU_12, 2) + Atilde_LL_22*invgamtilde_UU_12*invgamtilde_UU_22;
        amrex::Real Atilde_UU_22 = Atilde_LL_00*std::pow(invgamtilde_UU_02, 2) + 2*Atilde_LL_01*invgamtilde_UU_02*invgamtilde_UU_12 + 2*Atilde_LL_02*invgamtilde_UU_02*invgamtilde_UU_22 + Atilde_LL_11*std::pow(invgamtilde_UU_12, 2) + 2*Atilde_LL_12*invgamtilde_UU_12*invgamtilde_UU_22 + Atilde_LL_22*std::pow(invgamtilde_UU_22, 2);

        amrex::Real Atilde_UL_00 = Atilde_LL_00*invgamtilde_UU_00 + Atilde_LL_01*invgamtilde_UU_01 + Atilde_LL_02*invgamtilde_UU_02;
        amrex::Real Atilde_UL_01 = Atilde_LL_01*invgamtilde_UU_00 + Atilde_LL_11*invgamtilde_UU_01 + Atilde_LL_12*invgamtilde_UU_02;
        amrex::Real Atilde_UL_02 = Atilde_LL_02*invgamtilde_UU_00 + Atilde_LL_12*invgamtilde_UU_01 + Atilde_LL_22*invgamtilde_UU_02;
        amrex::Real Atilde_UL_10 = Atilde_LL_00*invgamtilde_UU_01 + Atilde_LL_01*invgamtilde_UU_11 + Atilde_LL_02*invgamtilde_UU_12;
        amrex::Real Atilde_UL_11 = Atilde_LL_01*invgamtilde_UU_01 + Atilde_LL_11*invgamtilde_UU_11 + Atilde_LL_12*invgamtilde_UU_12;
        amrex::Real Atilde_UL_12 = Atilde_LL_02*invgamtilde_UU_01 + Atilde_LL_12*invgamtilde_UU_11 + Atilde_LL_22*invgamtilde_UU_12;
        amrex::Real Atilde_UL_20 = Atilde_LL_00*invgamtilde_UU_02 + Atilde_LL_01*invgamtilde_UU_12 + Atilde_LL_02*invgamtilde_UU_22;
        amrex::Real Atilde_UL_21 = Atilde_LL_01*invgamtilde_UU_02 + Atilde_LL_11*invgamtilde_UU_12 + Atilde_LL_12*invgamtilde_UU_22;
        amrex::Real Atilde_UL_22 = Atilde_LL_02*invgamtilde_UU_02 + Atilde_LL_12*invgamtilde_UU_12 + Atilde_LL_22*invgamtilde_UU_22;

        amrex::Real Gamtilde_U_0 = Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_ULL_022*invgamtilde_UU_22;
        amrex::Real Gamtilde_U_1 = Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_ULL_122*invgamtilde_UU_22;
        amrex::Real Gamtilde_U_2 = Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + 2*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + 2*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_ULL_222*invgamtilde_UU_22;

        amrex::Real dDGamtilde_UL_00 = Christoffelgamtilde_ULL_000*dDgamtilde_UUL_000 + 2*Christoffelgamtilde_ULL_001*dDgamtilde_UUL_010 + 2*Christoffelgamtilde_ULL_002*dDgamtilde_UUL_020 + Christoffelgamtilde_ULL_011*dDgamtilde_UUL_110 + 2*Christoffelgamtilde_ULL_012*dDgamtilde_UUL_120 + Christoffelgamtilde_ULL_022*dDgamtilde_UUL_220 + dDGamtilde_ULLL_0000*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_0010*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_0020*invgamtilde_UU_02 + dDGamtilde_ULLL_0110*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_0120*invgamtilde_UU_12 + dDGamtilde_ULLL_0220*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_01 = Christoffelgamtilde_ULL_000*dDgamtilde_UUL_001 + 2*Christoffelgamtilde_ULL_001*dDgamtilde_UUL_011 + 2*Christoffelgamtilde_ULL_002*dDgamtilde_UUL_021 + Christoffelgamtilde_ULL_011*dDgamtilde_UUL_111 + 2*Christoffelgamtilde_ULL_012*dDgamtilde_UUL_121 + Christoffelgamtilde_ULL_022*dDgamtilde_UUL_221 + dDGamtilde_ULLL_0001*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_0011*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_0021*invgamtilde_UU_02 + dDGamtilde_ULLL_0111*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_0121*invgamtilde_UU_12 + dDGamtilde_ULLL_0221*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_02 = Christoffelgamtilde_ULL_000*dDgamtilde_UUL_002 + 2*Christoffelgamtilde_ULL_001*dDgamtilde_UUL_012 + 2*Christoffelgamtilde_ULL_002*dDgamtilde_UUL_022 + Christoffelgamtilde_ULL_011*dDgamtilde_UUL_112 + 2*Christoffelgamtilde_ULL_012*dDgamtilde_UUL_122 + Christoffelgamtilde_ULL_022*dDgamtilde_UUL_222 + dDGamtilde_ULLL_0002*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_0012*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_0022*invgamtilde_UU_02 + dDGamtilde_ULLL_0112*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_0122*invgamtilde_UU_12 + dDGamtilde_ULLL_0222*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_10 = Christoffelgamtilde_ULL_100*dDgamtilde_UUL_000 + 2*Christoffelgamtilde_ULL_101*dDgamtilde_UUL_010 + 2*Christoffelgamtilde_ULL_102*dDgamtilde_UUL_020 + Christoffelgamtilde_ULL_111*dDgamtilde_UUL_110 + 2*Christoffelgamtilde_ULL_112*dDgamtilde_UUL_120 + Christoffelgamtilde_ULL_122*dDgamtilde_UUL_220 + dDGamtilde_ULLL_1000*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_1010*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_1020*invgamtilde_UU_02 + dDGamtilde_ULLL_1110*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_1120*invgamtilde_UU_12 + dDGamtilde_ULLL_1220*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_11 = Christoffelgamtilde_ULL_100*dDgamtilde_UUL_001 + 2*Christoffelgamtilde_ULL_101*dDgamtilde_UUL_011 + 2*Christoffelgamtilde_ULL_102*dDgamtilde_UUL_021 + Christoffelgamtilde_ULL_111*dDgamtilde_UUL_111 + 2*Christoffelgamtilde_ULL_112*dDgamtilde_UUL_121 + Christoffelgamtilde_ULL_122*dDgamtilde_UUL_221 + dDGamtilde_ULLL_1001*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_1011*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_1021*invgamtilde_UU_02 + dDGamtilde_ULLL_1111*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_1121*invgamtilde_UU_12 + dDGamtilde_ULLL_1221*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_12 = Christoffelgamtilde_ULL_100*dDgamtilde_UUL_002 + 2*Christoffelgamtilde_ULL_101*dDgamtilde_UUL_012 + 2*Christoffelgamtilde_ULL_102*dDgamtilde_UUL_022 + Christoffelgamtilde_ULL_111*dDgamtilde_UUL_112 + 2*Christoffelgamtilde_ULL_112*dDgamtilde_UUL_122 + Christoffelgamtilde_ULL_122*dDgamtilde_UUL_222 + dDGamtilde_ULLL_1002*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_1012*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_1022*invgamtilde_UU_02 + dDGamtilde_ULLL_1112*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_1122*invgamtilde_UU_12 + dDGamtilde_ULLL_1222*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_20 = Christoffelgamtilde_ULL_200*dDgamtilde_UUL_000 + 2*Christoffelgamtilde_ULL_201*dDgamtilde_UUL_010 + 2*Christoffelgamtilde_ULL_202*dDgamtilde_UUL_020 + Christoffelgamtilde_ULL_211*dDgamtilde_UUL_110 + 2*Christoffelgamtilde_ULL_212*dDgamtilde_UUL_120 + Christoffelgamtilde_ULL_222*dDgamtilde_UUL_220 + dDGamtilde_ULLL_2000*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_2010*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_2020*invgamtilde_UU_02 + dDGamtilde_ULLL_2110*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_2120*invgamtilde_UU_12 + dDGamtilde_ULLL_2220*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_21 = Christoffelgamtilde_ULL_200*dDgamtilde_UUL_001 + 2*Christoffelgamtilde_ULL_201*dDgamtilde_UUL_011 + 2*Christoffelgamtilde_ULL_202*dDgamtilde_UUL_021 + Christoffelgamtilde_ULL_211*dDgamtilde_UUL_111 + 2*Christoffelgamtilde_ULL_212*dDgamtilde_UUL_121 + Christoffelgamtilde_ULL_222*dDgamtilde_UUL_221 + dDGamtilde_ULLL_2001*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_2011*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_2021*invgamtilde_UU_02 + dDGamtilde_ULLL_2111*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_2121*invgamtilde_UU_12 + dDGamtilde_ULLL_2221*invgamtilde_UU_22;
        amrex::Real dDGamtilde_UL_22 = Christoffelgamtilde_ULL_200*dDgamtilde_UUL_002 + 2*Christoffelgamtilde_ULL_201*dDgamtilde_UUL_012 + 2*Christoffelgamtilde_ULL_202*dDgamtilde_UUL_022 + Christoffelgamtilde_ULL_211*dDgamtilde_UUL_112 + 2*Christoffelgamtilde_ULL_212*dDgamtilde_UUL_122 + Christoffelgamtilde_ULL_222*dDgamtilde_UUL_222 + dDGamtilde_ULLL_2002*invgamtilde_UU_00 + 2*dDGamtilde_ULLL_2012*invgamtilde_UU_01 + 2*dDGamtilde_ULLL_2022*invgamtilde_UU_02 + dDGamtilde_ULLL_2112*invgamtilde_UU_11 + 2*dDGamtilde_ULLL_2122*invgamtilde_UU_12 + dDGamtilde_ULLL_2222*invgamtilde_UU_22;

        amrex::Real Z_L_0 = (1.0/2.0)*gamtilde_LL_00*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*gamtilde_LL_01*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*gamtilde_LL_02*(Gamhat_U_2 - Gamtilde_U_2);
        amrex::Real Z_L_1 = (1.0/2.0)*gamtilde_LL_01*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*gamtilde_LL_11*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*gamtilde_LL_12*(Gamhat_U_2 - Gamtilde_U_2);
        amrex::Real Z_L_2 = (1.0/2.0)*gamtilde_LL_02*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*gamtilde_LL_12*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*gamtilde_LL_22*(Gamhat_U_2 - Gamtilde_U_2);

        amrex::Real Z_U_0 = (1.0/2.0)*Z_L_0*invgam_UU_00 + (1.0/2.0)*Z_L_1*invgam_UU_01 + (1.0/2.0)*Z_L_2*invgam_UU_02;
        amrex::Real Z_U_1 = (1.0/2.0)*Z_L_0*invgam_UU_01 + (1.0/2.0)*Z_L_1*invgam_UU_11 + (1.0/2.0)*Z_L_2*invgam_UU_12;
        amrex::Real Z_U_2 = (1.0/2.0)*Z_L_0*invgam_UU_02 + (1.0/2.0)*Z_L_1*invgam_UU_12 + (1.0/2.0)*Z_L_2*invgam_UU_22;

        amrex::Real Rtilde_LL_00 = 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_000*Gamtilde_U_0 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_001*Gamtilde_U_1 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_002*Gamtilde_U_2 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 1.0/2.0*dDDgamtilde_LLLL_0000*invgamtilde_UU_00 - dDDgamtilde_LLLL_0001*invgamtilde_UU_01 - dDDgamtilde_LLLL_0002*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_0011*invgamtilde_UU_11 - dDDgamtilde_LLLL_0012*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_0022*invgamtilde_UU_22 + dDGamtilde_UL_00*gamtilde_LL_00 + dDGamtilde_UL_10*gamtilde_LL_01 + dDGamtilde_UL_20*gamtilde_LL_02;
        amrex::Real Rtilde_LL_01 = Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_001*Gamtilde_U_0 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + (1.0/2.0)*Christoffelgamtilde_LLL_011*Gamtilde_U_1 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + (1.0/2.0)*Christoffelgamtilde_LLL_012*Gamtilde_U_2 + (1.0/2.0)*Christoffelgamtilde_LLL_100*Gamtilde_U_0 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_101*Gamtilde_U_1 + (1.0/2.0)*Christoffelgamtilde_LLL_102*Gamtilde_U_2 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 1.0/2.0*dDDgamtilde_LLLL_0100*invgamtilde_UU_00 - dDDgamtilde_LLLL_0101*invgamtilde_UU_01 - dDDgamtilde_LLLL_0102*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_0111*invgamtilde_UU_11 - dDDgamtilde_LLLL_0112*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_0122*invgamtilde_UU_22 + (1.0/2.0)*dDGamtilde_UL_00*gamtilde_LL_01 + (1.0/2.0)*dDGamtilde_UL_01*gamtilde_LL_00 + (1.0/2.0)*dDGamtilde_UL_10*gamtilde_LL_11 + (1.0/2.0)*dDGamtilde_UL_11*gamtilde_LL_01 + (1.0/2.0)*dDGamtilde_UL_20*gamtilde_LL_12 + (1.0/2.0)*dDGamtilde_UL_21*gamtilde_LL_02 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_000) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_100) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_200) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_000) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_100) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_200) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_002) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_000) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_202) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_101 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_201 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_200) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_001) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_201) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_002) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_011 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_001) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_111 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_202) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_211 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_201) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_002) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_202);
        amrex::Real Rtilde_LL_02 = Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_002*Gamtilde_U_0 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_12 + (1.0/2.0)*Christoffelgamtilde_LLL_012*Gamtilde_U_1 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_001*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_002*invgamtilde_UU_22 + (1.0/2.0)*Christoffelgamtilde_LLL_022*Gamtilde_U_2 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_100*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_100*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_102*invgamtilde_UU_22 + (1.0/2.0)*Christoffelgamtilde_LLL_200*Gamtilde_U_0 + (1.0/2.0)*Christoffelgamtilde_LLL_201*Gamtilde_U_1 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200*invgamtilde_UU_00 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_202*Gamtilde_U_2 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_200*invgamtilde_UU_02 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202*invgamtilde_UU_22 - 1.0/2.0*dDDgamtilde_LLLL_0200*invgamtilde_UU_00 - dDDgamtilde_LLLL_0201*invgamtilde_UU_01 - dDDgamtilde_LLLL_0202*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_0211*invgamtilde_UU_11 - dDDgamtilde_LLLL_0212*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_0222*invgamtilde_UU_22 + (1.0/2.0)*dDGamtilde_UL_00*gamtilde_LL_02 + (1.0/2.0)*dDGamtilde_UL_02*gamtilde_LL_00 + (1.0/2.0)*dDGamtilde_UL_10*gamtilde_LL_12 + (1.0/2.0)*dDGamtilde_UL_12*gamtilde_LL_01 + (1.0/2.0)*dDGamtilde_UL_20*gamtilde_LL_22 + (1.0/2.0)*dDGamtilde_UL_22*gamtilde_LL_02 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_000) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_100) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_200) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_000) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_100) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_200) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_000*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_002) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_102) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_000) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_100) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_200) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_001) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_101) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_002) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_001) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_102) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_101) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_002) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_102) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202);
        amrex::Real Rtilde_LL_11 = Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_001*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + Christoffelgamtilde_LLL_011*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_101*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_111*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_112*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*Gamtilde_U_0 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_111*Gamtilde_U_1 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_111*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_LLL_112*Gamtilde_U_2 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 - 1.0/2.0*dDDgamtilde_LLLL_1100*invgamtilde_UU_00 - dDDgamtilde_LLLL_1101*invgamtilde_UU_01 - dDDgamtilde_LLLL_1102*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_1111*invgamtilde_UU_11 - dDDgamtilde_LLLL_1112*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_1122*invgamtilde_UU_22 + dDGamtilde_UL_01*gamtilde_LL_01 + dDGamtilde_UL_11*gamtilde_LL_11 + dDGamtilde_UL_21*gamtilde_LL_12;
        amrex::Real Rtilde_LL_12 = Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_011*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_011*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_012*invgamtilde_UU_22 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_101*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_111*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_112*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_102*Gamtilde_U_0 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_111*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + (1.0/2.0)*Christoffelgamtilde_LLL_112*Gamtilde_U_1 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_101*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_111*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_112*invgamtilde_UU_22 + (1.0/2.0)*Christoffelgamtilde_LLL_122*Gamtilde_U_2 + (1.0/2.0)*Christoffelgamtilde_LLL_201*Gamtilde_U_0 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201*invgamtilde_UU_00 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_211*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212*invgamtilde_UU_02 + (1.0/2.0)*Christoffelgamtilde_LLL_211*Gamtilde_U_1 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + (1.0/2.0)*Christoffelgamtilde_LLL_212*Gamtilde_U_2 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201*invgamtilde_UU_02 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_211*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212*invgamtilde_UU_22 - 1.0/2.0*dDDgamtilde_LLLL_1200*invgamtilde_UU_00 - dDDgamtilde_LLLL_1201*invgamtilde_UU_01 - dDDgamtilde_LLLL_1202*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_1211*invgamtilde_UU_11 - dDDgamtilde_LLLL_1212*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_1222*invgamtilde_UU_22 + (1.0/2.0)*dDGamtilde_UL_01*gamtilde_LL_02 + (1.0/2.0)*dDGamtilde_UL_02*gamtilde_LL_01 + (1.0/2.0)*dDGamtilde_UL_11*gamtilde_LL_12 + (1.0/2.0)*dDGamtilde_UL_12*gamtilde_LL_11 + (1.0/2.0)*dDGamtilde_UL_21*gamtilde_LL_22 + (1.0/2.0)*dDGamtilde_UL_22*gamtilde_LL_12 + invgamtilde_UU_00*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_001) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_101) + invgamtilde_UU_00*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_201) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_011) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_001) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_111) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_211) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_101) + invgamtilde_UU_01*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_201) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_100*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_012) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_112) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_002 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_001) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_101) + invgamtilde_UU_02*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_202 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_201) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_011) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_111) + invgamtilde_UU_11*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_211) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_101*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_012) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_012 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_011) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_111*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_112) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_111) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212) + invgamtilde_UU_12*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_212 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_211) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_022 + Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_012) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_122 + Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_112) + invgamtilde_UU_22*(Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_222 + Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212);
        amrex::Real Rtilde_LL_22 = Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_002*invgamtilde_UU_00 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_012*invgamtilde_UU_01 + Christoffelgamtilde_LLL_002*Christoffelgamtilde_ULL_022*invgamtilde_UU_02 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_002*invgamtilde_UU_01 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_012*invgamtilde_UU_11 + Christoffelgamtilde_LLL_012*Christoffelgamtilde_ULL_022*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + Christoffelgamtilde_LLL_022*Christoffelgamtilde_ULL_022*invgamtilde_UU_22 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_102*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_112*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*Christoffelgamtilde_ULL_122*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_102*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_112*invgamtilde_UU_11 + Christoffelgamtilde_LLL_112*Christoffelgamtilde_ULL_122*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_122*Christoffelgamtilde_ULL_122*invgamtilde_UU_22 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_002*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_012*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_200*Christoffelgamtilde_ULL_022*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_002*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_012*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_022*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_102*invgamtilde_UU_00 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_112*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_201*Christoffelgamtilde_ULL_122*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_002*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_012*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_022*invgamtilde_UU_22 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_202*invgamtilde_UU_00 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_212*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_202*Christoffelgamtilde_ULL_222*invgamtilde_UU_02 + Christoffelgamtilde_LLL_202*Gamtilde_U_0 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_102*invgamtilde_UU_01 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_112*invgamtilde_UU_11 + 2*Christoffelgamtilde_LLL_211*Christoffelgamtilde_ULL_122*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_102*invgamtilde_UU_02 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_112*invgamtilde_UU_12 + 2*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_122*invgamtilde_UU_22 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_202*invgamtilde_UU_01 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_212*invgamtilde_UU_11 + 3*Christoffelgamtilde_LLL_212*Christoffelgamtilde_ULL_222*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*Gamtilde_U_1 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_202*invgamtilde_UU_02 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_212*invgamtilde_UU_12 + 3*Christoffelgamtilde_LLL_222*Christoffelgamtilde_ULL_222*invgamtilde_UU_22 + Christoffelgamtilde_LLL_222*Gamtilde_U_2 - 1.0/2.0*dDDgamtilde_LLLL_2200*invgamtilde_UU_00 - dDDgamtilde_LLLL_2201*invgamtilde_UU_01 - dDDgamtilde_LLLL_2202*invgamtilde_UU_02 - 1.0/2.0*dDDgamtilde_LLLL_2211*invgamtilde_UU_11 - dDDgamtilde_LLLL_2212*invgamtilde_UU_12 - 1.0/2.0*dDDgamtilde_LLLL_2222*invgamtilde_UU_22 + dDGamtilde_UL_02*gamtilde_LL_02 + dDGamtilde_UL_12*gamtilde_LL_12 + dDGamtilde_UL_22*gamtilde_LL_22;

        amrex::Real CovDtildephi_L_0 = dDphi_L_0;
        amrex::Real CovDtildephi_L_1 = dDphi_L_1;
        amrex::Real CovDtildephi_L_2 = dDphi_L_2;

        amrex::Real CovDtildeDtildephi_LL_00 = -Christoffelgamtilde_ULL_000*dDphi_L_0 - Christoffelgamtilde_ULL_100*dDphi_L_1 - Christoffelgamtilde_ULL_200*dDphi_L_2 + dDDphi_LL_00;
        amrex::Real CovDtildeDtildephi_LL_01 = -Christoffelgamtilde_ULL_001*dDphi_L_0 - Christoffelgamtilde_ULL_101*dDphi_L_1 - Christoffelgamtilde_ULL_201*dDphi_L_2 + dDDphi_LL_01;
        amrex::Real CovDtildeDtildephi_LL_02 = -Christoffelgamtilde_ULL_002*dDphi_L_0 - Christoffelgamtilde_ULL_102*dDphi_L_1 - Christoffelgamtilde_ULL_202*dDphi_L_2 + dDDphi_LL_02;
        amrex::Real CovDtildeDtildephi_LL_11 = -Christoffelgamtilde_ULL_011*dDphi_L_0 - Christoffelgamtilde_ULL_111*dDphi_L_1 - Christoffelgamtilde_ULL_211*dDphi_L_2 + dDDphi_LL_11;
        amrex::Real CovDtildeDtildephi_LL_12 = -Christoffelgamtilde_ULL_012*dDphi_L_0 - Christoffelgamtilde_ULL_112*dDphi_L_1 - Christoffelgamtilde_ULL_212*dDphi_L_2 + dDDphi_LL_12;
        amrex::Real CovDtildeDtildephi_LL_22 = -Christoffelgamtilde_ULL_022*dDphi_L_0 - Christoffelgamtilde_ULL_122*dDphi_L_1 - Christoffelgamtilde_ULL_222*dDphi_L_2 + dDDphi_LL_22;

        amrex::Real Rtildephi_LL_00 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_00*invgamtilde_UU_00/phi + 1.0*CovDtildeDtildephi_LL_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_00*invgamtilde_UU_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_00*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_00*invgamtilde_UU_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_00*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_00*invgamtilde_UU_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_00*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_00*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_00*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_00*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_00*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_00*invgamtilde_UU_22/std::pow(phi, 2);
        amrex::Real Rtildephi_LL_01 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_01*invgamtilde_UU_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_01*invgamtilde_UU_01/phi + 1.0*CovDtildeDtildephi_LL_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_01*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_01*invgamtilde_UU_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_01*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_01*invgamtilde_UU_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_01*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_01*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_01*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_01*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_01*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_01*invgamtilde_UU_22/std::pow(phi, 2);
        amrex::Real Rtildephi_LL_02 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_02*invgamtilde_UU_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_02*invgamtilde_UU_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_02*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_02*invgamtilde_UU_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_02*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_02*invgamtilde_UU_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_02*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_02*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_02*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_02*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_02*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_02*invgamtilde_UU_22/std::pow(phi, 2);
        amrex::Real Rtildephi_LL_11 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_11*invgamtilde_UU_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_11*invgamtilde_UU_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_11*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_11*invgamtilde_UU_11/phi + 1.0*CovDtildeDtildephi_LL_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_11*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_11*invgamtilde_UU_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_11*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_11*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_11*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_11*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_11*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_11*invgamtilde_UU_22/std::pow(phi, 2);
        amrex::Real Rtildephi_LL_12 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_12*invgamtilde_UU_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_12*invgamtilde_UU_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_12*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_12*invgamtilde_UU_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_12*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_12*invgamtilde_UU_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_12*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_12*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_12*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_12*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_12*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_12*invgamtilde_UU_22/std::pow(phi, 2);
        amrex::Real Rtildephi_LL_22 = 1.0*CovDtildeDtildephi_LL_00*gamtilde_LL_22*invgamtilde_UU_00/phi + 2.0*CovDtildeDtildephi_LL_01*gamtilde_LL_22*invgamtilde_UU_01/phi + 2.0*CovDtildeDtildephi_LL_02*gamtilde_LL_22*invgamtilde_UU_02/phi + 1.0*CovDtildeDtildephi_LL_11*gamtilde_LL_22*invgamtilde_UU_11/phi + 2.0*CovDtildeDtildephi_LL_12*gamtilde_LL_22*invgamtilde_UU_12/phi + 1.0*CovDtildeDtildephi_LL_22*gamtilde_LL_22*invgamtilde_UU_22/phi + 1.0*CovDtildeDtildephi_LL_22/phi - 2.0*std::pow(CovDtildephi_L_0, 2)*gamtilde_LL_22*invgamtilde_UU_00/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_1*gamtilde_LL_22*invgamtilde_UU_01/std::pow(phi, 2) - 4.0*CovDtildephi_L_0*CovDtildephi_L_2*gamtilde_LL_22*invgamtilde_UU_02/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_1, 2)*gamtilde_LL_22*invgamtilde_UU_11/std::pow(phi, 2) - 4.0*CovDtildephi_L_1*CovDtildephi_L_2*gamtilde_LL_22*invgamtilde_UU_12/std::pow(phi, 2) - 2.0*std::pow(CovDtildephi_L_2, 2)*gamtilde_LL_22*invgamtilde_UU_22/std::pow(phi, 2);

        amrex::Real R_LL_00 = Rtilde_LL_00 + Rtildephi_LL_00;
        amrex::Real R_LL_01 = Rtilde_LL_01 + Rtildephi_LL_01;
        amrex::Real R_LL_02 = Rtilde_LL_02 + Rtildephi_LL_02;
        amrex::Real R_LL_11 = Rtilde_LL_11 + Rtildephi_LL_11;
        amrex::Real R_LL_12 = Rtilde_LL_12 + Rtildephi_LL_12;
        amrex::Real R_LL_22 = Rtilde_LL_22 + Rtildephi_LL_22;

        amrex::Real Rsclr = R_LL_00*invgam_UU_00 + 2*R_LL_01*invgam_UU_01 + 2*R_LL_02*invgam_UU_02 + R_LL_11*invgam_UU_11 + 2*R_LL_12*invgam_UU_12 + R_LL_22*invgam_UU_22;

        amrex::Real RTF_LL_00 = R_LL_00 - 1.0/3.0*Rsclr*gam_LL_00;
        amrex::Real RTF_LL_01 = R_LL_01 - 1.0/3.0*Rsclr*gam_LL_01;
        amrex::Real RTF_LL_02 = R_LL_02 - 1.0/3.0*Rsclr*gam_LL_02;
        amrex::Real RTF_LL_11 = R_LL_11 - 1.0/3.0*Rsclr*gam_LL_11;
        amrex::Real RTF_LL_12 = R_LL_12 - 1.0/3.0*Rsclr*gam_LL_12;
        amrex::Real RTF_LL_22 = R_LL_22 - 1.0/3.0*Rsclr*gam_LL_22;

        rhs_fab(i, j, k, Idx::gamtilde_LL_00) = AdvDbetagamtilde_LL_00 - 2*Atilde_LL_00*alpha + KOSigma*dKODgamtilde_LL_00 + (4.0/3.0)*dDbeta_UL_00*gamtilde_LL_00 + 2*dDbeta_UL_10*gamtilde_LL_01 - 2.0/3.0*dDbeta_UL_11*gamtilde_LL_00 + 2*dDbeta_UL_20*gamtilde_LL_02 - 2.0/3.0*dDbeta_UL_22*gamtilde_LL_00;
        rhs_fab(i, j, k, Idx::gamtilde_LL_01) = AdvDbetagamtilde_LL_01 - 2*Atilde_LL_01*alpha + KOSigma*dKODgamtilde_LL_01 + (1.0/3.0)*dDbeta_UL_00*gamtilde_LL_01 + dDbeta_UL_01*gamtilde_LL_00 + dDbeta_UL_10*gamtilde_LL_11 + (1.0/3.0)*dDbeta_UL_11*gamtilde_LL_01 + dDbeta_UL_20*gamtilde_LL_12 + dDbeta_UL_21*gamtilde_LL_02 - 2.0/3.0*dDbeta_UL_22*gamtilde_LL_01;
        rhs_fab(i, j, k, Idx::gamtilde_LL_02) = AdvDbetagamtilde_LL_02 - 2*Atilde_LL_02*alpha + KOSigma*dKODgamtilde_LL_02 + (1.0/3.0)*dDbeta_UL_00*gamtilde_LL_02 + dDbeta_UL_02*gamtilde_LL_00 + dDbeta_UL_10*gamtilde_LL_12 - 2.0/3.0*dDbeta_UL_11*gamtilde_LL_02 + dDbeta_UL_12*gamtilde_LL_01 + dDbeta_UL_20*gamtilde_LL_22 + (1.0/3.0)*dDbeta_UL_22*gamtilde_LL_02;
        rhs_fab(i, j, k, Idx::gamtilde_LL_11) = AdvDbetagamtilde_LL_11 - 2*Atilde_LL_11*alpha + KOSigma*dKODgamtilde_LL_11 - 2.0/3.0*dDbeta_UL_00*gamtilde_LL_11 + 2*dDbeta_UL_01*gamtilde_LL_01 + (4.0/3.0)*dDbeta_UL_11*gamtilde_LL_11 + 2*dDbeta_UL_21*gamtilde_LL_12 - 2.0/3.0*dDbeta_UL_22*gamtilde_LL_11;
        rhs_fab(i, j, k, Idx::gamtilde_LL_12) = AdvDbetagamtilde_LL_12 - 2*Atilde_LL_12*alpha + KOSigma*dKODgamtilde_LL_12 - 2.0/3.0*dDbeta_UL_00*gamtilde_LL_12 + dDbeta_UL_01*gamtilde_LL_02 + dDbeta_UL_02*gamtilde_LL_01 + (1.0/3.0)*dDbeta_UL_11*gamtilde_LL_12 + dDbeta_UL_12*gamtilde_LL_11 + dDbeta_UL_21*gamtilde_LL_22 + (1.0/3.0)*dDbeta_UL_22*gamtilde_LL_12;
        rhs_fab(i, j, k, Idx::gamtilde_LL_22) = AdvDbetagamtilde_LL_22 - 2*Atilde_LL_22*alpha + KOSigma*dKODgamtilde_LL_22 - 2.0/3.0*dDbeta_UL_00*gamtilde_LL_22 + 2*dDbeta_UL_02*gamtilde_LL_02 - 2.0/3.0*dDbeta_UL_11*gamtilde_LL_22 + 2*dDbeta_UL_12*gamtilde_LL_12 + (4.0/3.0)*dDbeta_UL_22*gamtilde_LL_22;

        amrex::Real CovDDalpha_LL_00 = -Gam_ULL_000*dDalpha_L_0 - Gam_ULL_100*dDalpha_L_1 - Gam_ULL_200*dDalpha_L_2 + dDDalpha_LL_00;
        amrex::Real CovDDalpha_LL_01 = -Gam_ULL_001*dDalpha_L_0 - Gam_ULL_101*dDalpha_L_1 - Gam_ULL_201*dDalpha_L_2 + dDDalpha_LL_01;
        amrex::Real CovDDalpha_LL_02 = -Gam_ULL_002*dDalpha_L_0 - Gam_ULL_102*dDalpha_L_1 - Gam_ULL_202*dDalpha_L_2 + dDDalpha_LL_02;
        amrex::Real CovDDalpha_LL_11 = -Gam_ULL_011*dDalpha_L_0 - Gam_ULL_111*dDalpha_L_1 - Gam_ULL_211*dDalpha_L_2 + dDDalpha_LL_11;
        amrex::Real CovDDalpha_LL_12 = -Gam_ULL_012*dDalpha_L_0 - Gam_ULL_112*dDalpha_L_1 - Gam_ULL_212*dDalpha_L_2 + dDDalpha_LL_12;
        amrex::Real CovDDalpha_LL_22 = -Gam_ULL_022*dDalpha_L_0 - Gam_ULL_122*dDalpha_L_1 - Gam_ULL_222*dDalpha_L_2 + dDDalpha_LL_22;

        amrex::Real CovDDalphaTF_LL_00 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_00*invgam_UU_00 + CovDDalpha_LL_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_00*invgam_UU_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_00*invgam_UU_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_00*invgam_UU_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_00*invgam_UU_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_00*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_01 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_01*invgam_UU_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_01*invgam_UU_01 + CovDDalpha_LL_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_01*invgam_UU_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_01*invgam_UU_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_01*invgam_UU_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_01*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_02 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_02*invgam_UU_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_02*invgam_UU_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_02*invgam_UU_02 + CovDDalpha_LL_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_02*invgam_UU_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_02*invgam_UU_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_02*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_11 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_11*invgam_UU_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_11*invgam_UU_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_11*invgam_UU_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_11*invgam_UU_11 + CovDDalpha_LL_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_11*invgam_UU_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_11*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_12 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_12*invgam_UU_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_12*invgam_UU_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_12*invgam_UU_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_12*invgam_UU_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_12*invgam_UU_12 + CovDDalpha_LL_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_12*invgam_UU_22;
        amrex::Real CovDDalphaTF_LL_22 = -1.0/3.0*CovDDalpha_LL_00*gam_LL_22*invgam_UU_00 - 2.0/3.0*CovDDalpha_LL_01*gam_LL_22*invgam_UU_01 - 2.0/3.0*CovDDalpha_LL_02*gam_LL_22*invgam_UU_02 - 1.0/3.0*CovDDalpha_LL_11*gam_LL_22*invgam_UU_11 - 2.0/3.0*CovDDalpha_LL_12*gam_LL_22*invgam_UU_12 - 1.0/3.0*CovDDalpha_LL_22*gam_LL_22*invgam_UU_22 + CovDDalpha_LL_22;

        amrex::Real Lapalpha = CovDDalpha_LL_00*invgam_UU_00 + 2*CovDDalpha_LL_01*invgam_UU_01 + 2*CovDDalpha_LL_02*invgam_UU_02 + CovDDalpha_LL_11*invgam_UU_11 + 2*CovDDalpha_LL_12*invgam_UU_12 + CovDDalpha_LL_22*invgam_UU_22;

        amrex::Real CovDZ_LL_00 = -Gam_ULL_000*Z_L_0 - Gam_ULL_100*Z_L_1 - Gam_ULL_200*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_000*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_010*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_020*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_00*(dDGamhat_UL_00 - dDGamtilde_UL_00) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_10 - dDGamtilde_UL_10) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_20 - dDGamtilde_UL_20);
        amrex::Real CovDZ_LL_01 = -Gam_ULL_001*Z_L_0 - Gam_ULL_101*Z_L_1 - Gam_ULL_201*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_010*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_110*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_120*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_00 - dDGamtilde_UL_00) + (1.0/2.0)*gamtilde_LL_11*(dDGamhat_UL_10 - dDGamtilde_UL_10) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_20 - dDGamtilde_UL_20);
        amrex::Real CovDZ_LL_02 = -Gam_ULL_002*Z_L_0 - Gam_ULL_102*Z_L_1 - Gam_ULL_202*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_020*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_120*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_220*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_00 - dDGamtilde_UL_00) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_10 - dDGamtilde_UL_10) + (1.0/2.0)*gamtilde_LL_22*(dDGamhat_UL_20 - dDGamtilde_UL_20);
        amrex::Real CovDZ_LL_10 = -Gam_ULL_001*Z_L_0 - Gam_ULL_101*Z_L_1 - Gam_ULL_201*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_001*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_011*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_021*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_00*(dDGamhat_UL_01 - dDGamtilde_UL_01) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_11 - dDGamtilde_UL_11) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_21 - dDGamtilde_UL_21);
        amrex::Real CovDZ_LL_11 = -Gam_ULL_011*Z_L_0 - Gam_ULL_111*Z_L_1 - Gam_ULL_211*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_011*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_111*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_121*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_01 - dDGamtilde_UL_01) + (1.0/2.0)*gamtilde_LL_11*(dDGamhat_UL_11 - dDGamtilde_UL_11) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_21 - dDGamtilde_UL_21);
        amrex::Real CovDZ_LL_12 = -Gam_ULL_012*Z_L_0 - Gam_ULL_112*Z_L_1 - Gam_ULL_212*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_021*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_121*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_221*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_01 - dDGamtilde_UL_01) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_11 - dDGamtilde_UL_11) + (1.0/2.0)*gamtilde_LL_22*(dDGamhat_UL_21 - dDGamtilde_UL_21);
        amrex::Real CovDZ_LL_20 = -Gam_ULL_002*Z_L_0 - Gam_ULL_102*Z_L_1 - Gam_ULL_202*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_002*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_012*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_022*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_00*(dDGamhat_UL_02 - dDGamtilde_UL_02) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_12 - dDGamtilde_UL_12) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_22 - dDGamtilde_UL_22);
        amrex::Real CovDZ_LL_21 = -Gam_ULL_012*Z_L_0 - Gam_ULL_112*Z_L_1 - Gam_ULL_212*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_012*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_112*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_122*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_01*(dDGamhat_UL_02 - dDGamtilde_UL_02) + (1.0/2.0)*gamtilde_LL_11*(dDGamhat_UL_12 - dDGamtilde_UL_12) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_22 - dDGamtilde_UL_22);
        amrex::Real CovDZ_LL_22 = -Gam_ULL_022*Z_L_0 - Gam_ULL_122*Z_L_1 - Gam_ULL_222*Z_L_2 + (1.0/2.0)*dDgamtilde_LLL_022*(Gamhat_U_0 - Gamtilde_U_0) + (1.0/2.0)*dDgamtilde_LLL_122*(Gamhat_U_1 - Gamtilde_U_1) + (1.0/2.0)*dDgamtilde_LLL_222*(Gamhat_U_2 - Gamtilde_U_2) + (1.0/2.0)*gamtilde_LL_02*(dDGamhat_UL_02 - dDGamtilde_UL_02) + (1.0/2.0)*gamtilde_LL_12*(dDGamhat_UL_12 - dDGamtilde_UL_12) + (1.0/2.0)*gamtilde_LL_22*(dDGamhat_UL_22 - dDGamtilde_UL_22);

        amrex::Real divZ = CovDZ_LL_02*invgam_UU_02 + CovDZ_LL_12*invgam_UU_12 + CovDZ_LL_22*invgam_UU_22;

        amrex::Real CovDZTF_LL_00 = CovDZ_LL_00 - 1.0/3.0*divZ*gam_LL_00;
        amrex::Real CovDZTF_LL_01 = CovDZ_LL_01 - 1.0/3.0*divZ*gam_LL_01;
        amrex::Real CovDZTF_LL_02 = CovDZ_LL_02 - 1.0/3.0*divZ*gam_LL_02;
        amrex::Real CovDZTF_LL_10 = CovDZ_LL_10 - 1.0/3.0*divZ*gam_LL_01;
        amrex::Real CovDZTF_LL_11 = CovDZ_LL_11 - 1.0/3.0*divZ*gam_LL_11;
        amrex::Real CovDZTF_LL_12 = CovDZ_LL_12 - 1.0/3.0*divZ*gam_LL_12;
        amrex::Real CovDZTF_LL_20 = CovDZ_LL_20 - 1.0/3.0*divZ*gam_LL_02;
        amrex::Real CovDZTF_LL_21 = CovDZ_LL_21 - 1.0/3.0*divZ*gam_LL_12;
        amrex::Real CovDZTF_LL_22 = CovDZ_LL_22 - 1.0/3.0*divZ*gam_LL_22;

        rhs_fab(i, j, k, Idx::Atilde_LL_00) = AdvDbetaAtilde_LL_00 - 2*Atilde_LL_00*Atilde_UL_00*alpha + Atilde_LL_00*alpha*(K - 2*theta) + (4.0/3.0)*Atilde_LL_00*dDbeta_UL_00 - 2.0/3.0*Atilde_LL_00*dDbeta_UL_11 - 2.0/3.0*Atilde_LL_00*dDbeta_UL_22 - 2*Atilde_LL_01*Atilde_UL_10*alpha + 2*Atilde_LL_01*dDbeta_UL_10 - 2*Atilde_LL_02*Atilde_UL_20*alpha + 2*Atilde_LL_02*dDbeta_UL_20 + KOSigma*dKODAtilde_LL_00 + std::pow(phi, 2)*(-CovDDalphaTF_LL_00 + alpha*(2*CovDZTF_LL_00 + RTF_LL_00));
        rhs_fab(i, j, k, Idx::Atilde_LL_01) = AdvDbetaAtilde_LL_01 - 2*Atilde_LL_00*Atilde_UL_01*alpha + Atilde_LL_00*dDbeta_UL_01 - 2*Atilde_LL_01*Atilde_UL_11*alpha + Atilde_LL_01*alpha*(K - 2*theta) + (1.0/3.0)*Atilde_LL_01*dDbeta_UL_00 + (1.0/3.0)*Atilde_LL_01*dDbeta_UL_11 - 2.0/3.0*Atilde_LL_01*dDbeta_UL_22 - 2*Atilde_LL_02*Atilde_UL_21*alpha + Atilde_LL_02*dDbeta_UL_21 + Atilde_LL_11*dDbeta_UL_10 + Atilde_LL_12*dDbeta_UL_20 + KOSigma*dKODAtilde_LL_01 + std::pow(phi, 2)*(-CovDDalphaTF_LL_01 + alpha*(CovDZTF_LL_01 + CovDZTF_LL_10 + RTF_LL_01));
        rhs_fab(i, j, k, Idx::Atilde_LL_02) = AdvDbetaAtilde_LL_02 - 2*Atilde_LL_00*Atilde_UL_02*alpha + Atilde_LL_00*dDbeta_UL_02 - 2*Atilde_LL_01*Atilde_UL_12*alpha + Atilde_LL_01*dDbeta_UL_12 - 2*Atilde_LL_02*Atilde_UL_22*alpha + Atilde_LL_02*alpha*(K - 2*theta) + (1.0/3.0)*Atilde_LL_02*dDbeta_UL_00 - 2.0/3.0*Atilde_LL_02*dDbeta_UL_11 + (1.0/3.0)*Atilde_LL_02*dDbeta_UL_22 + Atilde_LL_12*dDbeta_UL_10 + Atilde_LL_22*dDbeta_UL_20 + KOSigma*dKODAtilde_LL_02 + std::pow(phi, 2)*(-CovDDalphaTF_LL_02 + alpha*(CovDZTF_LL_02 + CovDZTF_LL_20 + RTF_LL_02));
        rhs_fab(i, j, k, Idx::Atilde_LL_11) = AdvDbetaAtilde_LL_11 - 2*Atilde_LL_01*Atilde_UL_01*alpha + 2*Atilde_LL_01*dDbeta_UL_01 - 2*Atilde_LL_11*Atilde_UL_11*alpha + Atilde_LL_11*alpha*(K - 2*theta) - 2.0/3.0*Atilde_LL_11*dDbeta_UL_00 + (4.0/3.0)*Atilde_LL_11*dDbeta_UL_11 - 2.0/3.0*Atilde_LL_11*dDbeta_UL_22 - 2*Atilde_LL_12*Atilde_UL_21*alpha + 2*Atilde_LL_12*dDbeta_UL_21 + KOSigma*dKODAtilde_LL_11 + std::pow(phi, 2)*(-CovDDalphaTF_LL_11 + alpha*(2*CovDZTF_LL_11 + RTF_LL_11));
        rhs_fab(i, j, k, Idx::Atilde_LL_12) = AdvDbetaAtilde_LL_12 - 2*Atilde_LL_01*Atilde_UL_02*alpha + Atilde_LL_01*dDbeta_UL_02 + Atilde_LL_02*dDbeta_UL_01 - 2*Atilde_LL_11*Atilde_UL_12*alpha + Atilde_LL_11*dDbeta_UL_12 - 2*Atilde_LL_12*Atilde_UL_22*alpha + Atilde_LL_12*alpha*(K - 2*theta) - 2.0/3.0*Atilde_LL_12*dDbeta_UL_00 + (1.0/3.0)*Atilde_LL_12*dDbeta_UL_11 + (1.0/3.0)*Atilde_LL_12*dDbeta_UL_22 + Atilde_LL_22*dDbeta_UL_21 + KOSigma*dKODAtilde_LL_12 + std::pow(phi, 2)*(-CovDDalphaTF_LL_12 + alpha*(CovDZTF_LL_12 + CovDZTF_LL_21 + RTF_LL_12));
        rhs_fab(i, j, k, Idx::Atilde_LL_22) = AdvDbetaAtilde_LL_22 - 2*Atilde_LL_02*Atilde_UL_02*alpha + 2*Atilde_LL_02*dDbeta_UL_02 - 2*Atilde_LL_12*Atilde_UL_12*alpha + 2*Atilde_LL_12*dDbeta_UL_12 - 2*Atilde_LL_22*Atilde_UL_22*alpha + Atilde_LL_22*alpha*(K - 2*theta) - 2.0/3.0*Atilde_LL_22*dDbeta_UL_00 - 2.0/3.0*Atilde_LL_22*dDbeta_UL_11 + (4.0/3.0)*Atilde_LL_22*dDbeta_UL_22 + KOSigma*dKODAtilde_LL_22 + std::pow(phi, 2)*(-CovDDalphaTF_LL_22 + alpha*(2*CovDZTF_LL_22 + RTF_LL_22));

        rhs_fab(i, j, k, Idx::phi) = AdvDbetaphi + (1.0/3.0)*K*alpha*phi + KOSigma*dKODphi - 1.0/3.0*dDbeta_UL_00*phi - 1.0/3.0*dDbeta_UL_11*phi - 1.0/3.0*dDbeta_UL_22*phi;

        rhs_fab(i, j, k, Idx::K) = AdvDbetaK + KOSigma*dKODK - Lapalpha - 3*alpha*kappa1*theta*(kappa2 + 1.0) + alpha*(std::pow(K, 2) - 2*K*theta + Rsclr + 2*divZ);

        rhs_fab(i, j, k, Idx::theta) = AdvDbetatheta - 1.0/2.0*Atilde_LL_00*Atilde_UU_00*alpha - Atilde_LL_01*Atilde_UU_01*alpha - Atilde_LL_02*Atilde_UU_02*alpha - 1.0/2.0*Atilde_LL_11*Atilde_UU_11*alpha - Atilde_LL_12*Atilde_UU_12*alpha - 1.0/2.0*Atilde_LL_22*Atilde_UU_22*alpha + KOSigma*dKODtheta - Z_U_0*dDalpha_L_0 - Z_U_1*dDalpha_L_1 - Z_U_2*dDalpha_L_2 - alpha*kappa1*theta*(kappa2 + 2.0) + (1.0/2.0)*alpha*((2.0/3.0)*std::pow(K, 2) - 2*K*theta + Rsclr + 2*divZ);

        rhs_fab(i, j, k, Idx::Gamhat_U_0) = AdvDbetaGamhat_U_0 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_000*alpha - 2*Atilde_UU_00*dDalpha_L_0 + 4*Atilde_UU_01*Christoffelgamtilde_ULL_001*alpha - 2*Atilde_UU_01*dDalpha_L_1 + 4*Atilde_UU_02*Christoffelgamtilde_ULL_002*alpha - 2*Atilde_UU_02*dDalpha_L_2 + 2*Atilde_UU_11*Christoffelgamtilde_ULL_011*alpha + 4*Atilde_UU_12*Christoffelgamtilde_ULL_012*alpha + 2*Atilde_UU_22*Christoffelgamtilde_ULL_022*alpha - 1.0/3.0*Gamtilde_U_0*dDbeta_UL_00 - Gamtilde_U_0*dDbeta_UL_01 - Gamtilde_U_0*dDbeta_UL_02 + (2.0/3.0)*Gamtilde_U_0*dDbeta_UL_11 + (2.0/3.0)*Gamtilde_U_0*dDbeta_UL_22 + KOSigma*dKODGamhat_U_0 - 2*Z_L_0*alpha*invgamtilde_UU_00*kappa1 - 2.0/3.0*Z_L_0*dDbeta_UL_00*invgamtilde_UU_00*kappa3 - 2*Z_L_1*alpha*invgamtilde_UU_01*kappa1 - 2.0/3.0*Z_L_1*dDbeta_UL_00*invgamtilde_UU_01*kappa3 - 2*Z_L_2*alpha*invgamtilde_UU_02*kappa1 - 2.0/3.0*Z_L_2*dDbeta_UL_00*invgamtilde_UU_02*kappa3 + 2*alpha*(-3.0*Atilde_UU_00*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_00) + 2*alpha*(-3.0*Atilde_UU_01*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_01) + 2*alpha*(-3.0*Atilde_UU_02*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_02) + (4.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_00 + (7.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_01 + (7.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_02 + dDDbeta_ULL_011*invgamtilde_UU_11 + 2*dDDbeta_ULL_012*invgamtilde_UU_12 + dDDbeta_ULL_022*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_00 + (1.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_00 + (1.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_02 + 2*invgamtilde_UU_00*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_01*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_02*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*(-Z_L_0*dDbeta_UL_01*invgamtilde_UU_01 + (2.0/3.0)*Z_L_0*dDbeta_UL_11*invgamtilde_UU_00) + 2*kappa3*(-Z_L_0*dDbeta_UL_02*invgamtilde_UU_02 + (2.0/3.0)*Z_L_0*dDbeta_UL_22*invgamtilde_UU_00) + 2*kappa3*(-Z_L_1*dDbeta_UL_01*invgamtilde_UU_11 + (2.0/3.0)*Z_L_1*dDbeta_UL_11*invgamtilde_UU_01) + 2*kappa3*(-Z_L_1*dDbeta_UL_02*invgamtilde_UU_12 + (2.0/3.0)*Z_L_1*dDbeta_UL_22*invgamtilde_UU_01) + 2*kappa3*(-Z_L_2*dDbeta_UL_01*invgamtilde_UU_12 + (2.0/3.0)*Z_L_2*dDbeta_UL_11*invgamtilde_UU_02) + 2*kappa3*(-Z_L_2*dDbeta_UL_02*invgamtilde_UU_22 + (2.0/3.0)*Z_L_2*dDbeta_UL_22*invgamtilde_UU_02);
        rhs_fab(i, j, k, Idx::Gamhat_U_1) = AdvDbetaGamhat_U_1 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_100*alpha + 4*Atilde_UU_01*Christoffelgamtilde_ULL_101*alpha - 2*Atilde_UU_01*dDalpha_L_0 + 4*Atilde_UU_02*Christoffelgamtilde_ULL_102*alpha + 2*Atilde_UU_11*Christoffelgamtilde_ULL_111*alpha - 2*Atilde_UU_11*dDalpha_L_1 + 4*Atilde_UU_12*Christoffelgamtilde_ULL_112*alpha - 2*Atilde_UU_12*dDalpha_L_2 + 2*Atilde_UU_22*Christoffelgamtilde_ULL_122*alpha + (2.0/3.0)*Gamtilde_U_1*dDbeta_UL_00 - Gamtilde_U_1*dDbeta_UL_10 - 1.0/3.0*Gamtilde_U_1*dDbeta_UL_11 - Gamtilde_U_1*dDbeta_UL_12 + (2.0/3.0)*Gamtilde_U_1*dDbeta_UL_22 + KOSigma*dKODGamhat_U_1 - 2*Z_L_0*alpha*invgamtilde_UU_01*kappa1 - 2.0/3.0*Z_L_0*dDbeta_UL_11*invgamtilde_UU_01*kappa3 - 2*Z_L_1*alpha*invgamtilde_UU_11*kappa1 - 2.0/3.0*Z_L_1*dDbeta_UL_11*invgamtilde_UU_11*kappa3 - 2*Z_L_2*alpha*invgamtilde_UU_12*kappa1 - 2.0/3.0*Z_L_2*dDbeta_UL_11*invgamtilde_UU_12*kappa3 + 2*alpha*(-3.0*Atilde_UU_01*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_01) + 2*alpha*(-3.0*Atilde_UU_11*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_11) + 2*alpha*(-3.0*Atilde_UU_12*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_12) + (1.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_11 + (1.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_12 + dDDbeta_ULL_100*invgamtilde_UU_00 + (7.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_01 + 2*dDDbeta_ULL_102*invgamtilde_UU_02 + (4.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_11 + (7.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_12 + dDDbeta_ULL_122*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_11 + (1.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_12 + 2*invgamtilde_UU_01*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_11*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_12*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_00*invgamtilde_UU_01 - Z_L_0*dDbeta_UL_10*invgamtilde_UU_00) + 2*kappa3*(-Z_L_0*dDbeta_UL_12*invgamtilde_UU_02 + (2.0/3.0)*Z_L_0*dDbeta_UL_22*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_00*invgamtilde_UU_11 - Z_L_1*dDbeta_UL_10*invgamtilde_UU_01) + 2*kappa3*(-Z_L_1*dDbeta_UL_12*invgamtilde_UU_12 + (2.0/3.0)*Z_L_1*dDbeta_UL_22*invgamtilde_UU_11) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_00*invgamtilde_UU_12 - Z_L_2*dDbeta_UL_10*invgamtilde_UU_02) + 2*kappa3*(-Z_L_2*dDbeta_UL_12*invgamtilde_UU_22 + (2.0/3.0)*Z_L_2*dDbeta_UL_22*invgamtilde_UU_12);
        rhs_fab(i, j, k, Idx::Gamhat_U_2) = AdvDbetaGamhat_U_2 + 2*Atilde_UU_00*Christoffelgamtilde_ULL_200*alpha + 4*Atilde_UU_01*Christoffelgamtilde_ULL_201*alpha + 4*Atilde_UU_02*Christoffelgamtilde_ULL_202*alpha - 2*Atilde_UU_02*dDalpha_L_0 + 2*Atilde_UU_11*Christoffelgamtilde_ULL_211*alpha + 4*Atilde_UU_12*Christoffelgamtilde_ULL_212*alpha - 2*Atilde_UU_12*dDalpha_L_1 + 2*Atilde_UU_22*Christoffelgamtilde_ULL_222*alpha - 2*Atilde_UU_22*dDalpha_L_2 + (2.0/3.0)*Gamtilde_U_2*dDbeta_UL_00 + (2.0/3.0)*Gamtilde_U_2*dDbeta_UL_11 - Gamtilde_U_2*dDbeta_UL_20 - Gamtilde_U_2*dDbeta_UL_21 - 1.0/3.0*Gamtilde_U_2*dDbeta_UL_22 + KOSigma*dKODGamhat_U_2 - 2*Z_L_0*alpha*invgamtilde_UU_02*kappa1 - 2.0/3.0*Z_L_0*dDbeta_UL_22*invgamtilde_UU_02*kappa3 - 2*Z_L_1*alpha*invgamtilde_UU_12*kappa1 - 2.0/3.0*Z_L_1*dDbeta_UL_22*invgamtilde_UU_12*kappa3 - 2*Z_L_2*alpha*invgamtilde_UU_22*kappa1 - 2.0/3.0*Z_L_2*dDbeta_UL_22*invgamtilde_UU_22*kappa3 + 2*alpha*(-3.0*Atilde_UU_02*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_02) + 2*alpha*(-3.0*Atilde_UU_12*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_12) + 2*alpha*(-3.0*Atilde_UU_22*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_22) + (1.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_12 + (1.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_12 + (1.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_22 + dDDbeta_ULL_200*invgamtilde_UU_00 + 2*dDDbeta_ULL_201*invgamtilde_UU_01 + (7.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_02 + dDDbeta_ULL_211*invgamtilde_UU_11 + (7.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_12 + (4.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_22 + 2*invgamtilde_UU_02*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_12*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_22*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_00*invgamtilde_UU_02 - Z_L_0*dDbeta_UL_20*invgamtilde_UU_00) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_11*invgamtilde_UU_02 - Z_L_0*dDbeta_UL_21*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_00*invgamtilde_UU_12 - Z_L_1*dDbeta_UL_20*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_11*invgamtilde_UU_12 - Z_L_1*dDbeta_UL_21*invgamtilde_UU_11) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_00*invgamtilde_UU_22 - Z_L_2*dDbeta_UL_20*invgamtilde_UU_02) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_11*invgamtilde_UU_22 - Z_L_2*dDbeta_UL_21*invgamtilde_UU_12);

        amrex::Real f = 1;

        rhs_fab(i, j, k, Idx::alpha) = AdvDbetaalpha + KOSigma*dKODalpha - std::pow(alpha, 2)*f*(K - 2*theta);
        /*
        amrex::Real factor = 1.0;

        amrex::Real DtGamhat_U_0 = 2*Atilde_UU_00*Christoffelgamtilde_ULL_000*alpha - 2*Atilde_UU_00*dDalpha_L_0 + 4*Atilde_UU_01*Christoffelgamtilde_ULL_001*alpha - 2*Atilde_UU_01*dDalpha_L_1 + 4*Atilde_UU_02*Christoffelgamtilde_ULL_002*alpha - 2*Atilde_UU_02*dDalpha_L_2 + 2*Atilde_UU_11*Christoffelgamtilde_ULL_011*alpha + 4*Atilde_UU_12*Christoffelgamtilde_ULL_012*alpha + 2*Atilde_UU_22*Christoffelgamtilde_ULL_022*alpha - 1.0/3.0*Gamtilde_U_0*dDbeta_UL_00 - Gamtilde_U_0*dDbeta_UL_01 - Gamtilde_U_0*dDbeta_UL_02 + (2.0/3.0)*Gamtilde_U_0*dDbeta_UL_11 + (2.0/3.0)*Gamtilde_U_0*dDbeta_UL_22 - 2.0/3.0*Z_L_0*dDbeta_UL_00*invgamtilde_UU_00*kappa3 - 2.0/3.0*Z_L_1*dDbeta_UL_00*invgamtilde_UU_01*kappa3 - 2.0/3.0*Z_L_2*dDbeta_UL_00*invgamtilde_UU_02*kappa3 + 2*alpha*(-3.0*Atilde_UU_00*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_00) + 2*alpha*(-3.0*Atilde_UU_01*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_01) + 2*alpha*(-3.0*Atilde_UU_02*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_02) + (4.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_00 + (7.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_01 + (7.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_02 + dDDbeta_ULL_011*invgamtilde_UU_11 + 2*dDDbeta_ULL_012*invgamtilde_UU_12 + dDDbeta_ULL_022*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_00 + (1.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_00 + (1.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_02 + 2*invgamtilde_UU_00*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_01*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_02*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*(-Z_L_0*dDbeta_UL_01*invgamtilde_UU_01 + (2.0/3.0)*Z_L_0*dDbeta_UL_11*invgamtilde_UU_00) + 2*kappa3*(-Z_L_0*dDbeta_UL_02*invgamtilde_UU_02 + (2.0/3.0)*Z_L_0*dDbeta_UL_22*invgamtilde_UU_00) + 2*kappa3*(-Z_L_1*dDbeta_UL_01*invgamtilde_UU_11 + (2.0/3.0)*Z_L_1*dDbeta_UL_11*invgamtilde_UU_01) + 2*kappa3*(-Z_L_1*dDbeta_UL_02*invgamtilde_UU_12 + (2.0/3.0)*Z_L_1*dDbeta_UL_22*invgamtilde_UU_01) + 2*kappa3*(-Z_L_2*dDbeta_UL_01*invgamtilde_UU_12 + (2.0/3.0)*Z_L_2*dDbeta_UL_11*invgamtilde_UU_02) + 2*kappa3*(-Z_L_2*dDbeta_UL_02*invgamtilde_UU_22 + (2.0/3.0)*Z_L_2*dDbeta_UL_22*invgamtilde_UU_02);
        amrex::Real DtGamhat_U_1 = 2*Atilde_UU_00*Christoffelgamtilde_ULL_100*alpha + 4*Atilde_UU_01*Christoffelgamtilde_ULL_101*alpha - 2*Atilde_UU_01*dDalpha_L_0 + 4*Atilde_UU_02*Christoffelgamtilde_ULL_102*alpha + 2*Atilde_UU_11*Christoffelgamtilde_ULL_111*alpha - 2*Atilde_UU_11*dDalpha_L_1 + 4*Atilde_UU_12*Christoffelgamtilde_ULL_112*alpha - 2*Atilde_UU_12*dDalpha_L_2 + 2*Atilde_UU_22*Christoffelgamtilde_ULL_122*alpha + (2.0/3.0)*Gamtilde_U_1*dDbeta_UL_00 - Gamtilde_U_1*dDbeta_UL_10 - 1.0/3.0*Gamtilde_U_1*dDbeta_UL_11 - Gamtilde_U_1*dDbeta_UL_12 + (2.0/3.0)*Gamtilde_U_1*dDbeta_UL_22 - 2.0/3.0*Z_L_0*dDbeta_UL_11*invgamtilde_UU_01*kappa3 - 2.0/3.0*Z_L_1*dDbeta_UL_11*invgamtilde_UU_11*kappa3 - 2.0/3.0*Z_L_2*dDbeta_UL_11*invgamtilde_UU_12*kappa3 + 2*alpha*(-3.0*Atilde_UU_01*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_01) + 2*alpha*(-3.0*Atilde_UU_11*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_11) + 2*alpha*(-3.0*Atilde_UU_12*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_12) + (1.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_11 + (1.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_12 + dDDbeta_ULL_100*invgamtilde_UU_00 + (7.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_01 + 2*dDDbeta_ULL_102*invgamtilde_UU_02 + (4.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_11 + (7.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_12 + dDDbeta_ULL_122*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_01 + (1.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_11 + (1.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_12 + 2*invgamtilde_UU_01*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_11*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_12*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_00*invgamtilde_UU_01 - Z_L_0*dDbeta_UL_10*invgamtilde_UU_00) + 2*kappa3*(-Z_L_0*dDbeta_UL_12*invgamtilde_UU_02 + (2.0/3.0)*Z_L_0*dDbeta_UL_22*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_00*invgamtilde_UU_11 - Z_L_1*dDbeta_UL_10*invgamtilde_UU_01) + 2*kappa3*(-Z_L_1*dDbeta_UL_12*invgamtilde_UU_12 + (2.0/3.0)*Z_L_1*dDbeta_UL_22*invgamtilde_UU_11) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_00*invgamtilde_UU_12 - Z_L_2*dDbeta_UL_10*invgamtilde_UU_02) + 2*kappa3*(-Z_L_2*dDbeta_UL_12*invgamtilde_UU_22 + (2.0/3.0)*Z_L_2*dDbeta_UL_22*invgamtilde_UU_12);
        amrex::Real DtGamhat_U_2 = 2*Atilde_UU_00*Christoffelgamtilde_ULL_200*alpha + 4*Atilde_UU_01*Christoffelgamtilde_ULL_201*alpha + 4*Atilde_UU_02*Christoffelgamtilde_ULL_202*alpha - 2*Atilde_UU_02*dDalpha_L_0 + 2*Atilde_UU_11*Christoffelgamtilde_ULL_211*alpha + 4*Atilde_UU_12*Christoffelgamtilde_ULL_212*alpha - 2*Atilde_UU_12*dDalpha_L_1 + 2*Atilde_UU_22*Christoffelgamtilde_ULL_222*alpha - 2*Atilde_UU_22*dDalpha_L_2 + (2.0/3.0)*Gamtilde_U_2*dDbeta_UL_00 + (2.0/3.0)*Gamtilde_U_2*dDbeta_UL_11 - Gamtilde_U_2*dDbeta_UL_20 - Gamtilde_U_2*dDbeta_UL_21 - 1.0/3.0*Gamtilde_U_2*dDbeta_UL_22 - 2.0/3.0*Z_L_0*dDbeta_UL_22*invgamtilde_UU_02*kappa3 - 2.0/3.0*Z_L_1*dDbeta_UL_22*invgamtilde_UU_12*kappa3 - 2.0/3.0*Z_L_2*dDbeta_UL_22*invgamtilde_UU_22*kappa3 + 2*alpha*(-3.0*Atilde_UU_02*dDphi_L_0/phi - 2.0/3.0*dDK_L_0*invgamtilde_UU_02) + 2*alpha*(-3.0*Atilde_UU_12*dDphi_L_1/phi - 2.0/3.0*dDK_L_1*invgamtilde_UU_12) + 2*alpha*(-3.0*Atilde_UU_22*dDphi_L_2/phi - 2.0/3.0*dDK_L_2*invgamtilde_UU_22) + (1.0/3.0)*dDDbeta_ULL_000*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_001*invgamtilde_UU_12 + (1.0/3.0)*dDDbeta_ULL_002*invgamtilde_UU_22 + (1.0/3.0)*dDDbeta_ULL_101*invgamtilde_UU_02 + (1.0/3.0)*dDDbeta_ULL_111*invgamtilde_UU_12 + (1.0/3.0)*dDDbeta_ULL_112*invgamtilde_UU_22 + dDDbeta_ULL_200*invgamtilde_UU_00 + 2*dDDbeta_ULL_201*invgamtilde_UU_01 + (7.0/3.0)*dDDbeta_ULL_202*invgamtilde_UU_02 + dDDbeta_ULL_211*invgamtilde_UU_11 + (7.0/3.0)*dDDbeta_ULL_212*invgamtilde_UU_12 + (4.0/3.0)*dDDbeta_ULL_222*invgamtilde_UU_22 + 2*invgamtilde_UU_02*(-2.0/3.0*K*Z_L_0*alpha + alpha*dDtheta_L_0 - dDalpha_L_0*theta) + 2*invgamtilde_UU_12*(-2.0/3.0*K*Z_L_1*alpha + alpha*dDtheta_L_1 - dDalpha_L_1*theta) + 2*invgamtilde_UU_22*(-2.0/3.0*K*Z_L_2*alpha + alpha*dDtheta_L_2 - dDalpha_L_2*theta) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_00*invgamtilde_UU_02 - Z_L_0*dDbeta_UL_20*invgamtilde_UU_00) + 2*kappa3*((2.0/3.0)*Z_L_0*dDbeta_UL_11*invgamtilde_UU_02 - Z_L_0*dDbeta_UL_21*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_00*invgamtilde_UU_12 - Z_L_1*dDbeta_UL_20*invgamtilde_UU_01) + 2*kappa3*((2.0/3.0)*Z_L_1*dDbeta_UL_11*invgamtilde_UU_12 - Z_L_1*dDbeta_UL_21*invgamtilde_UU_11) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_00*invgamtilde_UU_22 - Z_L_2*dDbeta_UL_20*invgamtilde_UU_02) + 2*kappa3*((2.0/3.0)*Z_L_2*dDbeta_UL_11*invgamtilde_UU_22 - Z_L_2*dDbeta_UL_21*invgamtilde_UU_12);

        amrex::Real eta = 2;

        rhs_fab(i, j, k, Idx::B_U_0) = AdvDbetaB_U_0 - B_U_0*eta + DtGamhat_U_0 + KOSigma*dKODB_U_0;
        rhs_fab(i, j, k, Idx::B_U_1) = AdvDbetaB_U_1 - B_U_1*eta + DtGamhat_U_1 + KOSigma*dKODB_U_1;
        rhs_fab(i, j, k, Idx::B_U_2) = AdvDbetaB_U_2 - B_U_2*eta + DtGamhat_U_2 + KOSigma*dKODB_U_2;
        */
        
}
#endif