#ifndef ET_INTEGRATION_RHS_K_H 
#define ET_INTEGRATION_RHS_K_H 

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_rhs(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& rhs_fab, 
        amrex::Array4<amrex::Real const> const& state_fab, 
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx) noexcept 
{
         amrex::Real phi = state_fab(i, j, k, Idx::phi);
         amrex::Real KOphi = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::phi) - 6*state_fab(i, j, k + 2, Idx::phi) + state_fab(i, j, k + 3, Idx::phi) + 15*state_fab(i, j, k - 1, Idx::phi) - 6*state_fab(i, j, k - 2, Idx::phi) + state_fab(i, j, k - 3, Idx::phi) - 20*state_fab(i, j, k, Idx::phi))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::phi) - 6*state_fab(i, j + 2, k, Idx::phi) + state_fab(i, j + 3, k, Idx::phi) + 15*state_fab(i, j - 1, k, Idx::phi) - 6*state_fab(i, j - 2, k, Idx::phi) + state_fab(i, j - 3, k, Idx::phi) - 20*state_fab(i, j, k, Idx::phi))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::phi) - 6*state_fab(i + 2, j, k, Idx::phi) + state_fab(i + 3, j, k, Idx::phi) + 15*state_fab(i - 1, j, k, Idx::phi) - 6*state_fab(i - 2, j, k, Idx::phi) + state_fab(i - 3, j, k, Idx::phi) - 20*state_fab(i, j, k, Idx::phi))/dx[0];
         amrex::Real gambar00 = state_fab(i, j, k, Idx::gambar00);
         amrex::Real gambar01 = state_fab(i, j, k, Idx::gambar01);
         amrex::Real gambar02 = state_fab(i, j, k, Idx::gambar02);
         amrex::Real gambar10 = state_fab(i, j, k, Idx::gambar01);
         amrex::Real gambar11 = state_fab(i, j, k, Idx::gambar11);
         amrex::Real gambar12 = state_fab(i, j, k, Idx::gambar12);
         amrex::Real gambar20 = state_fab(i, j, k, Idx::gambar02);
         amrex::Real gambar21 = state_fab(i, j, k, Idx::gambar12);
         amrex::Real gambar22 = state_fab(i, j, k, Idx::gambar22);
         amrex::Real KOgambarLL00 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar00) - 6*state_fab(i, j, k + 2, Idx::gambar00) + state_fab(i, j, k + 3, Idx::gambar00) + 15*state_fab(i, j, k - 1, Idx::gambar00) - 6*state_fab(i, j, k - 2, Idx::gambar00) + state_fab(i, j, k - 3, Idx::gambar00) - 20*state_fab(i, j, k, Idx::gambar00))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar00) - 6*state_fab(i, j + 2, k, Idx::gambar00) + state_fab(i, j + 3, k, Idx::gambar00) + 15*state_fab(i, j - 1, k, Idx::gambar00) - 6*state_fab(i, j - 2, k, Idx::gambar00) + state_fab(i, j - 3, k, Idx::gambar00) - 20*state_fab(i, j, k, Idx::gambar00))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar00) - 6*state_fab(i + 2, j, k, Idx::gambar00) + state_fab(i + 3, j, k, Idx::gambar00) + 15*state_fab(i - 1, j, k, Idx::gambar00) - 6*state_fab(i - 2, j, k, Idx::gambar00) + state_fab(i - 3, j, k, Idx::gambar00) - 20*state_fab(i, j, k, Idx::gambar00))/dx[0];
         amrex::Real KOgambarLL01 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar01) - 6*state_fab(i, j, k + 2, Idx::gambar01) + state_fab(i, j, k + 3, Idx::gambar01) + 15*state_fab(i, j, k - 1, Idx::gambar01) - 6*state_fab(i, j, k - 2, Idx::gambar01) + state_fab(i, j, k - 3, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar01) - 6*state_fab(i, j + 2, k, Idx::gambar01) + state_fab(i, j + 3, k, Idx::gambar01) + 15*state_fab(i, j - 1, k, Idx::gambar01) - 6*state_fab(i, j - 2, k, Idx::gambar01) + state_fab(i, j - 3, k, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar01) - 6*state_fab(i + 2, j, k, Idx::gambar01) + state_fab(i + 3, j, k, Idx::gambar01) + 15*state_fab(i - 1, j, k, Idx::gambar01) - 6*state_fab(i - 2, j, k, Idx::gambar01) + state_fab(i - 3, j, k, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[0];
         amrex::Real KOgambarLL02 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar02) - 6*state_fab(i, j, k + 2, Idx::gambar02) + state_fab(i, j, k + 3, Idx::gambar02) + 15*state_fab(i, j, k - 1, Idx::gambar02) - 6*state_fab(i, j, k - 2, Idx::gambar02) + state_fab(i, j, k - 3, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar02) - 6*state_fab(i, j + 2, k, Idx::gambar02) + state_fab(i, j + 3, k, Idx::gambar02) + 15*state_fab(i, j - 1, k, Idx::gambar02) - 6*state_fab(i, j - 2, k, Idx::gambar02) + state_fab(i, j - 3, k, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar02) - 6*state_fab(i + 2, j, k, Idx::gambar02) + state_fab(i + 3, j, k, Idx::gambar02) + 15*state_fab(i - 1, j, k, Idx::gambar02) - 6*state_fab(i - 2, j, k, Idx::gambar02) + state_fab(i - 3, j, k, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[0];
         amrex::Real KOgambarLL10 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar01) - 6*state_fab(i, j, k + 2, Idx::gambar01) + state_fab(i, j, k + 3, Idx::gambar01) + 15*state_fab(i, j, k - 1, Idx::gambar01) - 6*state_fab(i, j, k - 2, Idx::gambar01) + state_fab(i, j, k - 3, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar01) - 6*state_fab(i, j + 2, k, Idx::gambar01) + state_fab(i, j + 3, k, Idx::gambar01) + 15*state_fab(i, j - 1, k, Idx::gambar01) - 6*state_fab(i, j - 2, k, Idx::gambar01) + state_fab(i, j - 3, k, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar01) - 6*state_fab(i + 2, j, k, Idx::gambar01) + state_fab(i + 3, j, k, Idx::gambar01) + 15*state_fab(i - 1, j, k, Idx::gambar01) - 6*state_fab(i - 2, j, k, Idx::gambar01) + state_fab(i - 3, j, k, Idx::gambar01) - 20*state_fab(i, j, k, Idx::gambar01))/dx[0];
         amrex::Real KOgambarLL11 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar11) - 6*state_fab(i, j, k + 2, Idx::gambar11) + state_fab(i, j, k + 3, Idx::gambar11) + 15*state_fab(i, j, k - 1, Idx::gambar11) - 6*state_fab(i, j, k - 2, Idx::gambar11) + state_fab(i, j, k - 3, Idx::gambar11) - 20*state_fab(i, j, k, Idx::gambar11))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar11) - 6*state_fab(i, j + 2, k, Idx::gambar11) + state_fab(i, j + 3, k, Idx::gambar11) + 15*state_fab(i, j - 1, k, Idx::gambar11) - 6*state_fab(i, j - 2, k, Idx::gambar11) + state_fab(i, j - 3, k, Idx::gambar11) - 20*state_fab(i, j, k, Idx::gambar11))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar11) - 6*state_fab(i + 2, j, k, Idx::gambar11) + state_fab(i + 3, j, k, Idx::gambar11) + 15*state_fab(i - 1, j, k, Idx::gambar11) - 6*state_fab(i - 2, j, k, Idx::gambar11) + state_fab(i - 3, j, k, Idx::gambar11) - 20*state_fab(i, j, k, Idx::gambar11))/dx[0];
         amrex::Real KOgambarLL12 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar12) - 6*state_fab(i, j, k + 2, Idx::gambar12) + state_fab(i, j, k + 3, Idx::gambar12) + 15*state_fab(i, j, k - 1, Idx::gambar12) - 6*state_fab(i, j, k - 2, Idx::gambar12) + state_fab(i, j, k - 3, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar12) - 6*state_fab(i, j + 2, k, Idx::gambar12) + state_fab(i, j + 3, k, Idx::gambar12) + 15*state_fab(i, j - 1, k, Idx::gambar12) - 6*state_fab(i, j - 2, k, Idx::gambar12) + state_fab(i, j - 3, k, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar12) - 6*state_fab(i + 2, j, k, Idx::gambar12) + state_fab(i + 3, j, k, Idx::gambar12) + 15*state_fab(i - 1, j, k, Idx::gambar12) - 6*state_fab(i - 2, j, k, Idx::gambar12) + state_fab(i - 3, j, k, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[0];
         amrex::Real KOgambarLL20 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar02) - 6*state_fab(i, j, k + 2, Idx::gambar02) + state_fab(i, j, k + 3, Idx::gambar02) + 15*state_fab(i, j, k - 1, Idx::gambar02) - 6*state_fab(i, j, k - 2, Idx::gambar02) + state_fab(i, j, k - 3, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar02) - 6*state_fab(i, j + 2, k, Idx::gambar02) + state_fab(i, j + 3, k, Idx::gambar02) + 15*state_fab(i, j - 1, k, Idx::gambar02) - 6*state_fab(i, j - 2, k, Idx::gambar02) + state_fab(i, j - 3, k, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar02) - 6*state_fab(i + 2, j, k, Idx::gambar02) + state_fab(i + 3, j, k, Idx::gambar02) + 15*state_fab(i - 1, j, k, Idx::gambar02) - 6*state_fab(i - 2, j, k, Idx::gambar02) + state_fab(i - 3, j, k, Idx::gambar02) - 20*state_fab(i, j, k, Idx::gambar02))/dx[0];
         amrex::Real KOgambarLL21 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar12) - 6*state_fab(i, j, k + 2, Idx::gambar12) + state_fab(i, j, k + 3, Idx::gambar12) + 15*state_fab(i, j, k - 1, Idx::gambar12) - 6*state_fab(i, j, k - 2, Idx::gambar12) + state_fab(i, j, k - 3, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar12) - 6*state_fab(i, j + 2, k, Idx::gambar12) + state_fab(i, j + 3, k, Idx::gambar12) + 15*state_fab(i, j - 1, k, Idx::gambar12) - 6*state_fab(i, j - 2, k, Idx::gambar12) + state_fab(i, j - 3, k, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar12) - 6*state_fab(i + 2, j, k, Idx::gambar12) + state_fab(i + 3, j, k, Idx::gambar12) + 15*state_fab(i - 1, j, k, Idx::gambar12) - 6*state_fab(i - 2, j, k, Idx::gambar12) + state_fab(i - 3, j, k, Idx::gambar12) - 20*state_fab(i, j, k, Idx::gambar12))/dx[0];
         amrex::Real KOgambarLL22 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::gambar22) - 6*state_fab(i, j, k + 2, Idx::gambar22) + state_fab(i, j, k + 3, Idx::gambar22) + 15*state_fab(i, j, k - 1, Idx::gambar22) - 6*state_fab(i, j, k - 2, Idx::gambar22) + state_fab(i, j, k - 3, Idx::gambar22) - 20*state_fab(i, j, k, Idx::gambar22))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::gambar22) - 6*state_fab(i, j + 2, k, Idx::gambar22) + state_fab(i, j + 3, k, Idx::gambar22) + 15*state_fab(i, j - 1, k, Idx::gambar22) - 6*state_fab(i, j - 2, k, Idx::gambar22) + state_fab(i, j - 3, k, Idx::gambar22) - 20*state_fab(i, j, k, Idx::gambar22))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::gambar22) - 6*state_fab(i + 2, j, k, Idx::gambar22) + state_fab(i + 3, j, k, Idx::gambar22) + 15*state_fab(i - 1, j, k, Idx::gambar22) - 6*state_fab(i - 2, j, k, Idx::gambar22) + state_fab(i - 3, j, k, Idx::gambar22) - 20*state_fab(i, j, k, Idx::gambar22))/dx[0];
         amrex::Real Ksclr = state_fab(i, j, k, Idx::Ksclr);
         amrex::Real KOKsclr = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Ksclr) - 6*state_fab(i, j, k + 2, Idx::Ksclr) + state_fab(i, j, k + 3, Idx::Ksclr) + 15*state_fab(i, j, k - 1, Idx::Ksclr) - 6*state_fab(i, j, k - 2, Idx::Ksclr) + state_fab(i, j, k - 3, Idx::Ksclr) - 20*state_fab(i, j, k, Idx::Ksclr))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Ksclr) - 6*state_fab(i, j + 2, k, Idx::Ksclr) + state_fab(i, j + 3, k, Idx::Ksclr) + 15*state_fab(i, j - 1, k, Idx::Ksclr) - 6*state_fab(i, j - 2, k, Idx::Ksclr) + state_fab(i, j - 3, k, Idx::Ksclr) - 20*state_fab(i, j, k, Idx::Ksclr))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Ksclr) - 6*state_fab(i + 2, j, k, Idx::Ksclr) + state_fab(i + 3, j, k, Idx::Ksclr) + 15*state_fab(i - 1, j, k, Idx::Ksclr) - 6*state_fab(i - 2, j, k, Idx::Ksclr) + state_fab(i - 3, j, k, Idx::Ksclr) - 20*state_fab(i, j, k, Idx::Ksclr))/dx[0];
         amrex::Real Abar00 = state_fab(i, j, k, Idx::Abar00);
         amrex::Real Abar01 = state_fab(i, j, k, Idx::Abar01);
         amrex::Real Abar02 = state_fab(i, j, k, Idx::Abar02);
         amrex::Real Abar10 = state_fab(i, j, k, Idx::Abar01);
         amrex::Real Abar11 = state_fab(i, j, k, Idx::Abar11);
         amrex::Real Abar12 = state_fab(i, j, k, Idx::Abar12);
         amrex::Real Abar20 = state_fab(i, j, k, Idx::Abar02);
         amrex::Real Abar21 = state_fab(i, j, k, Idx::Abar12);
         amrex::Real Abar22 = state_fab(i, j, k, Idx::Abar22);
         amrex::Real KOAbarLL00 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar00) - 6*state_fab(i, j, k + 2, Idx::Abar00) + state_fab(i, j, k + 3, Idx::Abar00) + 15*state_fab(i, j, k - 1, Idx::Abar00) - 6*state_fab(i, j, k - 2, Idx::Abar00) + state_fab(i, j, k - 3, Idx::Abar00) - 20*state_fab(i, j, k, Idx::Abar00))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar00) - 6*state_fab(i, j + 2, k, Idx::Abar00) + state_fab(i, j + 3, k, Idx::Abar00) + 15*state_fab(i, j - 1, k, Idx::Abar00) - 6*state_fab(i, j - 2, k, Idx::Abar00) + state_fab(i, j - 3, k, Idx::Abar00) - 20*state_fab(i, j, k, Idx::Abar00))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar00) - 6*state_fab(i + 2, j, k, Idx::Abar00) + state_fab(i + 3, j, k, Idx::Abar00) + 15*state_fab(i - 1, j, k, Idx::Abar00) - 6*state_fab(i - 2, j, k, Idx::Abar00) + state_fab(i - 3, j, k, Idx::Abar00) - 20*state_fab(i, j, k, Idx::Abar00))/dx[0];
         amrex::Real KOAbarLL01 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar01) - 6*state_fab(i, j, k + 2, Idx::Abar01) + state_fab(i, j, k + 3, Idx::Abar01) + 15*state_fab(i, j, k - 1, Idx::Abar01) - 6*state_fab(i, j, k - 2, Idx::Abar01) + state_fab(i, j, k - 3, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar01) - 6*state_fab(i, j + 2, k, Idx::Abar01) + state_fab(i, j + 3, k, Idx::Abar01) + 15*state_fab(i, j - 1, k, Idx::Abar01) - 6*state_fab(i, j - 2, k, Idx::Abar01) + state_fab(i, j - 3, k, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar01) - 6*state_fab(i + 2, j, k, Idx::Abar01) + state_fab(i + 3, j, k, Idx::Abar01) + 15*state_fab(i - 1, j, k, Idx::Abar01) - 6*state_fab(i - 2, j, k, Idx::Abar01) + state_fab(i - 3, j, k, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[0];
         amrex::Real KOAbarLL02 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar02) - 6*state_fab(i, j, k + 2, Idx::Abar02) + state_fab(i, j, k + 3, Idx::Abar02) + 15*state_fab(i, j, k - 1, Idx::Abar02) - 6*state_fab(i, j, k - 2, Idx::Abar02) + state_fab(i, j, k - 3, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar02) - 6*state_fab(i, j + 2, k, Idx::Abar02) + state_fab(i, j + 3, k, Idx::Abar02) + 15*state_fab(i, j - 1, k, Idx::Abar02) - 6*state_fab(i, j - 2, k, Idx::Abar02) + state_fab(i, j - 3, k, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar02) - 6*state_fab(i + 2, j, k, Idx::Abar02) + state_fab(i + 3, j, k, Idx::Abar02) + 15*state_fab(i - 1, j, k, Idx::Abar02) - 6*state_fab(i - 2, j, k, Idx::Abar02) + state_fab(i - 3, j, k, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[0];
         amrex::Real KOAbarLL10 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar01) - 6*state_fab(i, j, k + 2, Idx::Abar01) + state_fab(i, j, k + 3, Idx::Abar01) + 15*state_fab(i, j, k - 1, Idx::Abar01) - 6*state_fab(i, j, k - 2, Idx::Abar01) + state_fab(i, j, k - 3, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar01) - 6*state_fab(i, j + 2, k, Idx::Abar01) + state_fab(i, j + 3, k, Idx::Abar01) + 15*state_fab(i, j - 1, k, Idx::Abar01) - 6*state_fab(i, j - 2, k, Idx::Abar01) + state_fab(i, j - 3, k, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar01) - 6*state_fab(i + 2, j, k, Idx::Abar01) + state_fab(i + 3, j, k, Idx::Abar01) + 15*state_fab(i - 1, j, k, Idx::Abar01) - 6*state_fab(i - 2, j, k, Idx::Abar01) + state_fab(i - 3, j, k, Idx::Abar01) - 20*state_fab(i, j, k, Idx::Abar01))/dx[0];
         amrex::Real KOAbarLL11 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar11) - 6*state_fab(i, j, k + 2, Idx::Abar11) + state_fab(i, j, k + 3, Idx::Abar11) + 15*state_fab(i, j, k - 1, Idx::Abar11) - 6*state_fab(i, j, k - 2, Idx::Abar11) + state_fab(i, j, k - 3, Idx::Abar11) - 20*state_fab(i, j, k, Idx::Abar11))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar11) - 6*state_fab(i, j + 2, k, Idx::Abar11) + state_fab(i, j + 3, k, Idx::Abar11) + 15*state_fab(i, j - 1, k, Idx::Abar11) - 6*state_fab(i, j - 2, k, Idx::Abar11) + state_fab(i, j - 3, k, Idx::Abar11) - 20*state_fab(i, j, k, Idx::Abar11))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar11) - 6*state_fab(i + 2, j, k, Idx::Abar11) + state_fab(i + 3, j, k, Idx::Abar11) + 15*state_fab(i - 1, j, k, Idx::Abar11) - 6*state_fab(i - 2, j, k, Idx::Abar11) + state_fab(i - 3, j, k, Idx::Abar11) - 20*state_fab(i, j, k, Idx::Abar11))/dx[0];
         amrex::Real KOAbarLL12 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar12) - 6*state_fab(i, j, k + 2, Idx::Abar12) + state_fab(i, j, k + 3, Idx::Abar12) + 15*state_fab(i, j, k - 1, Idx::Abar12) - 6*state_fab(i, j, k - 2, Idx::Abar12) + state_fab(i, j, k - 3, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar12) - 6*state_fab(i, j + 2, k, Idx::Abar12) + state_fab(i, j + 3, k, Idx::Abar12) + 15*state_fab(i, j - 1, k, Idx::Abar12) - 6*state_fab(i, j - 2, k, Idx::Abar12) + state_fab(i, j - 3, k, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar12) - 6*state_fab(i + 2, j, k, Idx::Abar12) + state_fab(i + 3, j, k, Idx::Abar12) + 15*state_fab(i - 1, j, k, Idx::Abar12) - 6*state_fab(i - 2, j, k, Idx::Abar12) + state_fab(i - 3, j, k, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[0];
         amrex::Real KOAbarLL20 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar02) - 6*state_fab(i, j, k + 2, Idx::Abar02) + state_fab(i, j, k + 3, Idx::Abar02) + 15*state_fab(i, j, k - 1, Idx::Abar02) - 6*state_fab(i, j, k - 2, Idx::Abar02) + state_fab(i, j, k - 3, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar02) - 6*state_fab(i, j + 2, k, Idx::Abar02) + state_fab(i, j + 3, k, Idx::Abar02) + 15*state_fab(i, j - 1, k, Idx::Abar02) - 6*state_fab(i, j - 2, k, Idx::Abar02) + state_fab(i, j - 3, k, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar02) - 6*state_fab(i + 2, j, k, Idx::Abar02) + state_fab(i + 3, j, k, Idx::Abar02) + 15*state_fab(i - 1, j, k, Idx::Abar02) - 6*state_fab(i - 2, j, k, Idx::Abar02) + state_fab(i - 3, j, k, Idx::Abar02) - 20*state_fab(i, j, k, Idx::Abar02))/dx[0];
         amrex::Real KOAbarLL21 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar12) - 6*state_fab(i, j, k + 2, Idx::Abar12) + state_fab(i, j, k + 3, Idx::Abar12) + 15*state_fab(i, j, k - 1, Idx::Abar12) - 6*state_fab(i, j, k - 2, Idx::Abar12) + state_fab(i, j, k - 3, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar12) - 6*state_fab(i, j + 2, k, Idx::Abar12) + state_fab(i, j + 3, k, Idx::Abar12) + 15*state_fab(i, j - 1, k, Idx::Abar12) - 6*state_fab(i, j - 2, k, Idx::Abar12) + state_fab(i, j - 3, k, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar12) - 6*state_fab(i + 2, j, k, Idx::Abar12) + state_fab(i + 3, j, k, Idx::Abar12) + 15*state_fab(i - 1, j, k, Idx::Abar12) - 6*state_fab(i - 2, j, k, Idx::Abar12) + state_fab(i - 3, j, k, Idx::Abar12) - 20*state_fab(i, j, k, Idx::Abar12))/dx[0];
         amrex::Real KOAbarLL22 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::Abar22) - 6*state_fab(i, j, k + 2, Idx::Abar22) + state_fab(i, j, k + 3, Idx::Abar22) + 15*state_fab(i, j, k - 1, Idx::Abar22) - 6*state_fab(i, j, k - 2, Idx::Abar22) + state_fab(i, j, k - 3, Idx::Abar22) - 20*state_fab(i, j, k, Idx::Abar22))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::Abar22) - 6*state_fab(i, j + 2, k, Idx::Abar22) + state_fab(i, j + 3, k, Idx::Abar22) + 15*state_fab(i, j - 1, k, Idx::Abar22) - 6*state_fab(i, j - 2, k, Idx::Abar22) + state_fab(i, j - 3, k, Idx::Abar22) - 20*state_fab(i, j, k, Idx::Abar22))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::Abar22) - 6*state_fab(i + 2, j, k, Idx::Abar22) + state_fab(i + 3, j, k, Idx::Abar22) + 15*state_fab(i - 1, j, k, Idx::Abar22) - 6*state_fab(i - 2, j, k, Idx::Abar22) + state_fab(i - 3, j, k, Idx::Abar22) - 20*state_fab(i, j, k, Idx::Abar22))/dx[0];
         amrex::Real GambarU0 = state_fab(i, j, k, Idx::GambarU0);
         amrex::Real GambarU1 = state_fab(i, j, k, Idx::GambarU1);
         amrex::Real GambarU2 = state_fab(i, j, k, Idx::GambarU2);
         amrex::Real KOGambarU0 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::GambarU0) - 6*state_fab(i, j, k + 2, Idx::GambarU0) + state_fab(i, j, k + 3, Idx::GambarU0) + 15*state_fab(i, j, k - 1, Idx::GambarU0) - 6*state_fab(i, j, k - 2, Idx::GambarU0) + state_fab(i, j, k - 3, Idx::GambarU0) - 20*state_fab(i, j, k, Idx::GambarU0))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::GambarU0) - 6*state_fab(i, j + 2, k, Idx::GambarU0) + state_fab(i, j + 3, k, Idx::GambarU0) + 15*state_fab(i, j - 1, k, Idx::GambarU0) - 6*state_fab(i, j - 2, k, Idx::GambarU0) + state_fab(i, j - 3, k, Idx::GambarU0) - 20*state_fab(i, j, k, Idx::GambarU0))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::GambarU0) - 6*state_fab(i + 2, j, k, Idx::GambarU0) + state_fab(i + 3, j, k, Idx::GambarU0) + 15*state_fab(i - 1, j, k, Idx::GambarU0) - 6*state_fab(i - 2, j, k, Idx::GambarU0) + state_fab(i - 3, j, k, Idx::GambarU0) - 20*state_fab(i, j, k, Idx::GambarU0))/dx[0];
         amrex::Real KOGambarU1 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::GambarU1) - 6*state_fab(i, j, k + 2, Idx::GambarU1) + state_fab(i, j, k + 3, Idx::GambarU1) + 15*state_fab(i, j, k - 1, Idx::GambarU1) - 6*state_fab(i, j, k - 2, Idx::GambarU1) + state_fab(i, j, k - 3, Idx::GambarU1) - 20*state_fab(i, j, k, Idx::GambarU1))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::GambarU1) - 6*state_fab(i, j + 2, k, Idx::GambarU1) + state_fab(i, j + 3, k, Idx::GambarU1) + 15*state_fab(i, j - 1, k, Idx::GambarU1) - 6*state_fab(i, j - 2, k, Idx::GambarU1) + state_fab(i, j - 3, k, Idx::GambarU1) - 20*state_fab(i, j, k, Idx::GambarU1))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::GambarU1) - 6*state_fab(i + 2, j, k, Idx::GambarU1) + state_fab(i + 3, j, k, Idx::GambarU1) + 15*state_fab(i - 1, j, k, Idx::GambarU1) - 6*state_fab(i - 2, j, k, Idx::GambarU1) + state_fab(i - 3, j, k, Idx::GambarU1) - 20*state_fab(i, j, k, Idx::GambarU1))/dx[0];
         amrex::Real KOGambarU2 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::GambarU2) - 6*state_fab(i, j, k + 2, Idx::GambarU2) + state_fab(i, j, k + 3, Idx::GambarU2) + 15*state_fab(i, j, k - 1, Idx::GambarU2) - 6*state_fab(i, j, k - 2, Idx::GambarU2) + state_fab(i, j, k - 3, Idx::GambarU2) - 20*state_fab(i, j, k, Idx::GambarU2))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::GambarU2) - 6*state_fab(i, j + 2, k, Idx::GambarU2) + state_fab(i, j + 3, k, Idx::GambarU2) + 15*state_fab(i, j - 1, k, Idx::GambarU2) - 6*state_fab(i, j - 2, k, Idx::GambarU2) + state_fab(i, j - 3, k, Idx::GambarU2) - 20*state_fab(i, j, k, Idx::GambarU2))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::GambarU2) - 6*state_fab(i + 2, j, k, Idx::GambarU2) + state_fab(i + 3, j, k, Idx::GambarU2) + 15*state_fab(i - 1, j, k, Idx::GambarU2) - 6*state_fab(i - 2, j, k, Idx::GambarU2) + state_fab(i - 3, j, k, Idx::GambarU2) - 20*state_fab(i, j, k, Idx::GambarU2))/dx[0];
         amrex::Real alpha = state_fab(i, j, k, Idx::alpha);
         amrex::Real KOalpha = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::alpha) - 6*state_fab(i, j, k + 2, Idx::alpha) + state_fab(i, j, k + 3, Idx::alpha) + 15*state_fab(i, j, k - 1, Idx::alpha) - 6*state_fab(i, j, k - 2, Idx::alpha) + state_fab(i, j, k - 3, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::alpha) - 6*state_fab(i, j + 2, k, Idx::alpha) + state_fab(i, j + 3, k, Idx::alpha) + 15*state_fab(i, j - 1, k, Idx::alpha) - 6*state_fab(i, j - 2, k, Idx::alpha) + state_fab(i, j - 3, k, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::alpha) - 6*state_fab(i + 2, j, k, Idx::alpha) + state_fab(i + 3, j, k, Idx::alpha) + 15*state_fab(i - 1, j, k, Idx::alpha) - 6*state_fab(i - 2, j, k, Idx::alpha) + state_fab(i - 3, j, k, Idx::alpha) - 20*state_fab(i, j, k, Idx::alpha))/dx[0];
         amrex::Real betaU0 = state_fab(i, j, k, Idx::betaU0);
         amrex::Real betaU1 = state_fab(i, j, k, Idx::betaU1);
         amrex::Real betaU2 = state_fab(i, j, k, Idx::betaU2);
         amrex::Real KObetaU0 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::betaU0) - 6*state_fab(i, j, k + 2, Idx::betaU0) + state_fab(i, j, k + 3, Idx::betaU0) + 15*state_fab(i, j, k - 1, Idx::betaU0) - 6*state_fab(i, j, k - 2, Idx::betaU0) + state_fab(i, j, k - 3, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::betaU0) - 6*state_fab(i, j + 2, k, Idx::betaU0) + state_fab(i, j + 3, k, Idx::betaU0) + 15*state_fab(i, j - 1, k, Idx::betaU0) - 6*state_fab(i, j - 2, k, Idx::betaU0) + state_fab(i, j - 3, k, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::betaU0) - 6*state_fab(i + 2, j, k, Idx::betaU0) + state_fab(i + 3, j, k, Idx::betaU0) + 15*state_fab(i - 1, j, k, Idx::betaU0) - 6*state_fab(i - 2, j, k, Idx::betaU0) + state_fab(i - 3, j, k, Idx::betaU0) - 20*state_fab(i, j, k, Idx::betaU0))/dx[0];
         amrex::Real KObetaU1 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::betaU1) - 6*state_fab(i, j, k + 2, Idx::betaU1) + state_fab(i, j, k + 3, Idx::betaU1) + 15*state_fab(i, j, k - 1, Idx::betaU1) - 6*state_fab(i, j, k - 2, Idx::betaU1) + state_fab(i, j, k - 3, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::betaU1) - 6*state_fab(i, j + 2, k, Idx::betaU1) + state_fab(i, j + 3, k, Idx::betaU1) + 15*state_fab(i, j - 1, k, Idx::betaU1) - 6*state_fab(i, j - 2, k, Idx::betaU1) + state_fab(i, j - 3, k, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::betaU1) - 6*state_fab(i + 2, j, k, Idx::betaU1) + state_fab(i + 3, j, k, Idx::betaU1) + 15*state_fab(i - 1, j, k, Idx::betaU1) - 6*state_fab(i - 2, j, k, Idx::betaU1) + state_fab(i - 3, j, k, Idx::betaU1) - 20*state_fab(i, j, k, Idx::betaU1))/dx[0];
         amrex::Real KObetaU2 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::betaU2) - 6*state_fab(i, j, k + 2, Idx::betaU2) + state_fab(i, j, k + 3, Idx::betaU2) + 15*state_fab(i, j, k - 1, Idx::betaU2) - 6*state_fab(i, j, k - 2, Idx::betaU2) + state_fab(i, j, k - 3, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::betaU2) - 6*state_fab(i, j + 2, k, Idx::betaU2) + state_fab(i, j + 3, k, Idx::betaU2) + 15*state_fab(i, j - 1, k, Idx::betaU2) - 6*state_fab(i, j - 2, k, Idx::betaU2) + state_fab(i, j - 3, k, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::betaU2) - 6*state_fab(i + 2, j, k, Idx::betaU2) + state_fab(i + 3, j, k, Idx::betaU2) + 15*state_fab(i - 1, j, k, Idx::betaU2) - 6*state_fab(i - 2, j, k, Idx::betaU2) + state_fab(i - 3, j, k, Idx::betaU2) - 20*state_fab(i, j, k, Idx::betaU2))/dx[0];
         amrex::Real BU0 = state_fab(i, j, k, Idx::BU0);
         amrex::Real BU1 = state_fab(i, j, k, Idx::BU1);
         amrex::Real BU2 = state_fab(i, j, k, Idx::BU2);
         amrex::Real KOBU0 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::BU0) - 6*state_fab(i, j, k + 2, Idx::BU0) + state_fab(i, j, k + 3, Idx::BU0) + 15*state_fab(i, j, k - 1, Idx::BU0) - 6*state_fab(i, j, k - 2, Idx::BU0) + state_fab(i, j, k - 3, Idx::BU0) - 20*state_fab(i, j, k, Idx::BU0))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::BU0) - 6*state_fab(i, j + 2, k, Idx::BU0) + state_fab(i, j + 3, k, Idx::BU0) + 15*state_fab(i, j - 1, k, Idx::BU0) - 6*state_fab(i, j - 2, k, Idx::BU0) + state_fab(i, j - 3, k, Idx::BU0) - 20*state_fab(i, j, k, Idx::BU0))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::BU0) - 6*state_fab(i + 2, j, k, Idx::BU0) + state_fab(i + 3, j, k, Idx::BU0) + 15*state_fab(i - 1, j, k, Idx::BU0) - 6*state_fab(i - 2, j, k, Idx::BU0) + state_fab(i - 3, j, k, Idx::BU0) - 20*state_fab(i, j, k, Idx::BU0))/dx[0];
         amrex::Real KOBU1 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::BU1) - 6*state_fab(i, j, k + 2, Idx::BU1) + state_fab(i, j, k + 3, Idx::BU1) + 15*state_fab(i, j, k - 1, Idx::BU1) - 6*state_fab(i, j, k - 2, Idx::BU1) + state_fab(i, j, k - 3, Idx::BU1) - 20*state_fab(i, j, k, Idx::BU1))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::BU1) - 6*state_fab(i, j + 2, k, Idx::BU1) + state_fab(i, j + 3, k, Idx::BU1) + 15*state_fab(i, j - 1, k, Idx::BU1) - 6*state_fab(i, j - 2, k, Idx::BU1) + state_fab(i, j - 3, k, Idx::BU1) - 20*state_fab(i, j, k, Idx::BU1))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::BU1) - 6*state_fab(i + 2, j, k, Idx::BU1) + state_fab(i + 3, j, k, Idx::BU1) + 15*state_fab(i - 1, j, k, Idx::BU1) - 6*state_fab(i - 2, j, k, Idx::BU1) + state_fab(i - 3, j, k, Idx::BU1) - 20*state_fab(i, j, k, Idx::BU1))/dx[0];
         amrex::Real KOBU2 = 0.0015625000000000001*(15*state_fab(i, j, k + 1, Idx::BU2) - 6*state_fab(i, j, k + 2, Idx::BU2) + state_fab(i, j, k + 3, Idx::BU2) + 15*state_fab(i, j, k - 1, Idx::BU2) - 6*state_fab(i, j, k - 2, Idx::BU2) + state_fab(i, j, k - 3, Idx::BU2) - 20*state_fab(i, j, k, Idx::BU2))/dx[2] + 0.0015625000000000001*(15*state_fab(i, j + 1, k, Idx::BU2) - 6*state_fab(i, j + 2, k, Idx::BU2) + state_fab(i, j + 3, k, Idx::BU2) + 15*state_fab(i, j - 1, k, Idx::BU2) - 6*state_fab(i, j - 2, k, Idx::BU2) + state_fab(i, j - 3, k, Idx::BU2) - 20*state_fab(i, j, k, Idx::BU2))/dx[1] + 0.0015625000000000001*(15*state_fab(i + 1, j, k, Idx::BU2) - 6*state_fab(i + 2, j, k, Idx::BU2) + state_fab(i + 3, j, k, Idx::BU2) + 15*state_fab(i - 1, j, k, Idx::BU2) - 6*state_fab(i - 2, j, k, Idx::BU2) + state_fab(i - 3, j, k, Idx::BU2) - 20*state_fab(i, j, k, Idx::BU2))/dx[0];
         amrex::Real gambarinv00 = (gambar11*gambar22 - gambar12*gambar21)/(gambar00*gambar11*gambar22 - gambar00*gambar12*gambar21 - gambar01*gambar10*gambar22 + gambar01*gambar12*gambar20 + gambar02*gambar10*gambar21 - gambar02*gambar11*gambar20);
         amrex::Real gambarinv01 = (-gambar01*gambar22 + gambar02*gambar21)/(gambar00*gambar11*gambar22 - gambar00*gambar12*gambar21 - gambar01*gambar10*gambar22 + gambar01*gambar12*gambar20 + gambar02*gambar10*gambar21 - gambar02*gambar11*gambar20);
         amrex::Real gambarinv02 = (gambar01*gambar12 - gambar02*gambar11)/(gambar00*gambar11*gambar22 - gambar00*gambar12*gambar21 - gambar01*gambar10*gambar22 + gambar01*gambar12*gambar20 + gambar02*gambar10*gambar21 - gambar02*gambar11*gambar20);
         amrex::Real gambarinv10 = (-gambar10*gambar22 + gambar12*gambar20)/(gambar00*gambar11*gambar22 - gambar00*gambar12*gambar21 - gambar01*gambar10*gambar22 + gambar01*gambar12*gambar20 + gambar02*gambar10*gambar21 - gambar02*gambar11*gambar20);
         amrex::Real gambarinv11 = gambar00*(gambar00*gambar22 - gambar02*gambar20)/((gambar00*gambar11 - gambar01*gambar10)*(gambar00*gambar22 - gambar02*gambar20) - (gambar00*gambar12 - gambar02*gambar10)*(gambar00*gambar21 - gambar01*gambar20));
         amrex::Real gambarinv12 = -gambar00*(gambar00*gambar12 - gambar02*gambar10)/((gambar00*gambar11 - gambar01*gambar10)*(gambar00*gambar22 - gambar02*gambar20) - (gambar00*gambar12 - gambar02*gambar10)*(gambar00*gambar21 - gambar01*gambar20));
         amrex::Real gambarinv20 = (gambar10*gambar21 - gambar11*gambar20)/(gambar00*gambar11*gambar22 - gambar00*gambar12*gambar21 - gambar01*gambar10*gambar22 + gambar01*gambar12*gambar20 + gambar02*gambar10*gambar21 - gambar02*gambar11*gambar20);
         amrex::Real gambarinv21 = -gambar00*(gambar00*gambar21 - gambar01*gambar20)/((gambar00*gambar11 - gambar01*gambar10)*(gambar00*gambar22 - gambar02*gambar20) - (gambar00*gambar12 - gambar02*gambar10)*(gambar00*gambar21 - gambar01*gambar20));
         amrex::Real gambarinv22 = gambar00*(gambar00*gambar11 - gambar01*gambar10)/((gambar00*gambar11 - gambar01*gambar10)*(gambar00*gambar22 - gambar02*gambar20) - (gambar00*gambar12 - gambar02*gambar10)*(gambar00*gambar21 - gambar01*gambar20));
         amrex::Real dphi0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::phi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::phi))/dx[0];
         amrex::Real dphi1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::phi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::phi))/dx[1];
         amrex::Real dphi2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::phi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::phi))/dx[2];
         amrex::Real ddphi00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::phi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[0], 2);
         amrex::Real ddphi01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi))/(dx[0]*dx[1]);
         amrex::Real ddphi02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi))/(dx[0]*dx[2]);
         amrex::Real ddphi10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi))/(dx[0]*dx[1]);
         amrex::Real ddphi11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::phi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[1], 2);
         amrex::Real ddphi12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi))/(dx[1]*dx[2]);
         amrex::Real ddphi20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi))/(dx[0]*dx[2]);
         amrex::Real ddphi21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi))/(dx[1]*dx[2]);
         amrex::Real ddphi22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::phi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::phi) - 5.0/2.0*state_fab(i, j, k, Idx::phi))/std::pow(dx[2], 2);
         amrex::Real dKsclr0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Ksclr) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Ksclr) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Ksclr) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Ksclr))/dx[0];
         amrex::Real dKsclr1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Ksclr) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Ksclr) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Ksclr) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Ksclr))/dx[1];
         amrex::Real dKsclr2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Ksclr) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Ksclr) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Ksclr) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Ksclr))/dx[2];
         amrex::Real dalpha0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
         amrex::Real dalpha1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
         amrex::Real dalpha2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];
         amrex::Real ddalpha00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 2, j, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
         amrex::Real ddalpha01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
         amrex::Real ddalpha02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
         amrex::Real ddalpha10 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
         amrex::Real ddalpha11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 2, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
         amrex::Real ddalpha12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
         amrex::Real ddalpha20 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
         amrex::Real ddalpha21 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
         amrex::Real ddalpha22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 2, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);
         amrex::Real dbetaU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU0))/dx[0];
         amrex::Real dbetaU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU0))/dx[1];
         amrex::Real dbetaU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU0))/dx[2];
         amrex::Real dbetaU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU1))/dx[0];
         amrex::Real dbetaU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU1))/dx[1];
         amrex::Real dbetaU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU1))/dx[2];
         amrex::Real dbetaU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::betaU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::betaU2))/dx[0];
         amrex::Real dbetaU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::betaU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::betaU2))/dx[1];
         amrex::Real dbetaU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::betaU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::betaU2))/dx[2];
         amrex::Real ddbetaU000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[0], 2);
         amrex::Real ddbetaU001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU0))/(dx[0]*dx[1]);
         amrex::Real ddbetaU002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU0))/(dx[0]*dx[2]);
         amrex::Real ddbetaU010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU0))/(dx[0]*dx[1]);
         amrex::Real ddbetaU011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[1], 2);
         amrex::Real ddbetaU012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU0))/(dx[1]*dx[2]);
         amrex::Real ddbetaU020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU0))/(dx[0]*dx[2]);
         amrex::Real ddbetaU021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU0))/(dx[1]*dx[2]);
         amrex::Real ddbetaU022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU0) - 5.0/2.0*state_fab(i, j, k, Idx::betaU0))/std::pow(dx[2], 2);
         amrex::Real ddbetaU100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[0], 2);
         amrex::Real ddbetaU101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU1))/(dx[0]*dx[1]);
         amrex::Real ddbetaU102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU1))/(dx[0]*dx[2]);
         amrex::Real ddbetaU110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU1))/(dx[0]*dx[1]);
         amrex::Real ddbetaU111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[1], 2);
         amrex::Real ddbetaU112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU1))/(dx[1]*dx[2]);
         amrex::Real ddbetaU120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU1))/(dx[0]*dx[2]);
         amrex::Real ddbetaU121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU1))/(dx[1]*dx[2]);
         amrex::Real ddbetaU122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU1) - 5.0/2.0*state_fab(i, j, k, Idx::betaU1))/std::pow(dx[2], 2);
         amrex::Real ddbetaU200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::betaU2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::betaU2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[0], 2);
         amrex::Real ddbetaU201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU2))/(dx[0]*dx[1]);
         amrex::Real ddbetaU202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU2))/(dx[0]*dx[2]);
         amrex::Real ddbetaU210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::betaU2))/(dx[0]*dx[1]);
         amrex::Real ddbetaU211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::betaU2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::betaU2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[1], 2);
         amrex::Real ddbetaU212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU2))/(dx[1]*dx[2]);
         amrex::Real ddbetaU220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::betaU2))/(dx[0]*dx[2]);
         amrex::Real ddbetaU221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::betaU2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::betaU2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::betaU2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::betaU2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::betaU2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::betaU2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::betaU2))/(dx[1]*dx[2]);
         amrex::Real ddbetaU222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::betaU2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::betaU2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::betaU2) - 5.0/2.0*state_fab(i, j, k, Idx::betaU2))/std::pow(dx[2], 2);
         amrex::Real dBU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::BU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::BU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::BU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::BU0))/dx[0];
         amrex::Real dBU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::BU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::BU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::BU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::BU0))/dx[1];
         amrex::Real dBU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::BU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::BU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::BU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::BU0))/dx[2];
         amrex::Real dBU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::BU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::BU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::BU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::BU1))/dx[0];
         amrex::Real dBU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::BU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::BU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::BU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::BU1))/dx[1];
         amrex::Real dBU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::BU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::BU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::BU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::BU1))/dx[2];
         amrex::Real dBU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::BU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::BU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::BU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::BU2))/dx[0];
         amrex::Real dBU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::BU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::BU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::BU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::BU2))/dx[1];
         amrex::Real dBU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::BU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::BU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::BU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::BU2))/dx[2];
         amrex::Real dgambar000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar00))/dx[0];
         amrex::Real dgambar001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar00))/dx[1];
         amrex::Real dgambar002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar00))/dx[2];
         amrex::Real dgambar010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar01))/dx[0];
         amrex::Real dgambar011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar01))/dx[1];
         amrex::Real dgambar012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar01))/dx[2];
         amrex::Real dgambar020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar02))/dx[0];
         amrex::Real dgambar021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar02))/dx[1];
         amrex::Real dgambar022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar02))/dx[2];
         amrex::Real dgambar100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar01))/dx[0];
         amrex::Real dgambar101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar01))/dx[1];
         amrex::Real dgambar102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar01))/dx[2];
         amrex::Real dgambar110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar11))/dx[0];
         amrex::Real dgambar111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar11))/dx[1];
         amrex::Real dgambar112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar11))/dx[2];
         amrex::Real dgambar120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar12))/dx[0];
         amrex::Real dgambar121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar12))/dx[1];
         amrex::Real dgambar122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar12))/dx[2];
         amrex::Real dgambar200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar02))/dx[0];
         amrex::Real dgambar201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar02))/dx[1];
         amrex::Real dgambar202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar02))/dx[2];
         amrex::Real dgambar210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar12))/dx[0];
         amrex::Real dgambar211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar12))/dx[1];
         amrex::Real dgambar212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar12))/dx[2];
         amrex::Real dgambar220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gambar22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gambar22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gambar22))/dx[0];
         amrex::Real dgambar221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gambar22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gambar22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gambar22))/dx[1];
         amrex::Real dgambar222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gambar22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gambar22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gambar22))/dx[2];
         amrex::Real ddgambar0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar00) - 5.0/2.0*state_fab(i, j, k, Idx::gambar00))/std::pow(dx[0], 2);
         amrex::Real ddgambar0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar00))/(dx[0]*dx[1]);
         amrex::Real ddgambar0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar00))/(dx[0]*dx[2]);
         amrex::Real ddgambar0010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar00))/(dx[0]*dx[1]);
         amrex::Real ddgambar0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar00) - 5.0/2.0*state_fab(i, j, k, Idx::gambar00))/std::pow(dx[1], 2);
         amrex::Real ddgambar0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar00))/(dx[1]*dx[2]);
         amrex::Real ddgambar0020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar00))/(dx[0]*dx[2]);
         amrex::Real ddgambar0021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar00))/(dx[1]*dx[2]);
         amrex::Real ddgambar0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar00) - 5.0/2.0*state_fab(i, j, k, Idx::gambar00))/std::pow(dx[2], 2);
         amrex::Real ddgambar0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[0], 2);
         amrex::Real ddgambar0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar01))/(dx[0]*dx[1]);
         amrex::Real ddgambar0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar01))/(dx[0]*dx[2]);
         amrex::Real ddgambar0110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar01))/(dx[0]*dx[1]);
         amrex::Real ddgambar0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[1], 2);
         amrex::Real ddgambar0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar01))/(dx[1]*dx[2]);
         amrex::Real ddgambar0120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar01))/(dx[0]*dx[2]);
         amrex::Real ddgambar0121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar01))/(dx[1]*dx[2]);
         amrex::Real ddgambar0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[2], 2);
         amrex::Real ddgambar0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[0], 2);
         amrex::Real ddgambar0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar02))/(dx[0]*dx[1]);
         amrex::Real ddgambar0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar02))/(dx[0]*dx[2]);
         amrex::Real ddgambar0210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar02))/(dx[0]*dx[1]);
         amrex::Real ddgambar0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[1], 2);
         amrex::Real ddgambar0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar02))/(dx[1]*dx[2]);
         amrex::Real ddgambar0220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar02))/(dx[0]*dx[2]);
         amrex::Real ddgambar0221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar02))/(dx[1]*dx[2]);
         amrex::Real ddgambar0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[2], 2);
         amrex::Real ddgambar1000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[0], 2);
         amrex::Real ddgambar1001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar01))/(dx[0]*dx[1]);
         amrex::Real ddgambar1002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar01))/(dx[0]*dx[2]);
         amrex::Real ddgambar1010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar01))/(dx[0]*dx[1]);
         amrex::Real ddgambar1011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[1], 2);
         amrex::Real ddgambar1012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar01))/(dx[1]*dx[2]);
         amrex::Real ddgambar1020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar01))/(dx[0]*dx[2]);
         amrex::Real ddgambar1021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar01))/(dx[1]*dx[2]);
         amrex::Real ddgambar1022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar01) - 5.0/2.0*state_fab(i, j, k, Idx::gambar01))/std::pow(dx[2], 2);
         amrex::Real ddgambar1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar11) - 5.0/2.0*state_fab(i, j, k, Idx::gambar11))/std::pow(dx[0], 2);
         amrex::Real ddgambar1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar11))/(dx[0]*dx[1]);
         amrex::Real ddgambar1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar11))/(dx[0]*dx[2]);
         amrex::Real ddgambar1110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar11))/(dx[0]*dx[1]);
         amrex::Real ddgambar1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar11) - 5.0/2.0*state_fab(i, j, k, Idx::gambar11))/std::pow(dx[1], 2);
         amrex::Real ddgambar1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar11))/(dx[1]*dx[2]);
         amrex::Real ddgambar1120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar11))/(dx[0]*dx[2]);
         amrex::Real ddgambar1121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar11))/(dx[1]*dx[2]);
         amrex::Real ddgambar1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar11) - 5.0/2.0*state_fab(i, j, k, Idx::gambar11))/std::pow(dx[2], 2);
         amrex::Real ddgambar1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[0], 2);
         amrex::Real ddgambar1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar12))/(dx[0]*dx[1]);
         amrex::Real ddgambar1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar12))/(dx[0]*dx[2]);
         amrex::Real ddgambar1210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar12))/(dx[0]*dx[1]);
         amrex::Real ddgambar1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[1], 2);
         amrex::Real ddgambar1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar12))/(dx[1]*dx[2]);
         amrex::Real ddgambar1220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar12))/(dx[0]*dx[2]);
         amrex::Real ddgambar1221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar12))/(dx[1]*dx[2]);
         amrex::Real ddgambar1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[2], 2);
         amrex::Real ddgambar2000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[0], 2);
         amrex::Real ddgambar2001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar02))/(dx[0]*dx[1]);
         amrex::Real ddgambar2002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar02))/(dx[0]*dx[2]);
         amrex::Real ddgambar2010 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar02))/(dx[0]*dx[1]);
         amrex::Real ddgambar2011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[1], 2);
         amrex::Real ddgambar2012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar02))/(dx[1]*dx[2]);
         amrex::Real ddgambar2020 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar02))/(dx[0]*dx[2]);
         amrex::Real ddgambar2021 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar02))/(dx[1]*dx[2]);
         amrex::Real ddgambar2022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar02) - 5.0/2.0*state_fab(i, j, k, Idx::gambar02))/std::pow(dx[2], 2);
         amrex::Real ddgambar2100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[0], 2);
         amrex::Real ddgambar2101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar12))/(dx[0]*dx[1]);
         amrex::Real ddgambar2102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar12))/(dx[0]*dx[2]);
         amrex::Real ddgambar2110 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar12))/(dx[0]*dx[1]);
         amrex::Real ddgambar2111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[1], 2);
         amrex::Real ddgambar2112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar12))/(dx[1]*dx[2]);
         amrex::Real ddgambar2120 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar12))/(dx[0]*dx[2]);
         amrex::Real ddgambar2121 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar12))/(dx[1]*dx[2]);
         amrex::Real ddgambar2122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar12) - 5.0/2.0*state_fab(i, j, k, Idx::gambar12))/std::pow(dx[2], 2);
         amrex::Real ddgambar2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gambar22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gambar22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gambar22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gambar22) - 5.0/2.0*state_fab(i, j, k, Idx::gambar22))/std::pow(dx[0], 2);
         amrex::Real ddgambar2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar22))/(dx[0]*dx[1]);
         amrex::Real ddgambar2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar22))/(dx[0]*dx[2]);
         amrex::Real ddgambar2210 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gambar22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gambar22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gambar22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gambar22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gambar22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gambar22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gambar22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gambar22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gambar22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gambar22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gambar22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gambar22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gambar22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gambar22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gambar22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gambar22))/(dx[0]*dx[1]);
         amrex::Real ddgambar2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gambar22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gambar22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gambar22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gambar22) - 5.0/2.0*state_fab(i, j, k, Idx::gambar22))/std::pow(dx[1], 2);
         amrex::Real ddgambar2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar22))/(dx[1]*dx[2]);
         amrex::Real ddgambar2220 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gambar22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gambar22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gambar22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gambar22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gambar22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gambar22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gambar22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gambar22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gambar22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gambar22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gambar22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gambar22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gambar22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gambar22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gambar22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gambar22))/(dx[0]*dx[2]);
         amrex::Real ddgambar2221 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gambar22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gambar22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gambar22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gambar22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gambar22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gambar22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gambar22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gambar22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gambar22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gambar22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gambar22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gambar22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gambar22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gambar22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gambar22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gambar22))/(dx[1]*dx[2]);
         amrex::Real ddgambar2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gambar22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gambar22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gambar22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gambar22) - 5.0/2.0*state_fab(i, j, k, Idx::gambar22))/std::pow(dx[2], 2);
         amrex::Real dAbar000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar00))/dx[0];
         amrex::Real dAbar001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar00))/dx[1];
         amrex::Real dAbar002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar00))/dx[2];
         amrex::Real dAbar010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar01))/dx[0];
         amrex::Real dAbar011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar01))/dx[1];
         amrex::Real dAbar012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar01))/dx[2];
         amrex::Real dAbar020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar02))/dx[0];
         amrex::Real dAbar021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar02))/dx[1];
         amrex::Real dAbar022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar02))/dx[2];
         amrex::Real dAbar100 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar01))/dx[0];
         amrex::Real dAbar101 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar01))/dx[1];
         amrex::Real dAbar102 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar01))/dx[2];
         amrex::Real dAbar110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar11))/dx[0];
         amrex::Real dAbar111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar11))/dx[1];
         amrex::Real dAbar112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar11))/dx[2];
         amrex::Real dAbar120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar12))/dx[0];
         amrex::Real dAbar121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar12))/dx[1];
         amrex::Real dAbar122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar12))/dx[2];
         amrex::Real dAbar200 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar02))/dx[0];
         amrex::Real dAbar201 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar02))/dx[1];
         amrex::Real dAbar202 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar02))/dx[2];
         amrex::Real dAbar210 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar12))/dx[0];
         amrex::Real dAbar211 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar12))/dx[1];
         amrex::Real dAbar212 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar12))/dx[2];
         amrex::Real dAbar220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Abar22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Abar22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Abar22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Abar22))/dx[0];
         amrex::Real dAbar221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Abar22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Abar22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Abar22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Abar22))/dx[1];
         amrex::Real dAbar222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Abar22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Abar22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Abar22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Abar22))/dx[2];
         amrex::Real dGambarU00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GambarU0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GambarU0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GambarU0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GambarU0))/dx[0];
         amrex::Real dGambarU01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GambarU0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GambarU0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GambarU0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GambarU0))/dx[1];
         amrex::Real dGambarU02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GambarU0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GambarU0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GambarU0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GambarU0))/dx[2];
         amrex::Real dGambarU10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GambarU1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GambarU1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GambarU1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GambarU1))/dx[0];
         amrex::Real dGambarU11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GambarU1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GambarU1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GambarU1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GambarU1))/dx[1];
         amrex::Real dGambarU12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GambarU1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GambarU1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GambarU1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GambarU1))/dx[2];
         amrex::Real dGambarU20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::GambarU2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::GambarU2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::GambarU2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::GambarU2))/dx[0];
         amrex::Real dGambarU21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::GambarU2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::GambarU2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::GambarU2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::GambarU2))/dx[1];
         amrex::Real dGambarU22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::GambarU2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::GambarU2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::GambarU2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::GambarU2))/dx[2];
         amrex::Real gam00 = gambar00*std::exp(4*phi);
         amrex::Real gam01 = gambar01*std::exp(4*phi);
         amrex::Real gam02 = gambar02*std::exp(4*phi);
         amrex::Real gam10 = gambar10*std::exp(4*phi);
         amrex::Real gam11 = gambar11*std::exp(4*phi);
         amrex::Real gam12 = gambar12*std::exp(4*phi);
         amrex::Real gam20 = gambar20*std::exp(4*phi);
         amrex::Real gam21 = gambar21*std::exp(4*phi);
         amrex::Real gam22 = gambar22*std::exp(4*phi);
         amrex::Real gaminv00 = gambarinv00*std::exp(-4*phi);
         amrex::Real gaminv01 = gambarinv01*std::exp(-4*phi);
         amrex::Real gaminv02 = gambarinv02*std::exp(-4*phi);
         amrex::Real gaminv10 = gambarinv10*std::exp(-4*phi);
         amrex::Real gaminv11 = gambarinv11*std::exp(-4*phi);
         amrex::Real gaminv12 = gambarinv12*std::exp(-4*phi);
         amrex::Real gaminv20 = gambarinv20*std::exp(-4*phi);
         amrex::Real gaminv21 = gambarinv21*std::exp(-4*phi);
         amrex::Real gaminv22 = gambarinv22*std::exp(-4*phi);
         amrex::Real GambarULL000 = 0.5*dgambar000*gambarinv00 + 0.5*gambarinv01*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv02*(-dgambar002 + 2*dgambar200);
         amrex::Real GambarULL001 = 0.5*dgambar001*gambarinv00 + 0.5*gambarinv01*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv02*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GambarULL002 = 0.5*dgambar002*gambarinv00 + 0.5*gambarinv01*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv02*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GambarULL010 = 0.5*dgambar110*gambarinv01 + 0.5*gambarinv00*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv02*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GambarULL011 = 0.5*dgambar111*gambarinv01 + 0.5*gambarinv00*(2*dgambar011 - dgambar110) + 0.5*gambarinv02*(-dgambar112 + 2*dgambar211);
         amrex::Real GambarULL012 = 0.5*dgambar112*gambarinv01 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv02*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GambarULL020 = 0.5*dgambar220*gambarinv02 + 0.5*gambarinv00*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv01*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GambarULL021 = 0.5*dgambar221*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv01*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GambarULL022 = 0.5*dgambar222*gambarinv02 + 0.5*gambarinv00*(2*dgambar022 - dgambar220) + 0.5*gambarinv01*(2*dgambar122 - dgambar221);
         amrex::Real GambarULL100 = 0.5*dgambar000*gambarinv10 + 0.5*gambarinv11*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv12*(-dgambar002 + 2*dgambar200);
         amrex::Real GambarULL101 = 0.5*dgambar001*gambarinv10 + 0.5*gambarinv11*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv12*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GambarULL102 = 0.5*dgambar002*gambarinv10 + 0.5*gambarinv11*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv12*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GambarULL110 = 0.5*dgambar110*gambarinv11 + 0.5*gambarinv10*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv12*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GambarULL111 = 0.5*dgambar111*gambarinv11 + 0.5*gambarinv10*(2*dgambar011 - dgambar110) + 0.5*gambarinv12*(-dgambar112 + 2*dgambar211);
         amrex::Real GambarULL112 = 0.5*dgambar112*gambarinv11 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv12*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GambarULL120 = 0.5*dgambar220*gambarinv12 + 0.5*gambarinv10*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv11*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GambarULL121 = 0.5*dgambar221*gambarinv12 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv11*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GambarULL122 = 0.5*dgambar222*gambarinv12 + 0.5*gambarinv10*(2*dgambar022 - dgambar220) + 0.5*gambarinv11*(2*dgambar122 - dgambar221);
         amrex::Real GambarULL200 = 0.5*dgambar000*gambarinv20 + 0.5*gambarinv21*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv22*(-dgambar002 + 2*dgambar200);
         amrex::Real GambarULL201 = 0.5*dgambar001*gambarinv20 + 0.5*gambarinv21*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv22*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GambarULL202 = 0.5*dgambar002*gambarinv20 + 0.5*gambarinv21*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv22*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GambarULL210 = 0.5*dgambar110*gambarinv21 + 0.5*gambarinv20*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv22*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GambarULL211 = 0.5*dgambar111*gambarinv21 + 0.5*gambarinv20*(2*dgambar011 - dgambar110) + 0.5*gambarinv22*(-dgambar112 + 2*dgambar211);
         amrex::Real GambarULL212 = 0.5*dgambar112*gambarinv21 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv22*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GambarULL220 = 0.5*dgambar220*gambarinv22 + 0.5*gambarinv20*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv21*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GambarULL221 = 0.5*dgambar221*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv21*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GambarULL222 = 0.5*dgambar222*gambarinv22 + 0.5*gambarinv20*(2*dgambar022 - dgambar220) + 0.5*gambarinv21*(2*dgambar122 - dgambar221);
         amrex::Real GambarLLL000 = gambar00*(0.5*dgambar000*gambarinv00 + 0.5*gambarinv01*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv02*(-dgambar002 + 2*dgambar200)) + gambar01*(0.5*dgambar000*gambarinv10 + 0.5*gambarinv11*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv12*(-dgambar002 + 2*dgambar200)) + gambar02*(0.5*dgambar000*gambarinv20 + 0.5*gambarinv21*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv22*(-dgambar002 + 2*dgambar200));
         amrex::Real GambarLLL001 = gambar00*(0.5*dgambar001*gambarinv00 + 0.5*gambarinv01*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv02*(-dgambar012 + dgambar201 + dgambar210)) + gambar01*(0.5*dgambar001*gambarinv10 + 0.5*gambarinv11*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv12*(-dgambar012 + dgambar201 + dgambar210)) + gambar02*(0.5*dgambar001*gambarinv20 + 0.5*gambarinv21*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv22*(-dgambar012 + dgambar201 + dgambar210));
         amrex::Real GambarLLL002 = gambar00*(0.5*dgambar002*gambarinv00 + 0.5*gambarinv01*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv02*(-dgambar022 + dgambar202 + dgambar220)) + gambar01*(0.5*dgambar002*gambarinv10 + 0.5*gambarinv11*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv12*(-dgambar022 + dgambar202 + dgambar220)) + gambar02*(0.5*dgambar002*gambarinv20 + 0.5*gambarinv21*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv22*(-dgambar022 + dgambar202 + dgambar220));
         amrex::Real GambarLLL010 = gambar00*(0.5*dgambar110*gambarinv01 + 0.5*gambarinv00*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv02*(-dgambar102 + dgambar201 + dgambar210)) + gambar01*(0.5*dgambar110*gambarinv11 + 0.5*gambarinv10*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv12*(-dgambar102 + dgambar201 + dgambar210)) + gambar02*(0.5*dgambar110*gambarinv21 + 0.5*gambarinv20*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv22*(-dgambar102 + dgambar201 + dgambar210));
         amrex::Real GambarLLL011 = gambar00*(0.5*dgambar111*gambarinv01 + 0.5*gambarinv00*(2*dgambar011 - dgambar110) + 0.5*gambarinv02*(-dgambar112 + 2*dgambar211)) + gambar01*(0.5*dgambar111*gambarinv11 + 0.5*gambarinv10*(2*dgambar011 - dgambar110) + 0.5*gambarinv12*(-dgambar112 + 2*dgambar211)) + gambar02*(0.5*dgambar111*gambarinv21 + 0.5*gambarinv20*(2*dgambar011 - dgambar110) + 0.5*gambarinv22*(-dgambar112 + 2*dgambar211));
         amrex::Real GambarLLL012 = gambar00*(0.5*dgambar112*gambarinv01 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv02*(-dgambar122 + dgambar212 + dgambar221)) + gambar01*(0.5*dgambar112*gambarinv11 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv12*(-dgambar122 + dgambar212 + dgambar221)) + gambar02*(0.5*dgambar112*gambarinv21 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv22*(-dgambar122 + dgambar212 + dgambar221));
         amrex::Real GambarLLL020 = gambar00*(0.5*dgambar220*gambarinv02 + 0.5*gambarinv00*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv01*(dgambar102 + dgambar120 - dgambar201)) + gambar01*(0.5*dgambar220*gambarinv12 + 0.5*gambarinv10*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv11*(dgambar102 + dgambar120 - dgambar201)) + gambar02*(0.5*dgambar220*gambarinv22 + 0.5*gambarinv20*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv21*(dgambar102 + dgambar120 - dgambar201));
         amrex::Real GambarLLL021 = gambar00*(0.5*dgambar221*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv01*(dgambar112 + dgambar121 - dgambar211)) + gambar01*(0.5*dgambar221*gambarinv12 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv11*(dgambar112 + dgambar121 - dgambar211)) + gambar02*(0.5*dgambar221*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv21*(dgambar112 + dgambar121 - dgambar211));
         amrex::Real GambarLLL022 = gambar00*(0.5*dgambar222*gambarinv02 + 0.5*gambarinv00*(2*dgambar022 - dgambar220) + 0.5*gambarinv01*(2*dgambar122 - dgambar221)) + gambar01*(0.5*dgambar222*gambarinv12 + 0.5*gambarinv10*(2*dgambar022 - dgambar220) + 0.5*gambarinv11*(2*dgambar122 - dgambar221)) + gambar02*(0.5*dgambar222*gambarinv22 + 0.5*gambarinv20*(2*dgambar022 - dgambar220) + 0.5*gambarinv21*(2*dgambar122 - dgambar221));
         amrex::Real GambarLLL100 = gambar10*(0.5*dgambar000*gambarinv00 + 0.5*gambarinv01*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv02*(-dgambar002 + 2*dgambar200)) + gambar11*(0.5*dgambar000*gambarinv10 + 0.5*gambarinv11*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv12*(-dgambar002 + 2*dgambar200)) + gambar12*(0.5*dgambar000*gambarinv20 + 0.5*gambarinv21*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv22*(-dgambar002 + 2*dgambar200));
         amrex::Real GambarLLL101 = gambar10*(0.5*dgambar001*gambarinv00 + 0.5*gambarinv01*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv02*(-dgambar012 + dgambar201 + dgambar210)) + gambar11*(0.5*dgambar001*gambarinv10 + 0.5*gambarinv11*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv12*(-dgambar012 + dgambar201 + dgambar210)) + gambar12*(0.5*dgambar001*gambarinv20 + 0.5*gambarinv21*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv22*(-dgambar012 + dgambar201 + dgambar210));
         amrex::Real GambarLLL102 = gambar10*(0.5*dgambar002*gambarinv00 + 0.5*gambarinv01*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv02*(-dgambar022 + dgambar202 + dgambar220)) + gambar11*(0.5*dgambar002*gambarinv10 + 0.5*gambarinv11*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv12*(-dgambar022 + dgambar202 + dgambar220)) + gambar12*(0.5*dgambar002*gambarinv20 + 0.5*gambarinv21*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv22*(-dgambar022 + dgambar202 + dgambar220));
         amrex::Real GambarLLL110 = gambar10*(0.5*dgambar110*gambarinv01 + 0.5*gambarinv00*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv02*(-dgambar102 + dgambar201 + dgambar210)) + gambar11*(0.5*dgambar110*gambarinv11 + 0.5*gambarinv10*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv12*(-dgambar102 + dgambar201 + dgambar210)) + gambar12*(0.5*dgambar110*gambarinv21 + 0.5*gambarinv20*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv22*(-dgambar102 + dgambar201 + dgambar210));
         amrex::Real GambarLLL111 = gambar10*(0.5*dgambar111*gambarinv01 + 0.5*gambarinv00*(2*dgambar011 - dgambar110) + 0.5*gambarinv02*(-dgambar112 + 2*dgambar211)) + gambar11*(0.5*dgambar111*gambarinv11 + 0.5*gambarinv10*(2*dgambar011 - dgambar110) + 0.5*gambarinv12*(-dgambar112 + 2*dgambar211)) + gambar12*(0.5*dgambar111*gambarinv21 + 0.5*gambarinv20*(2*dgambar011 - dgambar110) + 0.5*gambarinv22*(-dgambar112 + 2*dgambar211));
         amrex::Real GambarLLL112 = gambar10*(0.5*dgambar112*gambarinv01 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv02*(-dgambar122 + dgambar212 + dgambar221)) + gambar11*(0.5*dgambar112*gambarinv11 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv12*(-dgambar122 + dgambar212 + dgambar221)) + gambar12*(0.5*dgambar112*gambarinv21 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv22*(-dgambar122 + dgambar212 + dgambar221));
         amrex::Real GambarLLL120 = gambar10*(0.5*dgambar220*gambarinv02 + 0.5*gambarinv00*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv01*(dgambar102 + dgambar120 - dgambar201)) + gambar11*(0.5*dgambar220*gambarinv12 + 0.5*gambarinv10*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv11*(dgambar102 + dgambar120 - dgambar201)) + gambar12*(0.5*dgambar220*gambarinv22 + 0.5*gambarinv20*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv21*(dgambar102 + dgambar120 - dgambar201));
         amrex::Real GambarLLL121 = gambar10*(0.5*dgambar221*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv01*(dgambar112 + dgambar121 - dgambar211)) + gambar11*(0.5*dgambar221*gambarinv12 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv11*(dgambar112 + dgambar121 - dgambar211)) + gambar12*(0.5*dgambar221*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv21*(dgambar112 + dgambar121 - dgambar211));
         amrex::Real GambarLLL122 = gambar10*(0.5*dgambar222*gambarinv02 + 0.5*gambarinv00*(2*dgambar022 - dgambar220) + 0.5*gambarinv01*(2*dgambar122 - dgambar221)) + gambar11*(0.5*dgambar222*gambarinv12 + 0.5*gambarinv10*(2*dgambar022 - dgambar220) + 0.5*gambarinv11*(2*dgambar122 - dgambar221)) + gambar12*(0.5*dgambar222*gambarinv22 + 0.5*gambarinv20*(2*dgambar022 - dgambar220) + 0.5*gambarinv21*(2*dgambar122 - dgambar221));
         amrex::Real GambarLLL200 = gambar20*(0.5*dgambar000*gambarinv00 + 0.5*gambarinv01*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv02*(-dgambar002 + 2*dgambar200)) + gambar21*(0.5*dgambar000*gambarinv10 + 0.5*gambarinv11*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv12*(-dgambar002 + 2*dgambar200)) + gambar22*(0.5*dgambar000*gambarinv20 + 0.5*gambarinv21*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv22*(-dgambar002 + 2*dgambar200));
         amrex::Real GambarLLL201 = gambar20*(0.5*dgambar001*gambarinv00 + 0.5*gambarinv01*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv02*(-dgambar012 + dgambar201 + dgambar210)) + gambar21*(0.5*dgambar001*gambarinv10 + 0.5*gambarinv11*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv12*(-dgambar012 + dgambar201 + dgambar210)) + gambar22*(0.5*dgambar001*gambarinv20 + 0.5*gambarinv21*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv22*(-dgambar012 + dgambar201 + dgambar210));
         amrex::Real GambarLLL202 = gambar20*(0.5*dgambar002*gambarinv00 + 0.5*gambarinv01*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv02*(-dgambar022 + dgambar202 + dgambar220)) + gambar21*(0.5*dgambar002*gambarinv10 + 0.5*gambarinv11*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv12*(-dgambar022 + dgambar202 + dgambar220)) + gambar22*(0.5*dgambar002*gambarinv20 + 0.5*gambarinv21*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv22*(-dgambar022 + dgambar202 + dgambar220));
         amrex::Real GambarLLL210 = gambar20*(0.5*dgambar110*gambarinv01 + 0.5*gambarinv00*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv02*(-dgambar102 + dgambar201 + dgambar210)) + gambar21*(0.5*dgambar110*gambarinv11 + 0.5*gambarinv10*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv12*(-dgambar102 + dgambar201 + dgambar210)) + gambar22*(0.5*dgambar110*gambarinv21 + 0.5*gambarinv20*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv22*(-dgambar102 + dgambar201 + dgambar210));
         amrex::Real GambarLLL211 = gambar20*(0.5*dgambar111*gambarinv01 + 0.5*gambarinv00*(2*dgambar011 - dgambar110) + 0.5*gambarinv02*(-dgambar112 + 2*dgambar211)) + gambar21*(0.5*dgambar111*gambarinv11 + 0.5*gambarinv10*(2*dgambar011 - dgambar110) + 0.5*gambarinv12*(-dgambar112 + 2*dgambar211)) + gambar22*(0.5*dgambar111*gambarinv21 + 0.5*gambarinv20*(2*dgambar011 - dgambar110) + 0.5*gambarinv22*(-dgambar112 + 2*dgambar211));
         amrex::Real GambarLLL212 = gambar20*(0.5*dgambar112*gambarinv01 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv02*(-dgambar122 + dgambar212 + dgambar221)) + gambar21*(0.5*dgambar112*gambarinv11 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv12*(-dgambar122 + dgambar212 + dgambar221)) + gambar22*(0.5*dgambar112*gambarinv21 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv22*(-dgambar122 + dgambar212 + dgambar221));
         amrex::Real GambarLLL220 = gambar20*(0.5*dgambar220*gambarinv02 + 0.5*gambarinv00*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv01*(dgambar102 + dgambar120 - dgambar201)) + gambar21*(0.5*dgambar220*gambarinv12 + 0.5*gambarinv10*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv11*(dgambar102 + dgambar120 - dgambar201)) + gambar22*(0.5*dgambar220*gambarinv22 + 0.5*gambarinv20*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv21*(dgambar102 + dgambar120 - dgambar201));
         amrex::Real GambarLLL221 = gambar20*(0.5*dgambar221*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv01*(dgambar112 + dgambar121 - dgambar211)) + gambar21*(0.5*dgambar221*gambarinv12 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv11*(dgambar112 + dgambar121 - dgambar211)) + gambar22*(0.5*dgambar221*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv21*(dgambar112 + dgambar121 - dgambar211));
         amrex::Real GambarLLL222 = gambar20*(0.5*dgambar222*gambarinv02 + 0.5*gambarinv00*(2*dgambar022 - dgambar220) + 0.5*gambarinv01*(2*dgambar122 - dgambar221)) + gambar21*(0.5*dgambar222*gambarinv12 + 0.5*gambarinv10*(2*dgambar022 - dgambar220) + 0.5*gambarinv11*(2*dgambar122 - dgambar221)) + gambar22*(0.5*dgambar222*gambarinv22 + 0.5*gambarinv20*(2*dgambar022 - dgambar220) + 0.5*gambarinv21*(2*dgambar122 - dgambar221));
         amrex::Real GamULL000 = 0.5*dgambar000*gambarinv00 - 2*dphi0*gambar00*gambarinv00 + 4*dphi0 - 2*dphi1*gambar00*gambarinv01 - 2*dphi2*gambar00*gambarinv02 + 0.5*gambarinv01*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv02*(-dgambar002 + 2*dgambar200);
         amrex::Real GamULL001 = 0.5*dgambar001*gambarinv00 - 2*dphi0*gambar01*gambarinv00 - 2*dphi1*gambar01*gambarinv01 + 2*dphi1 - 2*dphi2*gambar01*gambarinv02 + 0.5*gambarinv01*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv02*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GamULL002 = 0.5*dgambar002*gambarinv00 - 2*dphi0*gambar02*gambarinv00 - 2*dphi1*gambar02*gambarinv01 - 2*dphi2*gambar02*gambarinv02 + 2*dphi2 + 0.5*gambarinv01*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv02*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GamULL010 = 0.5*dgambar110*gambarinv01 - 2*dphi0*gambar10*gambarinv00 - 2*dphi1*gambar10*gambarinv01 + 2*dphi1 - 2*dphi2*gambar10*gambarinv02 + 0.5*gambarinv00*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv02*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GamULL011 = 0.5*dgambar111*gambarinv01 - 2*dphi0*gambar11*gambarinv00 - 2*dphi1*gambar11*gambarinv01 - 2*dphi2*gambar11*gambarinv02 + 0.5*gambarinv00*(2*dgambar011 - dgambar110) + 0.5*gambarinv02*(-dgambar112 + 2*dgambar211);
         amrex::Real GamULL012 = 0.5*dgambar112*gambarinv01 - 2*dphi0*gambar12*gambarinv00 - 2*dphi1*gambar12*gambarinv01 - 2*dphi2*gambar12*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv02*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GamULL020 = 0.5*dgambar220*gambarinv02 - 2*dphi0*gambar20*gambarinv00 - 2*dphi1*gambar20*gambarinv01 - 2*dphi2*gambar20*gambarinv02 + 2*dphi2 + 0.5*gambarinv00*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv01*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GamULL021 = 0.5*dgambar221*gambarinv02 - 2*dphi0*gambar21*gambarinv00 - 2*dphi1*gambar21*gambarinv01 - 2*dphi2*gambar21*gambarinv02 + 0.5*gambarinv00*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv01*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GamULL022 = 0.5*dgambar222*gambarinv02 - 2*dphi0*gambar22*gambarinv00 - 2*dphi1*gambar22*gambarinv01 - 2*dphi2*gambar22*gambarinv02 + 0.5*gambarinv00*(2*dgambar022 - dgambar220) + 0.5*gambarinv01*(2*dgambar122 - dgambar221);
         amrex::Real GamULL100 = 0.5*dgambar000*gambarinv10 - 2*dphi0*gambar00*gambarinv10 - 2*dphi1*gambar00*gambarinv11 - 2*dphi2*gambar00*gambarinv12 + 0.5*gambarinv11*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv12*(-dgambar002 + 2*dgambar200);
         amrex::Real GamULL101 = 0.5*dgambar001*gambarinv10 - 2*dphi0*gambar01*gambarinv10 + 2*dphi0 - 2*dphi1*gambar01*gambarinv11 - 2*dphi2*gambar01*gambarinv12 + 0.5*gambarinv11*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv12*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GamULL102 = 0.5*dgambar002*gambarinv10 - 2*dphi0*gambar02*gambarinv10 - 2*dphi1*gambar02*gambarinv11 - 2*dphi2*gambar02*gambarinv12 + 0.5*gambarinv11*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv12*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GamULL110 = 0.5*dgambar110*gambarinv11 - 2*dphi0*gambar10*gambarinv10 + 2*dphi0 - 2*dphi1*gambar10*gambarinv11 - 2*dphi2*gambar10*gambarinv12 + 0.5*gambarinv10*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv12*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GamULL111 = 0.5*dgambar111*gambarinv11 - 2*dphi0*gambar11*gambarinv10 - 2*dphi1*gambar11*gambarinv11 + 4*dphi1 - 2*dphi2*gambar11*gambarinv12 + 0.5*gambarinv10*(2*dgambar011 - dgambar110) + 0.5*gambarinv12*(-dgambar112 + 2*dgambar211);
         amrex::Real GamULL112 = 0.5*dgambar112*gambarinv11 - 2*dphi0*gambar12*gambarinv10 - 2*dphi1*gambar12*gambarinv11 - 2*dphi2*gambar12*gambarinv12 + 2*dphi2 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv12*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GamULL120 = 0.5*dgambar220*gambarinv12 - 2*dphi0*gambar20*gambarinv10 - 2*dphi1*gambar20*gambarinv11 - 2*dphi2*gambar20*gambarinv12 + 0.5*gambarinv10*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv11*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GamULL121 = 0.5*dgambar221*gambarinv12 - 2*dphi0*gambar21*gambarinv10 - 2*dphi1*gambar21*gambarinv11 - 2*dphi2*gambar21*gambarinv12 + 2*dphi2 + 0.5*gambarinv10*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv11*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GamULL122 = 0.5*dgambar222*gambarinv12 - 2*dphi0*gambar22*gambarinv10 - 2*dphi1*gambar22*gambarinv11 - 2*dphi2*gambar22*gambarinv12 + 0.5*gambarinv10*(2*dgambar022 - dgambar220) + 0.5*gambarinv11*(2*dgambar122 - dgambar221);
         amrex::Real GamULL200 = 0.5*dgambar000*gambarinv20 - 2*dphi0*gambar00*gambarinv20 - 2*dphi1*gambar00*gambarinv21 - 2*dphi2*gambar00*gambarinv22 + 0.5*gambarinv21*(-dgambar001 + 2*dgambar100) + 0.5*gambarinv22*(-dgambar002 + 2*dgambar200);
         amrex::Real GamULL201 = 0.5*dgambar001*gambarinv20 - 2*dphi0*gambar01*gambarinv20 - 2*dphi1*gambar01*gambarinv21 - 2*dphi2*gambar01*gambarinv22 + 0.5*gambarinv21*(-dgambar011 + dgambar101 + dgambar110) + 0.5*gambarinv22*(-dgambar012 + dgambar201 + dgambar210);
         amrex::Real GamULL202 = 0.5*dgambar002*gambarinv20 - 2*dphi0*gambar02*gambarinv20 + 2*dphi0 - 2*dphi1*gambar02*gambarinv21 - 2*dphi2*gambar02*gambarinv22 + 0.5*gambarinv21*(-dgambar021 + dgambar102 + dgambar120) + 0.5*gambarinv22*(-dgambar022 + dgambar202 + dgambar220);
         amrex::Real GamULL210 = 0.5*dgambar110*gambarinv21 - 2*dphi0*gambar10*gambarinv20 - 2*dphi1*gambar10*gambarinv21 - 2*dphi2*gambar10*gambarinv22 + 0.5*gambarinv20*(dgambar001 + dgambar010 - dgambar100) + 0.5*gambarinv22*(-dgambar102 + dgambar201 + dgambar210);
         amrex::Real GamULL211 = 0.5*dgambar111*gambarinv21 - 2*dphi0*gambar11*gambarinv20 - 2*dphi1*gambar11*gambarinv21 - 2*dphi2*gambar11*gambarinv22 + 0.5*gambarinv20*(2*dgambar011 - dgambar110) + 0.5*gambarinv22*(-dgambar112 + 2*dgambar211);
         amrex::Real GamULL212 = 0.5*dgambar112*gambarinv21 - 2*dphi0*gambar12*gambarinv20 - 2*dphi1*gambar12*gambarinv21 + 2*dphi1 - 2*dphi2*gambar12*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar120) + 0.5*gambarinv22*(-dgambar122 + dgambar212 + dgambar221);
         amrex::Real GamULL220 = 0.5*dgambar220*gambarinv22 - 2*dphi0*gambar20*gambarinv20 + 2*dphi0 - 2*dphi1*gambar20*gambarinv21 - 2*dphi2*gambar20*gambarinv22 + 0.5*gambarinv20*(dgambar002 + dgambar020 - dgambar200) + 0.5*gambarinv21*(dgambar102 + dgambar120 - dgambar201);
         amrex::Real GamULL221 = 0.5*dgambar221*gambarinv22 - 2*dphi0*gambar21*gambarinv20 - 2*dphi1*gambar21*gambarinv21 + 2*dphi1 - 2*dphi2*gambar21*gambarinv22 + 0.5*gambarinv20*(dgambar012 + dgambar021 - dgambar210) + 0.5*gambarinv21*(dgambar112 + dgambar121 - dgambar211);
         amrex::Real GamULL222 = 0.5*dgambar222*gambarinv22 - 2*dphi0*gambar22*gambarinv20 - 2*dphi1*gambar22*gambarinv21 - 2*dphi2*gambar22*gambarinv22 + 4*dphi2 + 0.5*gambarinv20*(2*dgambar022 - dgambar220) + 0.5*gambarinv21*(2*dgambar122 - dgambar221);
         amrex::Real AbarUU00 = Abar00*std::pow(gambarinv00, 2) + Abar01*gambarinv00*gambarinv01 + Abar02*gambarinv00*gambarinv02 + Abar10*gambarinv00*gambarinv01 + Abar11*std::pow(gambarinv01, 2) + Abar12*gambarinv01*gambarinv02 + Abar20*gambarinv00*gambarinv02 + Abar21*gambarinv01*gambarinv02 + Abar22*std::pow(gambarinv02, 2);
         amrex::Real AbarUU01 = Abar00*gambarinv00*gambarinv10 + Abar01*gambarinv00*gambarinv11 + Abar02*gambarinv00*gambarinv12 + Abar10*gambarinv01*gambarinv10 + Abar11*gambarinv01*gambarinv11 + Abar12*gambarinv01*gambarinv12 + Abar20*gambarinv02*gambarinv10 + Abar21*gambarinv02*gambarinv11 + Abar22*gambarinv02*gambarinv12;
         amrex::Real AbarUU02 = Abar00*gambarinv00*gambarinv20 + Abar01*gambarinv00*gambarinv21 + Abar02*gambarinv00*gambarinv22 + Abar10*gambarinv01*gambarinv20 + Abar11*gambarinv01*gambarinv21 + Abar12*gambarinv01*gambarinv22 + Abar20*gambarinv02*gambarinv20 + Abar21*gambarinv02*gambarinv21 + Abar22*gambarinv02*gambarinv22;
         amrex::Real AbarUU10 = Abar00*gambarinv00*gambarinv10 + Abar01*gambarinv01*gambarinv10 + Abar02*gambarinv02*gambarinv10 + Abar10*gambarinv00*gambarinv11 + Abar11*gambarinv01*gambarinv11 + Abar12*gambarinv02*gambarinv11 + Abar20*gambarinv00*gambarinv12 + Abar21*gambarinv01*gambarinv12 + Abar22*gambarinv02*gambarinv12;
         amrex::Real AbarUU11 = Abar00*std::pow(gambarinv10, 2) + Abar01*gambarinv10*gambarinv11 + Abar02*gambarinv10*gambarinv12 + Abar10*gambarinv10*gambarinv11 + Abar11*std::pow(gambarinv11, 2) + Abar12*gambarinv11*gambarinv12 + Abar20*gambarinv10*gambarinv12 + Abar21*gambarinv11*gambarinv12 + Abar22*std::pow(gambarinv12, 2);
         amrex::Real AbarUU12 = Abar00*gambarinv10*gambarinv20 + Abar01*gambarinv10*gambarinv21 + Abar02*gambarinv10*gambarinv22 + Abar10*gambarinv11*gambarinv20 + Abar11*gambarinv11*gambarinv21 + Abar12*gambarinv11*gambarinv22 + Abar20*gambarinv12*gambarinv20 + Abar21*gambarinv12*gambarinv21 + Abar22*gambarinv12*gambarinv22;
         amrex::Real AbarUU20 = Abar00*gambarinv00*gambarinv20 + Abar01*gambarinv01*gambarinv20 + Abar02*gambarinv02*gambarinv20 + Abar10*gambarinv00*gambarinv21 + Abar11*gambarinv01*gambarinv21 + Abar12*gambarinv02*gambarinv21 + Abar20*gambarinv00*gambarinv22 + Abar21*gambarinv01*gambarinv22 + Abar22*gambarinv02*gambarinv22;
         amrex::Real AbarUU21 = Abar00*gambarinv10*gambarinv20 + Abar01*gambarinv11*gambarinv20 + Abar02*gambarinv12*gambarinv20 + Abar10*gambarinv10*gambarinv21 + Abar11*gambarinv11*gambarinv21 + Abar12*gambarinv12*gambarinv21 + Abar20*gambarinv10*gambarinv22 + Abar21*gambarinv11*gambarinv22 + Abar22*gambarinv12*gambarinv22;
         amrex::Real AbarUU22 = Abar00*std::pow(gambarinv20, 2) + Abar01*gambarinv20*gambarinv21 + Abar02*gambarinv20*gambarinv22 + Abar10*gambarinv20*gambarinv21 + Abar11*std::pow(gambarinv21, 2) + Abar12*gambarinv21*gambarinv22 + Abar20*gambarinv20*gambarinv22 + Abar21*gambarinv21*gambarinv22 + Abar22*std::pow(gambarinv22, 2);
         amrex::Real AbarUL00 = Abar20*gambarinv02;
         amrex::Real AbarUL01 = Abar21*gambarinv02;
         amrex::Real AbarUL02 = Abar22*gambarinv02;
         amrex::Real AbarUL10 = Abar20*gambarinv12;
         amrex::Real AbarUL11 = Abar21*gambarinv12;
         amrex::Real AbarUL12 = Abar22*gambarinv12;
         amrex::Real AbarUL20 = Abar20*gambarinv22;
         amrex::Real AbarUL21 = Abar21*gambarinv22;
         amrex::Real AbarUL22 = Abar22*gambarinv22;
         amrex::Real RLL00 = 1.0*GambarLLL000*GambarU0 + 3*GambarLLL000*GambarULL000*gambarinv00 + GambarLLL000*GambarULL001*gambarinv01 + GambarLLL000*GambarULL002*gambarinv02 + 2*GambarLLL000*GambarULL010*gambarinv10 + 2*GambarLLL000*GambarULL020*gambarinv20 + 1.0*GambarLLL001*GambarU1 + 2*GambarLLL001*GambarULL000*gambarinv01 + 2*GambarLLL001*GambarULL010*gambarinv11 + 2*GambarLLL001*GambarULL020*gambarinv21 + 1.0*GambarLLL002*GambarU2 + 2*GambarLLL002*GambarULL000*gambarinv02 + 2*GambarLLL002*GambarULL010*gambarinv12 + 2*GambarLLL002*GambarULL020*gambarinv22 + GambarLLL010*GambarULL000*gambarinv10 + GambarLLL010*GambarULL001*gambarinv11 + GambarLLL010*GambarULL002*gambarinv12 + 2*GambarLLL010*GambarULL100*gambarinv00 + 2*GambarLLL010*GambarULL110*gambarinv10 + 2*GambarLLL010*GambarULL120*gambarinv20 + 2*GambarLLL011*GambarULL100*gambarinv01 + 2*GambarLLL011*GambarULL110*gambarinv11 + 2*GambarLLL011*GambarULL120*gambarinv21 + 2*GambarLLL012*GambarULL100*gambarinv02 + 2*GambarLLL012*GambarULL110*gambarinv12 + 2*GambarLLL012*GambarULL120*gambarinv22 + GambarLLL020*GambarULL000*gambarinv20 + GambarLLL020*GambarULL001*gambarinv21 + GambarLLL020*GambarULL002*gambarinv22 + 2*GambarLLL020*GambarULL200*gambarinv00 + 2*GambarLLL020*GambarULL210*gambarinv10 + 2*GambarLLL020*GambarULL220*gambarinv20 + 2*GambarLLL021*GambarULL200*gambarinv01 + 2*GambarLLL021*GambarULL210*gambarinv11 + 2*GambarLLL021*GambarULL220*gambarinv21 + 2*GambarLLL022*GambarULL200*gambarinv02 + 2*GambarLLL022*GambarULL210*gambarinv12 + 2*GambarLLL022*GambarULL220*gambarinv22 + GambarLLL100*GambarULL100*gambarinv00 + GambarLLL100*GambarULL101*gambarinv01 + GambarLLL100*GambarULL102*gambarinv02 + GambarLLL110*GambarULL100*gambarinv10 + GambarLLL110*GambarULL101*gambarinv11 + GambarLLL110*GambarULL102*gambarinv12 + GambarLLL120*GambarULL100*gambarinv20 + GambarLLL120*GambarULL101*gambarinv21 + GambarLLL120*GambarULL102*gambarinv22 + GambarLLL200*GambarULL200*gambarinv00 + GambarLLL200*GambarULL201*gambarinv01 + GambarLLL200*GambarULL202*gambarinv02 + GambarLLL210*GambarULL200*gambarinv10 + GambarLLL210*GambarULL201*gambarinv11 + GambarLLL210*GambarULL202*gambarinv12 + GambarLLL220*GambarULL200*gambarinv20 + GambarLLL220*GambarULL201*gambarinv21 + GambarLLL220*GambarULL202*gambarinv22 - 2*GambarULL000*dphi0 - 2*GambarULL100*dphi1 - 2*GambarULL200*dphi2 + 1.0*dGambarU00*gambar00 + 1.0*dGambarU10*gambar10 + 1.0*dGambarU20*gambar20 - 0.5*ddgambar0000*gambarinv00 - 0.5*ddgambar0001*gambarinv01 - 0.5*ddgambar0002*gambarinv02 - 0.5*ddgambar0010*gambarinv10 - 0.5*ddgambar0011*gambarinv11 - 0.5*ddgambar0012*gambarinv12 - 0.5*ddgambar0020*gambarinv20 - 0.5*ddgambar0021*gambarinv21 - 0.5*ddgambar0022*gambarinv22 - 2*ddphi00 - 4*std::pow(dphi0, 2)*gambar00*gambarinv00 + 4*std::pow(dphi0, 2) - 4*dphi0*dphi1*gambar00*gambarinv01 - 4*dphi0*dphi1*gambar00*gambarinv10 - 4*dphi0*dphi2*gambar00*gambarinv02 - 4*dphi0*dphi2*gambar00*gambarinv20 - 4*std::pow(dphi1, 2)*gambar00*gambarinv11 - 4*dphi1*dphi2*gambar00*gambarinv12 - 4*dphi1*dphi2*gambar00*gambarinv21 - 4*std::pow(dphi2, 2)*gambar00*gambarinv22 - 2*gambar00*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar00*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar00*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar00*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar00*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar00*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar00*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar00*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar00*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22);
         amrex::Real RLL01 = GambarLLL001*GambarULL000*gambarinv00 + GambarLLL001*GambarULL001*gambarinv01 + GambarLLL001*GambarULL002*gambarinv02 + GambarLLL011*GambarULL000*gambarinv10 + GambarLLL011*GambarULL001*gambarinv11 + GambarLLL011*GambarULL002*gambarinv12 + GambarLLL021*GambarULL000*gambarinv20 + GambarLLL021*GambarULL001*gambarinv21 + GambarLLL021*GambarULL002*gambarinv22 + GambarLLL101*GambarULL100*gambarinv00 + GambarLLL101*GambarULL101*gambarinv01 + GambarLLL101*GambarULL102*gambarinv02 + GambarLLL111*GambarULL100*gambarinv10 + GambarLLL111*GambarULL101*gambarinv11 + GambarLLL111*GambarULL102*gambarinv12 + GambarLLL121*GambarULL100*gambarinv20 + GambarLLL121*GambarULL101*gambarinv21 + GambarLLL121*GambarULL102*gambarinv22 + GambarLLL201*GambarULL200*gambarinv00 + GambarLLL201*GambarULL201*gambarinv01 + GambarLLL201*GambarULL202*gambarinv02 + GambarLLL211*GambarULL200*gambarinv10 + GambarLLL211*GambarULL201*gambarinv11 + GambarLLL211*GambarULL202*gambarinv12 + GambarLLL221*GambarULL200*gambarinv20 + GambarLLL221*GambarULL201*gambarinv21 + GambarLLL221*GambarULL202*gambarinv22 + 0.5*GambarU0*(GambarLLL010 + GambarLLL100) + 0.5*GambarU1*(GambarLLL011 + GambarLLL101) + 0.5*GambarU2*(GambarLLL012 + GambarLLL102) - 2*GambarULL001*dphi0 - 2*GambarULL101*dphi1 - 2*GambarULL201*dphi2 + 0.5*dGambarU00*gambar01 + 0.5*dGambarU01*gambar00 + 0.5*dGambarU10*gambar11 + 0.5*dGambarU11*gambar10 + 0.5*dGambarU20*gambar21 + 0.5*dGambarU21*gambar20 - 0.5*ddgambar0100*gambarinv00 - 0.5*ddgambar0101*gambarinv01 - 0.5*ddgambar0102*gambarinv02 - 0.5*ddgambar0110*gambarinv10 - 0.5*ddgambar0111*gambarinv11 - 0.5*ddgambar0112*gambarinv12 - 0.5*ddgambar0120*gambarinv20 - 0.5*ddgambar0121*gambarinv21 - 0.5*ddgambar0122*gambarinv22 - 2*ddphi01 - 4*std::pow(dphi0, 2)*gambar01*gambarinv00 - 4*dphi0*dphi1*gambar01*gambarinv01 - 4*dphi0*dphi1*gambar01*gambarinv10 + 4*dphi0*dphi1 - 4*dphi0*dphi2*gambar01*gambarinv02 - 4*dphi0*dphi2*gambar01*gambarinv20 - 4*std::pow(dphi1, 2)*gambar01*gambarinv11 - 4*dphi1*dphi2*gambar01*gambarinv12 - 4*dphi1*dphi2*gambar01*gambarinv21 - 4*std::pow(dphi2, 2)*gambar01*gambarinv22 - 2*gambar01*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar01*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar01*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar01*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar01*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar01*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar01*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar01*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar01*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL000*GambarULL001 + GambarLLL100*GambarULL000) + gambarinv00*(GambarLLL010*GambarULL101 + GambarLLL110*GambarULL100) + gambarinv00*(GambarLLL020*GambarULL201 + GambarLLL120*GambarULL200) + gambarinv01*(GambarLLL001*GambarULL001 + GambarLLL101*GambarULL000) + gambarinv01*(GambarLLL011*GambarULL101 + GambarLLL111*GambarULL100) + gambarinv01*(GambarLLL021*GambarULL201 + GambarLLL121*GambarULL200) + gambarinv02*(GambarLLL002*GambarULL001 + GambarLLL102*GambarULL000) + gambarinv02*(GambarLLL012*GambarULL101 + GambarLLL112*GambarULL100) + gambarinv02*(GambarLLL022*GambarULL201 + GambarLLL122*GambarULL200) + gambarinv10*(GambarLLL000*GambarULL011 + GambarLLL100*GambarULL010) + gambarinv10*(GambarLLL010*GambarULL111 + GambarLLL110*GambarULL110) + gambarinv10*(GambarLLL020*GambarULL211 + GambarLLL120*GambarULL210) + gambarinv11*(GambarLLL001*GambarULL011 + GambarLLL101*GambarULL010) + gambarinv11*(GambarLLL011*GambarULL111 + GambarLLL111*GambarULL110) + gambarinv11*(GambarLLL021*GambarULL211 + GambarLLL121*GambarULL210) + gambarinv12*(GambarLLL002*GambarULL011 + GambarLLL102*GambarULL010) + gambarinv12*(GambarLLL012*GambarULL111 + GambarLLL112*GambarULL110) + gambarinv12*(GambarLLL022*GambarULL211 + GambarLLL122*GambarULL210) + gambarinv20*(GambarLLL000*GambarULL021 + GambarLLL100*GambarULL020) + gambarinv20*(GambarLLL010*GambarULL121 + GambarLLL110*GambarULL120) + gambarinv20*(GambarLLL020*GambarULL221 + GambarLLL120*GambarULL220) + gambarinv21*(GambarLLL001*GambarULL021 + GambarLLL101*GambarULL020) + gambarinv21*(GambarLLL011*GambarULL121 + GambarLLL111*GambarULL120) + gambarinv21*(GambarLLL021*GambarULL221 + GambarLLL121*GambarULL220) + gambarinv22*(GambarLLL002*GambarULL021 + GambarLLL102*GambarULL020) + gambarinv22*(GambarLLL012*GambarULL121 + GambarLLL112*GambarULL120) + gambarinv22*(GambarLLL022*GambarULL221 + GambarLLL122*GambarULL220);
         amrex::Real RLL02 = GambarLLL002*GambarULL000*gambarinv00 + GambarLLL002*GambarULL001*gambarinv01 + GambarLLL002*GambarULL002*gambarinv02 + GambarLLL012*GambarULL000*gambarinv10 + GambarLLL012*GambarULL001*gambarinv11 + GambarLLL012*GambarULL002*gambarinv12 + GambarLLL022*GambarULL000*gambarinv20 + GambarLLL022*GambarULL001*gambarinv21 + GambarLLL022*GambarULL002*gambarinv22 + GambarLLL102*GambarULL100*gambarinv00 + GambarLLL102*GambarULL101*gambarinv01 + GambarLLL102*GambarULL102*gambarinv02 + GambarLLL112*GambarULL100*gambarinv10 + GambarLLL112*GambarULL101*gambarinv11 + GambarLLL112*GambarULL102*gambarinv12 + GambarLLL122*GambarULL100*gambarinv20 + GambarLLL122*GambarULL101*gambarinv21 + GambarLLL122*GambarULL102*gambarinv22 + GambarLLL202*GambarULL200*gambarinv00 + GambarLLL202*GambarULL201*gambarinv01 + GambarLLL202*GambarULL202*gambarinv02 + GambarLLL212*GambarULL200*gambarinv10 + GambarLLL212*GambarULL201*gambarinv11 + GambarLLL212*GambarULL202*gambarinv12 + GambarLLL222*GambarULL200*gambarinv20 + GambarLLL222*GambarULL201*gambarinv21 + GambarLLL222*GambarULL202*gambarinv22 + 0.5*GambarU0*(GambarLLL020 + GambarLLL200) + 0.5*GambarU1*(GambarLLL021 + GambarLLL201) + 0.5*GambarU2*(GambarLLL022 + GambarLLL202) - 2*GambarULL002*dphi0 - 2*GambarULL102*dphi1 - 2*GambarULL202*dphi2 + 0.5*dGambarU00*gambar02 + 0.5*dGambarU02*gambar00 + 0.5*dGambarU10*gambar12 + 0.5*dGambarU12*gambar10 + 0.5*dGambarU20*gambar22 + 0.5*dGambarU22*gambar20 - 0.5*ddgambar0200*gambarinv00 - 0.5*ddgambar0201*gambarinv01 - 0.5*ddgambar0202*gambarinv02 - 0.5*ddgambar0210*gambarinv10 - 0.5*ddgambar0211*gambarinv11 - 0.5*ddgambar0212*gambarinv12 - 0.5*ddgambar0220*gambarinv20 - 0.5*ddgambar0221*gambarinv21 - 0.5*ddgambar0222*gambarinv22 - 2*ddphi02 - 4*std::pow(dphi0, 2)*gambar02*gambarinv00 - 4*dphi0*dphi1*gambar02*gambarinv01 - 4*dphi0*dphi1*gambar02*gambarinv10 - 4*dphi0*dphi2*gambar02*gambarinv02 - 4*dphi0*dphi2*gambar02*gambarinv20 + 4*dphi0*dphi2 - 4*std::pow(dphi1, 2)*gambar02*gambarinv11 - 4*dphi1*dphi2*gambar02*gambarinv12 - 4*dphi1*dphi2*gambar02*gambarinv21 - 4*std::pow(dphi2, 2)*gambar02*gambarinv22 - 2*gambar02*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar02*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar02*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar02*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar02*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar02*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar02*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar02*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar02*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL000*GambarULL002 + GambarLLL200*GambarULL000) + gambarinv00*(GambarLLL010*GambarULL102 + GambarLLL210*GambarULL100) + gambarinv00*(GambarLLL020*GambarULL202 + GambarLLL220*GambarULL200) + gambarinv01*(GambarLLL001*GambarULL002 + GambarLLL201*GambarULL000) + gambarinv01*(GambarLLL011*GambarULL102 + GambarLLL211*GambarULL100) + gambarinv01*(GambarLLL021*GambarULL202 + GambarLLL221*GambarULL200) + gambarinv02*(GambarLLL002*GambarULL002 + GambarLLL202*GambarULL000) + gambarinv02*(GambarLLL012*GambarULL102 + GambarLLL212*GambarULL100) + gambarinv02*(GambarLLL022*GambarULL202 + GambarLLL222*GambarULL200) + gambarinv10*(GambarLLL000*GambarULL012 + GambarLLL200*GambarULL010) + gambarinv10*(GambarLLL010*GambarULL112 + GambarLLL210*GambarULL110) + gambarinv10*(GambarLLL020*GambarULL212 + GambarLLL220*GambarULL210) + gambarinv11*(GambarLLL001*GambarULL012 + GambarLLL201*GambarULL010) + gambarinv11*(GambarLLL011*GambarULL112 + GambarLLL211*GambarULL110) + gambarinv11*(GambarLLL021*GambarULL212 + GambarLLL221*GambarULL210) + gambarinv12*(GambarLLL002*GambarULL012 + GambarLLL202*GambarULL010) + gambarinv12*(GambarLLL012*GambarULL112 + GambarLLL212*GambarULL110) + gambarinv12*(GambarLLL022*GambarULL212 + GambarLLL222*GambarULL210) + gambarinv20*(GambarLLL000*GambarULL022 + GambarLLL200*GambarULL020) + gambarinv20*(GambarLLL010*GambarULL122 + GambarLLL210*GambarULL120) + gambarinv20*(GambarLLL020*GambarULL222 + GambarLLL220*GambarULL220) + gambarinv21*(GambarLLL001*GambarULL022 + GambarLLL201*GambarULL020) + gambarinv21*(GambarLLL011*GambarULL122 + GambarLLL211*GambarULL120) + gambarinv21*(GambarLLL021*GambarULL222 + GambarLLL221*GambarULL220) + gambarinv22*(GambarLLL002*GambarULL022 + GambarLLL202*GambarULL020) + gambarinv22*(GambarLLL012*GambarULL122 + GambarLLL212*GambarULL120) + gambarinv22*(GambarLLL022*GambarULL222 + GambarLLL222*GambarULL220);
         amrex::Real RLL10 = GambarLLL000*GambarULL010*gambarinv00 + GambarLLL000*GambarULL011*gambarinv01 + GambarLLL000*GambarULL012*gambarinv02 + GambarLLL010*GambarULL010*gambarinv10 + GambarLLL010*GambarULL011*gambarinv11 + GambarLLL010*GambarULL012*gambarinv12 + GambarLLL020*GambarULL010*gambarinv20 + GambarLLL020*GambarULL011*gambarinv21 + GambarLLL020*GambarULL012*gambarinv22 + GambarLLL100*GambarULL110*gambarinv00 + GambarLLL100*GambarULL111*gambarinv01 + GambarLLL100*GambarULL112*gambarinv02 + GambarLLL110*GambarULL110*gambarinv10 + GambarLLL110*GambarULL111*gambarinv11 + GambarLLL110*GambarULL112*gambarinv12 + GambarLLL120*GambarULL110*gambarinv20 + GambarLLL120*GambarULL111*gambarinv21 + GambarLLL120*GambarULL112*gambarinv22 + GambarLLL200*GambarULL210*gambarinv00 + GambarLLL200*GambarULL211*gambarinv01 + GambarLLL200*GambarULL212*gambarinv02 + GambarLLL210*GambarULL210*gambarinv10 + GambarLLL210*GambarULL211*gambarinv11 + GambarLLL210*GambarULL212*gambarinv12 + GambarLLL220*GambarULL210*gambarinv20 + GambarLLL220*GambarULL211*gambarinv21 + GambarLLL220*GambarULL212*gambarinv22 + 0.5*GambarU0*(GambarLLL010 + GambarLLL100) + 0.5*GambarU1*(GambarLLL011 + GambarLLL101) + 0.5*GambarU2*(GambarLLL012 + GambarLLL102) - 2*GambarULL010*dphi0 - 2*GambarULL110*dphi1 - 2*GambarULL210*dphi2 + 0.5*dGambarU00*gambar01 + 0.5*dGambarU01*gambar00 + 0.5*dGambarU10*gambar11 + 0.5*dGambarU11*gambar10 + 0.5*dGambarU20*gambar21 + 0.5*dGambarU21*gambar20 - 0.5*ddgambar1000*gambarinv00 - 0.5*ddgambar1001*gambarinv01 - 0.5*ddgambar1002*gambarinv02 - 0.5*ddgambar1010*gambarinv10 - 0.5*ddgambar1011*gambarinv11 - 0.5*ddgambar1012*gambarinv12 - 0.5*ddgambar1020*gambarinv20 - 0.5*ddgambar1021*gambarinv21 - 0.5*ddgambar1022*gambarinv22 - 2*ddphi10 - 4*std::pow(dphi0, 2)*gambar10*gambarinv00 - 4*dphi0*dphi1*gambar10*gambarinv01 - 4*dphi0*dphi1*gambar10*gambarinv10 + 4*dphi0*dphi1 - 4*dphi0*dphi2*gambar10*gambarinv02 - 4*dphi0*dphi2*gambar10*gambarinv20 - 4*std::pow(dphi1, 2)*gambar10*gambarinv11 - 4*dphi1*dphi2*gambar10*gambarinv12 - 4*dphi1*dphi2*gambar10*gambarinv21 - 4*std::pow(dphi2, 2)*gambar10*gambarinv22 - 2*gambar10*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar10*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar10*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar10*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar10*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar10*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar10*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar10*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar10*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL000*GambarULL001 + GambarLLL100*GambarULL000) + gambarinv00*(GambarLLL010*GambarULL101 + GambarLLL110*GambarULL100) + gambarinv00*(GambarLLL020*GambarULL201 + GambarLLL120*GambarULL200) + gambarinv01*(GambarLLL001*GambarULL001 + GambarLLL101*GambarULL000) + gambarinv01*(GambarLLL011*GambarULL101 + GambarLLL111*GambarULL100) + gambarinv01*(GambarLLL021*GambarULL201 + GambarLLL121*GambarULL200) + gambarinv02*(GambarLLL002*GambarULL001 + GambarLLL102*GambarULL000) + gambarinv02*(GambarLLL012*GambarULL101 + GambarLLL112*GambarULL100) + gambarinv02*(GambarLLL022*GambarULL201 + GambarLLL122*GambarULL200) + gambarinv10*(GambarLLL000*GambarULL011 + GambarLLL100*GambarULL010) + gambarinv10*(GambarLLL010*GambarULL111 + GambarLLL110*GambarULL110) + gambarinv10*(GambarLLL020*GambarULL211 + GambarLLL120*GambarULL210) + gambarinv11*(GambarLLL001*GambarULL011 + GambarLLL101*GambarULL010) + gambarinv11*(GambarLLL011*GambarULL111 + GambarLLL111*GambarULL110) + gambarinv11*(GambarLLL021*GambarULL211 + GambarLLL121*GambarULL210) + gambarinv12*(GambarLLL002*GambarULL011 + GambarLLL102*GambarULL010) + gambarinv12*(GambarLLL012*GambarULL111 + GambarLLL112*GambarULL110) + gambarinv12*(GambarLLL022*GambarULL211 + GambarLLL122*GambarULL210) + gambarinv20*(GambarLLL000*GambarULL021 + GambarLLL100*GambarULL020) + gambarinv20*(GambarLLL010*GambarULL121 + GambarLLL110*GambarULL120) + gambarinv20*(GambarLLL020*GambarULL221 + GambarLLL120*GambarULL220) + gambarinv21*(GambarLLL001*GambarULL021 + GambarLLL101*GambarULL020) + gambarinv21*(GambarLLL011*GambarULL121 + GambarLLL111*GambarULL120) + gambarinv21*(GambarLLL021*GambarULL221 + GambarLLL121*GambarULL220) + gambarinv22*(GambarLLL002*GambarULL021 + GambarLLL102*GambarULL020) + gambarinv22*(GambarLLL012*GambarULL121 + GambarLLL112*GambarULL120) + gambarinv22*(GambarLLL022*GambarULL221 + GambarLLL122*GambarULL220);
         amrex::Real RLL11 = GambarLLL001*GambarULL010*gambarinv00 + GambarLLL001*GambarULL011*gambarinv01 + GambarLLL001*GambarULL012*gambarinv02 + GambarLLL011*GambarULL010*gambarinv10 + GambarLLL011*GambarULL011*gambarinv11 + GambarLLL011*GambarULL012*gambarinv12 + GambarLLL021*GambarULL010*gambarinv20 + GambarLLL021*GambarULL011*gambarinv21 + GambarLLL021*GambarULL012*gambarinv22 + 2*GambarLLL100*GambarULL001*gambarinv00 + 2*GambarLLL100*GambarULL011*gambarinv10 + 2*GambarLLL100*GambarULL021*gambarinv20 + 2*GambarLLL101*GambarULL001*gambarinv01 + 2*GambarLLL101*GambarULL011*gambarinv11 + 2*GambarLLL101*GambarULL021*gambarinv21 + GambarLLL101*GambarULL110*gambarinv00 + GambarLLL101*GambarULL111*gambarinv01 + GambarLLL101*GambarULL112*gambarinv02 + 2*GambarLLL102*GambarULL001*gambarinv02 + 2*GambarLLL102*GambarULL011*gambarinv12 + 2*GambarLLL102*GambarULL021*gambarinv22 + 1.0*GambarLLL110*GambarU0 + 2*GambarLLL110*GambarULL101*gambarinv00 + 2*GambarLLL110*GambarULL111*gambarinv10 + 2*GambarLLL110*GambarULL121*gambarinv20 + 1.0*GambarLLL111*GambarU1 + 2*GambarLLL111*GambarULL101*gambarinv01 + GambarLLL111*GambarULL110*gambarinv10 + 3*GambarLLL111*GambarULL111*gambarinv11 + GambarLLL111*GambarULL112*gambarinv12 + 2*GambarLLL111*GambarULL121*gambarinv21 + 1.0*GambarLLL112*GambarU2 + 2*GambarLLL112*GambarULL101*gambarinv02 + 2*GambarLLL112*GambarULL111*gambarinv12 + 2*GambarLLL112*GambarULL121*gambarinv22 + 2*GambarLLL120*GambarULL201*gambarinv00 + 2*GambarLLL120*GambarULL211*gambarinv10 + 2*GambarLLL120*GambarULL221*gambarinv20 + GambarLLL121*GambarULL110*gambarinv20 + GambarLLL121*GambarULL111*gambarinv21 + GambarLLL121*GambarULL112*gambarinv22 + 2*GambarLLL121*GambarULL201*gambarinv01 + 2*GambarLLL121*GambarULL211*gambarinv11 + 2*GambarLLL121*GambarULL221*gambarinv21 + 2*GambarLLL122*GambarULL201*gambarinv02 + 2*GambarLLL122*GambarULL211*gambarinv12 + 2*GambarLLL122*GambarULL221*gambarinv22 + GambarLLL201*GambarULL210*gambarinv00 + GambarLLL201*GambarULL211*gambarinv01 + GambarLLL201*GambarULL212*gambarinv02 + GambarLLL211*GambarULL210*gambarinv10 + GambarLLL211*GambarULL211*gambarinv11 + GambarLLL211*GambarULL212*gambarinv12 + GambarLLL221*GambarULL210*gambarinv20 + GambarLLL221*GambarULL211*gambarinv21 + GambarLLL221*GambarULL212*gambarinv22 - 2*GambarULL011*dphi0 - 2*GambarULL111*dphi1 - 2*GambarULL211*dphi2 + 1.0*dGambarU01*gambar01 + 1.0*dGambarU11*gambar11 + 1.0*dGambarU21*gambar21 - 0.5*ddgambar1100*gambarinv00 - 0.5*ddgambar1101*gambarinv01 - 0.5*ddgambar1102*gambarinv02 - 0.5*ddgambar1110*gambarinv10 - 0.5*ddgambar1111*gambarinv11 - 0.5*ddgambar1112*gambarinv12 - 0.5*ddgambar1120*gambarinv20 - 0.5*ddgambar1121*gambarinv21 - 0.5*ddgambar1122*gambarinv22 - 2*ddphi11 - 4*std::pow(dphi0, 2)*gambar11*gambarinv00 - 4*dphi0*dphi1*gambar11*gambarinv01 - 4*dphi0*dphi1*gambar11*gambarinv10 - 4*dphi0*dphi2*gambar11*gambarinv02 - 4*dphi0*dphi2*gambar11*gambarinv20 - 4*std::pow(dphi1, 2)*gambar11*gambarinv11 + 4*std::pow(dphi1, 2) - 4*dphi1*dphi2*gambar11*gambarinv12 - 4*dphi1*dphi2*gambar11*gambarinv21 - 4*std::pow(dphi2, 2)*gambar11*gambarinv22 - 2*gambar11*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar11*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar11*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar11*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar11*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar11*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar11*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar11*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar11*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22);
         amrex::Real RLL12 = GambarLLL002*GambarULL010*gambarinv00 + GambarLLL002*GambarULL011*gambarinv01 + GambarLLL002*GambarULL012*gambarinv02 + GambarLLL012*GambarULL010*gambarinv10 + GambarLLL012*GambarULL011*gambarinv11 + GambarLLL012*GambarULL012*gambarinv12 + GambarLLL022*GambarULL010*gambarinv20 + GambarLLL022*GambarULL011*gambarinv21 + GambarLLL022*GambarULL012*gambarinv22 + GambarLLL102*GambarULL110*gambarinv00 + GambarLLL102*GambarULL111*gambarinv01 + GambarLLL102*GambarULL112*gambarinv02 + GambarLLL112*GambarULL110*gambarinv10 + GambarLLL112*GambarULL111*gambarinv11 + GambarLLL112*GambarULL112*gambarinv12 + GambarLLL122*GambarULL110*gambarinv20 + GambarLLL122*GambarULL111*gambarinv21 + GambarLLL122*GambarULL112*gambarinv22 + GambarLLL202*GambarULL210*gambarinv00 + GambarLLL202*GambarULL211*gambarinv01 + GambarLLL202*GambarULL212*gambarinv02 + GambarLLL212*GambarULL210*gambarinv10 + GambarLLL212*GambarULL211*gambarinv11 + GambarLLL212*GambarULL212*gambarinv12 + GambarLLL222*GambarULL210*gambarinv20 + GambarLLL222*GambarULL211*gambarinv21 + GambarLLL222*GambarULL212*gambarinv22 + 0.5*GambarU0*(GambarLLL120 + GambarLLL210) + 0.5*GambarU1*(GambarLLL121 + GambarLLL211) + 0.5*GambarU2*(GambarLLL122 + GambarLLL212) - 2*GambarULL012*dphi0 - 2*GambarULL112*dphi1 - 2*GambarULL212*dphi2 + 0.5*dGambarU01*gambar02 + 0.5*dGambarU02*gambar01 + 0.5*dGambarU11*gambar12 + 0.5*dGambarU12*gambar11 + 0.5*dGambarU21*gambar22 + 0.5*dGambarU22*gambar21 - 0.5*ddgambar1200*gambarinv00 - 0.5*ddgambar1201*gambarinv01 - 0.5*ddgambar1202*gambarinv02 - 0.5*ddgambar1210*gambarinv10 - 0.5*ddgambar1211*gambarinv11 - 0.5*ddgambar1212*gambarinv12 - 0.5*ddgambar1220*gambarinv20 - 0.5*ddgambar1221*gambarinv21 - 0.5*ddgambar1222*gambarinv22 - 2*ddphi12 - 4*std::pow(dphi0, 2)*gambar12*gambarinv00 - 4*dphi0*dphi1*gambar12*gambarinv01 - 4*dphi0*dphi1*gambar12*gambarinv10 - 4*dphi0*dphi2*gambar12*gambarinv02 - 4*dphi0*dphi2*gambar12*gambarinv20 - 4*std::pow(dphi1, 2)*gambar12*gambarinv11 - 4*dphi1*dphi2*gambar12*gambarinv12 - 4*dphi1*dphi2*gambar12*gambarinv21 + 4*dphi1*dphi2 - 4*std::pow(dphi2, 2)*gambar12*gambarinv22 - 2*gambar12*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar12*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar12*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar12*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar12*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar12*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar12*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar12*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar12*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL100*GambarULL002 + GambarLLL200*GambarULL001) + gambarinv00*(GambarLLL110*GambarULL102 + GambarLLL210*GambarULL101) + gambarinv00*(GambarLLL120*GambarULL202 + GambarLLL220*GambarULL201) + gambarinv01*(GambarLLL101*GambarULL002 + GambarLLL201*GambarULL001) + gambarinv01*(GambarLLL111*GambarULL102 + GambarLLL211*GambarULL101) + gambarinv01*(GambarLLL121*GambarULL202 + GambarLLL221*GambarULL201) + gambarinv02*(GambarLLL102*GambarULL002 + GambarLLL202*GambarULL001) + gambarinv02*(GambarLLL112*GambarULL102 + GambarLLL212*GambarULL101) + gambarinv02*(GambarLLL122*GambarULL202 + GambarLLL222*GambarULL201) + gambarinv10*(GambarLLL100*GambarULL012 + GambarLLL200*GambarULL011) + gambarinv10*(GambarLLL110*GambarULL112 + GambarLLL210*GambarULL111) + gambarinv10*(GambarLLL120*GambarULL212 + GambarLLL220*GambarULL211) + gambarinv11*(GambarLLL101*GambarULL012 + GambarLLL201*GambarULL011) + gambarinv11*(GambarLLL111*GambarULL112 + GambarLLL211*GambarULL111) + gambarinv11*(GambarLLL121*GambarULL212 + GambarLLL221*GambarULL211) + gambarinv12*(GambarLLL102*GambarULL012 + GambarLLL202*GambarULL011) + gambarinv12*(GambarLLL112*GambarULL112 + GambarLLL212*GambarULL111) + gambarinv12*(GambarLLL122*GambarULL212 + GambarLLL222*GambarULL211) + gambarinv20*(GambarLLL100*GambarULL022 + GambarLLL200*GambarULL021) + gambarinv20*(GambarLLL110*GambarULL122 + GambarLLL210*GambarULL121) + gambarinv20*(GambarLLL120*GambarULL222 + GambarLLL220*GambarULL221) + gambarinv21*(GambarLLL101*GambarULL022 + GambarLLL201*GambarULL021) + gambarinv21*(GambarLLL111*GambarULL122 + GambarLLL211*GambarULL121) + gambarinv21*(GambarLLL121*GambarULL222 + GambarLLL221*GambarULL221) + gambarinv22*(GambarLLL102*GambarULL022 + GambarLLL202*GambarULL021) + gambarinv22*(GambarLLL112*GambarULL122 + GambarLLL212*GambarULL121) + gambarinv22*(GambarLLL122*GambarULL222 + GambarLLL222*GambarULL221);
         amrex::Real RLL20 = GambarLLL000*GambarULL020*gambarinv00 + GambarLLL000*GambarULL021*gambarinv01 + GambarLLL000*GambarULL022*gambarinv02 + GambarLLL010*GambarULL020*gambarinv10 + GambarLLL010*GambarULL021*gambarinv11 + GambarLLL010*GambarULL022*gambarinv12 + GambarLLL020*GambarULL020*gambarinv20 + GambarLLL020*GambarULL021*gambarinv21 + GambarLLL020*GambarULL022*gambarinv22 + GambarLLL100*GambarULL120*gambarinv00 + GambarLLL100*GambarULL121*gambarinv01 + GambarLLL100*GambarULL122*gambarinv02 + GambarLLL110*GambarULL120*gambarinv10 + GambarLLL110*GambarULL121*gambarinv11 + GambarLLL110*GambarULL122*gambarinv12 + GambarLLL120*GambarULL120*gambarinv20 + GambarLLL120*GambarULL121*gambarinv21 + GambarLLL120*GambarULL122*gambarinv22 + GambarLLL200*GambarULL220*gambarinv00 + GambarLLL200*GambarULL221*gambarinv01 + GambarLLL200*GambarULL222*gambarinv02 + GambarLLL210*GambarULL220*gambarinv10 + GambarLLL210*GambarULL221*gambarinv11 + GambarLLL210*GambarULL222*gambarinv12 + GambarLLL220*GambarULL220*gambarinv20 + GambarLLL220*GambarULL221*gambarinv21 + GambarLLL220*GambarULL222*gambarinv22 + 0.5*GambarU0*(GambarLLL020 + GambarLLL200) + 0.5*GambarU1*(GambarLLL021 + GambarLLL201) + 0.5*GambarU2*(GambarLLL022 + GambarLLL202) - 2*GambarULL020*dphi0 - 2*GambarULL120*dphi1 - 2*GambarULL220*dphi2 + 0.5*dGambarU00*gambar02 + 0.5*dGambarU02*gambar00 + 0.5*dGambarU10*gambar12 + 0.5*dGambarU12*gambar10 + 0.5*dGambarU20*gambar22 + 0.5*dGambarU22*gambar20 - 0.5*ddgambar2000*gambarinv00 - 0.5*ddgambar2001*gambarinv01 - 0.5*ddgambar2002*gambarinv02 - 0.5*ddgambar2010*gambarinv10 - 0.5*ddgambar2011*gambarinv11 - 0.5*ddgambar2012*gambarinv12 - 0.5*ddgambar2020*gambarinv20 - 0.5*ddgambar2021*gambarinv21 - 0.5*ddgambar2022*gambarinv22 - 2*ddphi20 - 4*std::pow(dphi0, 2)*gambar20*gambarinv00 - 4*dphi0*dphi1*gambar20*gambarinv01 - 4*dphi0*dphi1*gambar20*gambarinv10 - 4*dphi0*dphi2*gambar20*gambarinv02 - 4*dphi0*dphi2*gambar20*gambarinv20 + 4*dphi0*dphi2 - 4*std::pow(dphi1, 2)*gambar20*gambarinv11 - 4*dphi1*dphi2*gambar20*gambarinv12 - 4*dphi1*dphi2*gambar20*gambarinv21 - 4*std::pow(dphi2, 2)*gambar20*gambarinv22 - 2*gambar20*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar20*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar20*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar20*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar20*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar20*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar20*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar20*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar20*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL000*GambarULL002 + GambarLLL200*GambarULL000) + gambarinv00*(GambarLLL010*GambarULL102 + GambarLLL210*GambarULL100) + gambarinv00*(GambarLLL020*GambarULL202 + GambarLLL220*GambarULL200) + gambarinv01*(GambarLLL001*GambarULL002 + GambarLLL201*GambarULL000) + gambarinv01*(GambarLLL011*GambarULL102 + GambarLLL211*GambarULL100) + gambarinv01*(GambarLLL021*GambarULL202 + GambarLLL221*GambarULL200) + gambarinv02*(GambarLLL002*GambarULL002 + GambarLLL202*GambarULL000) + gambarinv02*(GambarLLL012*GambarULL102 + GambarLLL212*GambarULL100) + gambarinv02*(GambarLLL022*GambarULL202 + GambarLLL222*GambarULL200) + gambarinv10*(GambarLLL000*GambarULL012 + GambarLLL200*GambarULL010) + gambarinv10*(GambarLLL010*GambarULL112 + GambarLLL210*GambarULL110) + gambarinv10*(GambarLLL020*GambarULL212 + GambarLLL220*GambarULL210) + gambarinv11*(GambarLLL001*GambarULL012 + GambarLLL201*GambarULL010) + gambarinv11*(GambarLLL011*GambarULL112 + GambarLLL211*GambarULL110) + gambarinv11*(GambarLLL021*GambarULL212 + GambarLLL221*GambarULL210) + gambarinv12*(GambarLLL002*GambarULL012 + GambarLLL202*GambarULL010) + gambarinv12*(GambarLLL012*GambarULL112 + GambarLLL212*GambarULL110) + gambarinv12*(GambarLLL022*GambarULL212 + GambarLLL222*GambarULL210) + gambarinv20*(GambarLLL000*GambarULL022 + GambarLLL200*GambarULL020) + gambarinv20*(GambarLLL010*GambarULL122 + GambarLLL210*GambarULL120) + gambarinv20*(GambarLLL020*GambarULL222 + GambarLLL220*GambarULL220) + gambarinv21*(GambarLLL001*GambarULL022 + GambarLLL201*GambarULL020) + gambarinv21*(GambarLLL011*GambarULL122 + GambarLLL211*GambarULL120) + gambarinv21*(GambarLLL021*GambarULL222 + GambarLLL221*GambarULL220) + gambarinv22*(GambarLLL002*GambarULL022 + GambarLLL202*GambarULL020) + gambarinv22*(GambarLLL012*GambarULL122 + GambarLLL212*GambarULL120) + gambarinv22*(GambarLLL022*GambarULL222 + GambarLLL222*GambarULL220);
         amrex::Real RLL21 = GambarLLL001*GambarULL020*gambarinv00 + GambarLLL001*GambarULL021*gambarinv01 + GambarLLL001*GambarULL022*gambarinv02 + GambarLLL011*GambarULL020*gambarinv10 + GambarLLL011*GambarULL021*gambarinv11 + GambarLLL011*GambarULL022*gambarinv12 + GambarLLL021*GambarULL020*gambarinv20 + GambarLLL021*GambarULL021*gambarinv21 + GambarLLL021*GambarULL022*gambarinv22 + GambarLLL101*GambarULL120*gambarinv00 + GambarLLL101*GambarULL121*gambarinv01 + GambarLLL101*GambarULL122*gambarinv02 + GambarLLL111*GambarULL120*gambarinv10 + GambarLLL111*GambarULL121*gambarinv11 + GambarLLL111*GambarULL122*gambarinv12 + GambarLLL121*GambarULL120*gambarinv20 + GambarLLL121*GambarULL121*gambarinv21 + GambarLLL121*GambarULL122*gambarinv22 + GambarLLL201*GambarULL220*gambarinv00 + GambarLLL201*GambarULL221*gambarinv01 + GambarLLL201*GambarULL222*gambarinv02 + GambarLLL211*GambarULL220*gambarinv10 + GambarLLL211*GambarULL221*gambarinv11 + GambarLLL211*GambarULL222*gambarinv12 + GambarLLL221*GambarULL220*gambarinv20 + GambarLLL221*GambarULL221*gambarinv21 + GambarLLL221*GambarULL222*gambarinv22 + 0.5*GambarU0*(GambarLLL120 + GambarLLL210) + 0.5*GambarU1*(GambarLLL121 + GambarLLL211) + 0.5*GambarU2*(GambarLLL122 + GambarLLL212) - 2*GambarULL021*dphi0 - 2*GambarULL121*dphi1 - 2*GambarULL221*dphi2 + 0.5*dGambarU01*gambar02 + 0.5*dGambarU02*gambar01 + 0.5*dGambarU11*gambar12 + 0.5*dGambarU12*gambar11 + 0.5*dGambarU21*gambar22 + 0.5*dGambarU22*gambar21 - 0.5*ddgambar2100*gambarinv00 - 0.5*ddgambar2101*gambarinv01 - 0.5*ddgambar2102*gambarinv02 - 0.5*ddgambar2110*gambarinv10 - 0.5*ddgambar2111*gambarinv11 - 0.5*ddgambar2112*gambarinv12 - 0.5*ddgambar2120*gambarinv20 - 0.5*ddgambar2121*gambarinv21 - 0.5*ddgambar2122*gambarinv22 - 2*ddphi21 - 4*std::pow(dphi0, 2)*gambar21*gambarinv00 - 4*dphi0*dphi1*gambar21*gambarinv01 - 4*dphi0*dphi1*gambar21*gambarinv10 - 4*dphi0*dphi2*gambar21*gambarinv02 - 4*dphi0*dphi2*gambar21*gambarinv20 - 4*std::pow(dphi1, 2)*gambar21*gambarinv11 - 4*dphi1*dphi2*gambar21*gambarinv12 - 4*dphi1*dphi2*gambar21*gambarinv21 + 4*dphi1*dphi2 - 4*std::pow(dphi2, 2)*gambar21*gambarinv22 - 2*gambar21*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar21*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar21*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar21*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar21*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar21*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar21*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar21*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar21*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22) + gambarinv00*(GambarLLL100*GambarULL002 + GambarLLL200*GambarULL001) + gambarinv00*(GambarLLL110*GambarULL102 + GambarLLL210*GambarULL101) + gambarinv00*(GambarLLL120*GambarULL202 + GambarLLL220*GambarULL201) + gambarinv01*(GambarLLL101*GambarULL002 + GambarLLL201*GambarULL001) + gambarinv01*(GambarLLL111*GambarULL102 + GambarLLL211*GambarULL101) + gambarinv01*(GambarLLL121*GambarULL202 + GambarLLL221*GambarULL201) + gambarinv02*(GambarLLL102*GambarULL002 + GambarLLL202*GambarULL001) + gambarinv02*(GambarLLL112*GambarULL102 + GambarLLL212*GambarULL101) + gambarinv02*(GambarLLL122*GambarULL202 + GambarLLL222*GambarULL201) + gambarinv10*(GambarLLL100*GambarULL012 + GambarLLL200*GambarULL011) + gambarinv10*(GambarLLL110*GambarULL112 + GambarLLL210*GambarULL111) + gambarinv10*(GambarLLL120*GambarULL212 + GambarLLL220*GambarULL211) + gambarinv11*(GambarLLL101*GambarULL012 + GambarLLL201*GambarULL011) + gambarinv11*(GambarLLL111*GambarULL112 + GambarLLL211*GambarULL111) + gambarinv11*(GambarLLL121*GambarULL212 + GambarLLL221*GambarULL211) + gambarinv12*(GambarLLL102*GambarULL012 + GambarLLL202*GambarULL011) + gambarinv12*(GambarLLL112*GambarULL112 + GambarLLL212*GambarULL111) + gambarinv12*(GambarLLL122*GambarULL212 + GambarLLL222*GambarULL211) + gambarinv20*(GambarLLL100*GambarULL022 + GambarLLL200*GambarULL021) + gambarinv20*(GambarLLL110*GambarULL122 + GambarLLL210*GambarULL121) + gambarinv20*(GambarLLL120*GambarULL222 + GambarLLL220*GambarULL221) + gambarinv21*(GambarLLL101*GambarULL022 + GambarLLL201*GambarULL021) + gambarinv21*(GambarLLL111*GambarULL122 + GambarLLL211*GambarULL121) + gambarinv21*(GambarLLL121*GambarULL222 + GambarLLL221*GambarULL221) + gambarinv22*(GambarLLL102*GambarULL022 + GambarLLL202*GambarULL021) + gambarinv22*(GambarLLL112*GambarULL122 + GambarLLL212*GambarULL121) + gambarinv22*(GambarLLL122*GambarULL222 + GambarLLL222*GambarULL221);
         amrex::Real RLL22 = GambarLLL002*GambarULL020*gambarinv00 + GambarLLL002*GambarULL021*gambarinv01 + GambarLLL002*GambarULL022*gambarinv02 + GambarLLL012*GambarULL020*gambarinv10 + GambarLLL012*GambarULL021*gambarinv11 + GambarLLL012*GambarULL022*gambarinv12 + GambarLLL022*GambarULL020*gambarinv20 + GambarLLL022*GambarULL021*gambarinv21 + GambarLLL022*GambarULL022*gambarinv22 + GambarLLL102*GambarULL120*gambarinv00 + GambarLLL102*GambarULL121*gambarinv01 + GambarLLL102*GambarULL122*gambarinv02 + GambarLLL112*GambarULL120*gambarinv10 + GambarLLL112*GambarULL121*gambarinv11 + GambarLLL112*GambarULL122*gambarinv12 + GambarLLL122*GambarULL120*gambarinv20 + GambarLLL122*GambarULL121*gambarinv21 + GambarLLL122*GambarULL122*gambarinv22 + 2*GambarLLL200*GambarULL002*gambarinv00 + 2*GambarLLL200*GambarULL012*gambarinv10 + 2*GambarLLL200*GambarULL022*gambarinv20 + 2*GambarLLL201*GambarULL002*gambarinv01 + 2*GambarLLL201*GambarULL012*gambarinv11 + 2*GambarLLL201*GambarULL022*gambarinv21 + 2*GambarLLL202*GambarULL002*gambarinv02 + 2*GambarLLL202*GambarULL012*gambarinv12 + 2*GambarLLL202*GambarULL022*gambarinv22 + GambarLLL202*GambarULL220*gambarinv00 + GambarLLL202*GambarULL221*gambarinv01 + GambarLLL202*GambarULL222*gambarinv02 + 2*GambarLLL210*GambarULL102*gambarinv00 + 2*GambarLLL210*GambarULL112*gambarinv10 + 2*GambarLLL210*GambarULL122*gambarinv20 + 2*GambarLLL211*GambarULL102*gambarinv01 + 2*GambarLLL211*GambarULL112*gambarinv11 + 2*GambarLLL211*GambarULL122*gambarinv21 + 2*GambarLLL212*GambarULL102*gambarinv02 + 2*GambarLLL212*GambarULL112*gambarinv12 + 2*GambarLLL212*GambarULL122*gambarinv22 + GambarLLL212*GambarULL220*gambarinv10 + GambarLLL212*GambarULL221*gambarinv11 + GambarLLL212*GambarULL222*gambarinv12 + 1.0*GambarLLL220*GambarU0 + 2*GambarLLL220*GambarULL202*gambarinv00 + 2*GambarLLL220*GambarULL212*gambarinv10 + 2*GambarLLL220*GambarULL222*gambarinv20 + 1.0*GambarLLL221*GambarU1 + 2*GambarLLL221*GambarULL202*gambarinv01 + 2*GambarLLL221*GambarULL212*gambarinv11 + 2*GambarLLL221*GambarULL222*gambarinv21 + 1.0*GambarLLL222*GambarU2 + 2*GambarLLL222*GambarULL202*gambarinv02 + 2*GambarLLL222*GambarULL212*gambarinv12 + GambarLLL222*GambarULL220*gambarinv20 + GambarLLL222*GambarULL221*gambarinv21 + 3*GambarLLL222*GambarULL222*gambarinv22 - 2*GambarULL022*dphi0 - 2*GambarULL122*dphi1 - 2*GambarULL222*dphi2 + 1.0*dGambarU02*gambar02 + 1.0*dGambarU12*gambar12 + 1.0*dGambarU22*gambar22 - 0.5*ddgambar2200*gambarinv00 - 0.5*ddgambar2201*gambarinv01 - 0.5*ddgambar2202*gambarinv02 - 0.5*ddgambar2210*gambarinv10 - 0.5*ddgambar2211*gambarinv11 - 0.5*ddgambar2212*gambarinv12 - 0.5*ddgambar2220*gambarinv20 - 0.5*ddgambar2221*gambarinv21 - 0.5*ddgambar2222*gambarinv22 - 2*ddphi22 - 4*std::pow(dphi0, 2)*gambar22*gambarinv00 - 4*dphi0*dphi1*gambar22*gambarinv01 - 4*dphi0*dphi1*gambar22*gambarinv10 - 4*dphi0*dphi2*gambar22*gambarinv02 - 4*dphi0*dphi2*gambar22*gambarinv20 - 4*std::pow(dphi1, 2)*gambar22*gambarinv11 - 4*dphi1*dphi2*gambar22*gambarinv12 - 4*dphi1*dphi2*gambar22*gambarinv21 - 4*std::pow(dphi2, 2)*gambar22*gambarinv22 + 4*std::pow(dphi2, 2) - 2*gambar22*gambarinv00*(GambarULL000*dphi0 + GambarULL100*dphi1 + GambarULL200*dphi2 + ddphi00) - 2*gambar22*gambarinv01*(GambarULL001*dphi0 + GambarULL101*dphi1 + GambarULL201*dphi2 + ddphi01) - 2*gambar22*gambarinv02*(GambarULL002*dphi0 + GambarULL102*dphi1 + GambarULL202*dphi2 + ddphi02) - 2*gambar22*gambarinv10*(GambarULL010*dphi0 + GambarULL110*dphi1 + GambarULL210*dphi2 + ddphi10) - 2*gambar22*gambarinv11*(GambarULL011*dphi0 + GambarULL111*dphi1 + GambarULL211*dphi2 + ddphi11) - 2*gambar22*gambarinv12*(GambarULL012*dphi0 + GambarULL112*dphi1 + GambarULL212*dphi2 + ddphi12) - 2*gambar22*gambarinv20*(GambarULL020*dphi0 + GambarULL120*dphi1 + GambarULL220*dphi2 + ddphi20) - 2*gambar22*gambarinv21*(GambarULL021*dphi0 + GambarULL121*dphi1 + GambarULL221*dphi2 + ddphi21) - 2*gambar22*gambarinv22*(GambarULL022*dphi0 + GambarULL122*dphi1 + GambarULL222*dphi2 + ddphi22);
         amrex::Real RTFLL00 = -0.33333333333333331*RLL00*gam00*gaminv00 + RLL00 - 0.33333333333333331*RLL01*gam00*gaminv01 - 0.33333333333333331*RLL02*gam00*gaminv02 - 0.33333333333333331*RLL11*gam00*gaminv11 - 0.33333333333333331*RLL12*gam00*gaminv12 - 0.33333333333333331*RLL22*gam00*gaminv22;
         amrex::Real RTFLL01 = -0.33333333333333331*RLL00*gam01*gaminv00 - 0.33333333333333331*RLL01*gam01*gaminv01 + RLL01 - 0.33333333333333331*RLL02*gam01*gaminv02 - 0.33333333333333331*RLL11*gam01*gaminv11 - 0.33333333333333331*RLL12*gam01*gaminv12 - 0.33333333333333331*RLL22*gam01*gaminv22;
         amrex::Real RTFLL02 = -0.33333333333333331*RLL00*gam02*gaminv00 - 0.33333333333333331*RLL01*gam02*gaminv01 - 0.33333333333333331*RLL02*gam02*gaminv02 + RLL02 - 0.33333333333333331*RLL11*gam02*gaminv11 - 0.33333333333333331*RLL12*gam02*gaminv12 - 0.33333333333333331*RLL22*gam02*gaminv22;
         amrex::Real RTFLL10 = -0.33333333333333331*RLL00*gam10*gaminv00 - 0.33333333333333331*RLL01*gam10*gaminv01 - 0.33333333333333331*RLL02*gam10*gaminv02 + RLL10 - 0.33333333333333331*RLL11*gam10*gaminv11 - 0.33333333333333331*RLL12*gam10*gaminv12 - 0.33333333333333331*RLL22*gam10*gaminv22;
         amrex::Real RTFLL11 = -0.33333333333333331*RLL00*gam11*gaminv00 - 0.33333333333333331*RLL01*gam11*gaminv01 - 0.33333333333333331*RLL02*gam11*gaminv02 - 0.33333333333333331*RLL11*gam11*gaminv11 + RLL11 - 0.33333333333333331*RLL12*gam11*gaminv12 - 0.33333333333333331*RLL22*gam11*gaminv22;
         amrex::Real RTFLL12 = -0.33333333333333331*RLL00*gam12*gaminv00 - 0.33333333333333331*RLL01*gam12*gaminv01 - 0.33333333333333331*RLL02*gam12*gaminv02 - 0.33333333333333331*RLL11*gam12*gaminv11 - 0.33333333333333331*RLL12*gam12*gaminv12 + RLL12 - 0.33333333333333331*RLL22*gam12*gaminv22;
         amrex::Real RTFLL20 = -0.33333333333333331*RLL00*gam20*gaminv00 - 0.33333333333333331*RLL01*gam20*gaminv01 - 0.33333333333333331*RLL02*gam20*gaminv02 - 0.33333333333333331*RLL11*gam20*gaminv11 - 0.33333333333333331*RLL12*gam20*gaminv12 + RLL20 - 0.33333333333333331*RLL22*gam20*gaminv22;
         amrex::Real RTFLL21 = -0.33333333333333331*RLL00*gam21*gaminv00 - 0.33333333333333331*RLL01*gam21*gaminv01 - 0.33333333333333331*RLL02*gam21*gaminv02 - 0.33333333333333331*RLL11*gam21*gaminv11 - 0.33333333333333331*RLL12*gam21*gaminv12 + RLL21 - 0.33333333333333331*RLL22*gam21*gaminv22;
         amrex::Real RTFLL22 = -0.33333333333333331*RLL00*gam22*gaminv00 - 0.33333333333333331*RLL01*gam22*gaminv01 - 0.33333333333333331*RLL02*gam22*gaminv02 - 0.33333333333333331*RLL11*gam22*gaminv11 - 0.33333333333333331*RLL12*gam22*gaminv12 - 0.33333333333333331*RLL22*gam22*gaminv22 + RLL22;
         rhs_fab(i, j, k, Idx::phi) = KOphi - 0.16666666666666666*Ksclr*alpha + betaU0*dphi0 + betaU1*dphi1 + betaU2*dphi2 + 0.16666666666666666*dbetaU00 + 0.16666666666666666*dbetaU11 + 0.16666666666666666*dbetaU22;

         rhs_fab(i, j, k, Idx::gambar00) = -2*Abar00*alpha + KOgambarLL00 + betaU0*dgambar000 + betaU1*dgambar001 + betaU2*dgambar002 + 1.3333333333333335*dbetaU00*gambar00 + 2*dbetaU10*gambar01 - 0.66666666666666663*dbetaU11*gambar00 + 2*dbetaU20*gambar02 - 0.66666666666666663*dbetaU22*gambar00;

         rhs_fab(i, j, k, Idx::gambar01) = -2*Abar01*alpha + KOgambarLL01 + betaU0*dgambar010 + betaU1*dgambar011 + betaU2*dgambar012 - 0.66666666666666663*dbetaU00*gambar01 + dbetaU00*gambar10 + dbetaU01*gambar00 + dbetaU10*gambar11 + 0.33333333333333337*dbetaU11*gambar01 + dbetaU20*gambar12 + dbetaU21*gambar02 - 0.66666666666666663*dbetaU22*gambar01;

         rhs_fab(i, j, k, Idx::gambar02) = -2*Abar02*alpha + KOgambarLL02 + betaU0*dgambar020 + betaU1*dgambar021 + betaU2*dgambar022 - 0.66666666666666663*dbetaU00*gambar02 + dbetaU00*gambar20 + dbetaU02*gambar00 + dbetaU10*gambar21 - 0.66666666666666663*dbetaU11*gambar02 + dbetaU12*gambar01 + dbetaU20*gambar22 + 0.33333333333333337*dbetaU22*gambar02;

         rhs_fab(i, j, k, Idx::gambar11) = -2*Abar11*alpha + KOgambarLL11 + betaU0*dgambar110 + betaU1*dgambar111 + betaU2*dgambar112 - 0.66666666666666663*dbetaU00*gambar11 + 2*dbetaU01*gambar10 + 1.3333333333333335*dbetaU11*gambar11 + 2*dbetaU21*gambar12 - 0.66666666666666663*dbetaU22*gambar11;

         rhs_fab(i, j, k, Idx::gambar12) = -2*Abar12*alpha + KOgambarLL12 + betaU0*dgambar120 + betaU1*dgambar121 + betaU2*dgambar122 - 0.66666666666666663*dbetaU00*gambar12 + dbetaU01*gambar20 + dbetaU02*gambar10 - 0.66666666666666663*dbetaU11*gambar12 + dbetaU11*gambar21 + dbetaU12*gambar11 + dbetaU21*gambar22 + 0.33333333333333337*dbetaU22*gambar12;

         rhs_fab(i, j, k, Idx::gambar22) = -2*Abar22*alpha + KOgambarLL22 + betaU0*dgambar220 + betaU1*dgambar221 + betaU2*dgambar222 - 0.66666666666666663*dbetaU00*gambar22 + 2*dbetaU02*gambar20 - 0.66666666666666663*dbetaU11*gambar22 + 2*dbetaU12*gambar21 + 1.3333333333333335*dbetaU22*gambar22;

         rhs_fab(i, j, k, Idx::Ksclr) = Abar00*AbarUU00*alpha + Abar01*AbarUU01*alpha + Abar02*AbarUU02*alpha + Abar10*AbarUU10*alpha + Abar11*AbarUU11*alpha + Abar12*AbarUU12*alpha + Abar20*AbarUU20*alpha + Abar21*AbarUU21*alpha + Abar22*AbarUU22*alpha + KOKsclr + 0.33333333333333331*std::pow(Ksclr, 2)*alpha + betaU0*dKsclr0 + betaU1*dKsclr1 + betaU2*dKsclr2 - gambarinv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00)*std::exp(-4*phi) - gambarinv01*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10)*std::exp(-4*phi) - gambarinv02*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20)*std::exp(-4*phi) - gambarinv10*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01)*std::exp(-4*phi) - gambarinv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11)*std::exp(-4*phi) - gambarinv12*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21)*std::exp(-4*phi) - gambarinv20*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02)*std::exp(-4*phi) - gambarinv21*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12)*std::exp(-4*phi) - gambarinv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22)*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar00) = -2*Abar00*AbarUL00*alpha + Abar00*Ksclr*alpha + 1.3333333333333335*Abar00*dbetaU00 - 0.66666666666666663*Abar00*dbetaU11 - 0.66666666666666663*Abar00*dbetaU22 - 2*Abar01*AbarUL10*alpha + Abar01*dbetaU10 - 2*Abar02*AbarUL20*alpha + Abar02*dbetaU20 + Abar10*dbetaU10 + Abar20*dbetaU20 + KOAbarLL00 + betaU0*dAbar000 + betaU1*dAbar001 + betaU2*dAbar002 + (GamULL000*dalpha0 + GamULL100*dalpha1 + GamULL200*dalpha2 + RTFLL00*alpha - ddalpha00 + 0.33333333333333331*gam00*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam00*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam00*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam00*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam00*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam00*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam00*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam00*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam00*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar01) = -2*Abar00*AbarUL01*alpha + Abar00*dbetaU01 - 2*Abar01*AbarUL11*alpha + Abar01*Ksclr*alpha + 0.33333333333333337*Abar01*dbetaU00 + 0.33333333333333337*Abar01*dbetaU11 - 0.66666666666666663*Abar01*dbetaU22 - 2*Abar02*AbarUL21*alpha + Abar02*dbetaU21 + Abar11*dbetaU10 + Abar21*dbetaU20 + KOAbarLL01 + betaU0*dAbar010 + betaU1*dAbar011 + betaU2*dAbar012 + (GamULL001*dalpha0 + GamULL101*dalpha1 + GamULL201*dalpha2 + RTFLL01*alpha - ddalpha01 + 0.33333333333333331*gam01*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam01*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam01*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam01*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam01*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam01*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam01*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam01*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam01*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar02) = -2*Abar00*AbarUL02*alpha + Abar00*dbetaU02 - 2*Abar01*AbarUL12*alpha + Abar01*dbetaU12 - 2*Abar02*AbarUL22*alpha + Abar02*Ksclr*alpha + 0.33333333333333337*Abar02*dbetaU00 - 0.66666666666666663*Abar02*dbetaU11 + 0.33333333333333337*Abar02*dbetaU22 + Abar12*dbetaU10 + Abar22*dbetaU20 + KOAbarLL02 + betaU0*dAbar020 + betaU1*dAbar021 + betaU2*dAbar022 + (GamULL002*dalpha0 + GamULL102*dalpha1 + GamULL202*dalpha2 + RTFLL02*alpha - ddalpha02 + 0.33333333333333331*gam02*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam02*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam02*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam02*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam02*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam02*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam02*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam02*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam02*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar11) = Abar01*dbetaU01 - 2*Abar10*AbarUL01*alpha + Abar10*dbetaU01 - 2*Abar11*AbarUL11*alpha + Abar11*Ksclr*alpha - 0.66666666666666663*Abar11*dbetaU00 + 1.3333333333333335*Abar11*dbetaU11 - 0.66666666666666663*Abar11*dbetaU22 - 2*Abar12*AbarUL21*alpha + Abar12*dbetaU21 + Abar21*dbetaU21 + KOAbarLL11 + betaU0*dAbar110 + betaU1*dAbar111 + betaU2*dAbar112 + (GamULL011*dalpha0 + GamULL111*dalpha1 + GamULL211*dalpha2 + RTFLL11*alpha - ddalpha11 + 0.33333333333333331*gam11*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam11*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam11*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam11*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam11*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam11*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam11*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam11*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam11*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar12) = Abar02*dbetaU01 - 2*Abar10*AbarUL02*alpha + Abar10*dbetaU02 - 2*Abar11*AbarUL12*alpha + Abar11*dbetaU12 - 2*Abar12*AbarUL22*alpha + Abar12*Ksclr*alpha - 0.66666666666666663*Abar12*dbetaU00 + 0.33333333333333337*Abar12*dbetaU11 + 0.33333333333333337*Abar12*dbetaU22 + Abar22*dbetaU21 + KOAbarLL12 + betaU0*dAbar120 + betaU1*dAbar121 + betaU2*dAbar122 + (GamULL012*dalpha0 + GamULL112*dalpha1 + GamULL212*dalpha2 + RTFLL12*alpha - ddalpha12 + 0.33333333333333331*gam12*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam12*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam12*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam12*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam12*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam12*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam12*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam12*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam12*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::Abar22) = Abar02*dbetaU02 + Abar12*dbetaU12 - 2*Abar20*AbarUL02*alpha + Abar20*dbetaU02 - 2*Abar21*AbarUL12*alpha + Abar21*dbetaU12 - 2*Abar22*AbarUL22*alpha + Abar22*Ksclr*alpha - 0.66666666666666663*Abar22*dbetaU00 - 0.66666666666666663*Abar22*dbetaU11 + 1.3333333333333335*Abar22*dbetaU22 + KOAbarLL22 + betaU0*dAbar220 + betaU1*dAbar221 + betaU2*dAbar222 + (GamULL022*dalpha0 + GamULL122*dalpha1 + GamULL222*dalpha2 + RTFLL22*alpha - ddalpha22 + 0.33333333333333331*gam22*gaminv00*(-GamULL000*dalpha0 - GamULL100*dalpha1 - GamULL200*dalpha2 + ddalpha00) + 0.33333333333333331*gam22*gaminv01*(-GamULL001*dalpha0 - GamULL101*dalpha1 - GamULL201*dalpha2 + ddalpha01) + 0.33333333333333331*gam22*gaminv02*(-GamULL002*dalpha0 - GamULL102*dalpha1 - GamULL202*dalpha2 + ddalpha02) + 0.33333333333333331*gam22*gaminv10*(-GamULL010*dalpha0 - GamULL110*dalpha1 - GamULL210*dalpha2 + ddalpha10) + 0.33333333333333331*gam22*gaminv11*(-GamULL011*dalpha0 - GamULL111*dalpha1 - GamULL211*dalpha2 + ddalpha11) + 0.33333333333333331*gam22*gaminv12*(-GamULL012*dalpha0 - GamULL112*dalpha1 - GamULL212*dalpha2 + ddalpha12) + 0.33333333333333331*gam22*gaminv20*(-GamULL020*dalpha0 - GamULL120*dalpha1 - GamULL220*dalpha2 + ddalpha20) + 0.33333333333333331*gam22*gaminv21*(-GamULL021*dalpha0 - GamULL121*dalpha1 - GamULL221*dalpha2 + ddalpha21) + 0.33333333333333331*gam22*gaminv22*(-GamULL022*dalpha0 - GamULL122*dalpha1 - GamULL222*dalpha2 + ddalpha22))*std::exp(-4*phi);

         rhs_fab(i, j, k, Idx::GambarU0) = 2*AbarUU00*GambarULL000*alpha - 2*AbarUU00*dalpha0 + 2*AbarUU01*GambarULL010*alpha - 2*AbarUU01*dalpha1 + 2*AbarUU02*GambarULL020*alpha - 2*AbarUU02*dalpha2 + 2*AbarUU10*GambarULL001*alpha + 2*AbarUU11*GambarULL011*alpha + 2*AbarUU12*GambarULL021*alpha + 2*AbarUU20*GambarULL002*alpha + 2*AbarUU21*GambarULL012*alpha + 2*AbarUU22*GambarULL022*alpha - 0.33333333333333337*GambarU0*dbetaU00 + 0.66666666666666663*GambarU0*dbetaU11 + 0.66666666666666663*GambarU0*dbetaU22 - GambarU1*dbetaU01 - GambarU2*dbetaU02 + KOGambarU0 + 2*alpha*(6*AbarUU00*dphi0 - 0.66666666666666663*dKsclr0*gambarinv00) + 2*alpha*(6*AbarUU01*dphi1 - 0.66666666666666663*dKsclr1*gambarinv01) + 2*alpha*(6*AbarUU02*dphi2 - 0.66666666666666663*dKsclr2*gambarinv02) + betaU0*dGambarU00 + betaU1*dGambarU01 + betaU2*dGambarU02 + 1.3333333333333333*ddbetaU000*gambarinv00 + ddbetaU001*gambarinv01 + 0.33333333333333331*ddbetaU001*gambarinv10 + ddbetaU002*gambarinv02 + 0.33333333333333331*ddbetaU002*gambarinv20 + ddbetaU010*gambarinv10 + ddbetaU011*gambarinv11 + ddbetaU012*gambarinv12 + ddbetaU020*gambarinv20 + ddbetaU021*gambarinv21 + ddbetaU022*gambarinv22 + 0.33333333333333331*ddbetaU110*gambarinv00 + 0.33333333333333331*ddbetaU111*gambarinv10 + 0.33333333333333331*ddbetaU112*gambarinv20 + 0.33333333333333331*ddbetaU220*gambarinv00 + 0.33333333333333331*ddbetaU221*gambarinv10 + 0.33333333333333331*ddbetaU222*gambarinv20;

         rhs_fab(i, j, k, Idx::GambarU1) = 2*AbarUU00*GambarULL100*alpha + 2*AbarUU01*GambarULL110*alpha + 2*AbarUU02*GambarULL120*alpha + 2*AbarUU10*GambarULL101*alpha - 2*AbarUU10*dalpha0 + 2*AbarUU11*GambarULL111*alpha - 2*AbarUU11*dalpha1 + 2*AbarUU12*GambarULL121*alpha - 2*AbarUU12*dalpha2 + 2*AbarUU20*GambarULL102*alpha + 2*AbarUU21*GambarULL112*alpha + 2*AbarUU22*GambarULL122*alpha - GambarU0*dbetaU10 + 0.66666666666666663*GambarU1*dbetaU00 - 0.33333333333333337*GambarU1*dbetaU11 + 0.66666666666666663*GambarU1*dbetaU22 - GambarU2*dbetaU12 + KOGambarU1 + 2*alpha*(6*AbarUU10*dphi0 - 0.66666666666666663*dKsclr0*gambarinv10) + 2*alpha*(6*AbarUU11*dphi1 - 0.66666666666666663*dKsclr1*gambarinv11) + 2*alpha*(6*AbarUU12*dphi2 - 0.66666666666666663*dKsclr2*gambarinv12) + betaU0*dGambarU10 + betaU1*dGambarU11 + betaU2*dGambarU12 + 0.33333333333333331*ddbetaU000*gambarinv01 + 0.33333333333333331*ddbetaU001*gambarinv11 + 0.33333333333333331*ddbetaU002*gambarinv21 + ddbetaU100*gambarinv00 + ddbetaU101*gambarinv01 + ddbetaU102*gambarinv02 + 0.33333333333333331*ddbetaU110*gambarinv01 + ddbetaU110*gambarinv10 + 1.3333333333333333*ddbetaU111*gambarinv11 + ddbetaU112*gambarinv12 + 0.33333333333333331*ddbetaU112*gambarinv21 + ddbetaU120*gambarinv20 + ddbetaU121*gambarinv21 + ddbetaU122*gambarinv22 + 0.33333333333333331*ddbetaU220*gambarinv01 + 0.33333333333333331*ddbetaU221*gambarinv11 + 0.33333333333333331*ddbetaU222*gambarinv21;

         rhs_fab(i, j, k, Idx::GambarU2) = 2*AbarUU00*GambarULL200*alpha + 2*AbarUU01*GambarULL210*alpha + 2*AbarUU02*GambarULL220*alpha + 2*AbarUU10*GambarULL201*alpha + 2*AbarUU11*GambarULL211*alpha + 2*AbarUU12*GambarULL221*alpha + 2*AbarUU20*GambarULL202*alpha - 2*AbarUU20*dalpha0 + 2*AbarUU21*GambarULL212*alpha - 2*AbarUU21*dalpha1 + 2*AbarUU22*GambarULL222*alpha - 2*AbarUU22*dalpha2 - GambarU0*dbetaU20 - GambarU1*dbetaU21 + 0.66666666666666663*GambarU2*dbetaU00 + 0.66666666666666663*GambarU2*dbetaU11 - 0.33333333333333337*GambarU2*dbetaU22 + KOGambarU2 + 2*alpha*(6*AbarUU20*dphi0 - 0.66666666666666663*dKsclr0*gambarinv20) + 2*alpha*(6*AbarUU21*dphi1 - 0.66666666666666663*dKsclr1*gambarinv21) + 2*alpha*(6*AbarUU22*dphi2 - 0.66666666666666663*dKsclr2*gambarinv22) + betaU0*dGambarU20 + betaU1*dGambarU21 + betaU2*dGambarU22 + 0.33333333333333331*ddbetaU000*gambarinv02 + 0.33333333333333331*ddbetaU001*gambarinv12 + 0.33333333333333331*ddbetaU002*gambarinv22 + 0.33333333333333331*ddbetaU110*gambarinv02 + 0.33333333333333331*ddbetaU111*gambarinv12 + 0.33333333333333331*ddbetaU112*gambarinv22 + ddbetaU200*gambarinv00 + ddbetaU201*gambarinv01 + ddbetaU202*gambarinv02 + ddbetaU210*gambarinv10 + ddbetaU211*gambarinv11 + ddbetaU212*gambarinv12 + 0.33333333333333331*ddbetaU220*gambarinv02 + ddbetaU220*gambarinv20 + 0.33333333333333331*ddbetaU221*gambarinv12 + ddbetaU221*gambarinv21 + 1.3333333333333333*ddbetaU222*gambarinv22;

         rhs_fab(i, j, k, Idx::alpha) = KOalpha - 2*Ksclr*alpha + betaU0*dalpha0 + betaU1*dalpha1 + betaU2*dalpha2;

         rhs_fab(i, j, k, Idx::betaU0) = 0.75*BU0 + KObetaU0 + betaU0*dbetaU00 + betaU1*dbetaU01 + betaU2*dbetaU02;

         rhs_fab(i, j, k, Idx::betaU1) = 0.75*BU1 + KObetaU1 + betaU0*dbetaU10 + betaU1*dbetaU11 + betaU2*dbetaU12;

         rhs_fab(i, j, k, Idx::betaU2) = 0.75*BU2 + KObetaU2 + betaU0*dbetaU20 + betaU1*dbetaU21 + betaU2*dbetaU22;

         rhs_fab(i, j, k, Idx::BU0) = 2*AbarUU00*GambarULL000*alpha - 2*AbarUU00*dalpha0 + 2*AbarUU01*GambarULL010*alpha - 2*AbarUU01*dalpha1 + 2*AbarUU02*GambarULL020*alpha - 2*AbarUU02*dalpha2 + 2*AbarUU10*GambarULL001*alpha + 2*AbarUU11*GambarULL011*alpha + 2*AbarUU12*GambarULL021*alpha + 2*AbarUU20*GambarULL002*alpha + 2*AbarUU21*GambarULL012*alpha + 2*AbarUU22*GambarULL022*alpha - BU0 - 0.33333333333333337*GambarU0*dbetaU00 + 0.66666666666666663*GambarU0*dbetaU11 + 0.66666666666666663*GambarU0*dbetaU22 - GambarU1*dbetaU01 - GambarU2*dbetaU02 + KOBU0 + KOGambarU0 + 2*alpha*(6*AbarUU00*dphi0 - 0.66666666666666663*dKsclr0*gambarinv00) + 2*alpha*(6*AbarUU01*dphi1 - 0.66666666666666663*dKsclr1*gambarinv01) + 2*alpha*(6*AbarUU02*dphi2 - 0.66666666666666663*dKsclr2*gambarinv02) + betaU0*dBU00 + betaU1*dBU01 + betaU2*dBU02 + 1.3333333333333333*ddbetaU000*gambarinv00 + ddbetaU001*gambarinv01 + 0.33333333333333331*ddbetaU001*gambarinv10 + ddbetaU002*gambarinv02 + 0.33333333333333331*ddbetaU002*gambarinv20 + ddbetaU010*gambarinv10 + ddbetaU011*gambarinv11 + ddbetaU012*gambarinv12 + ddbetaU020*gambarinv20 + ddbetaU021*gambarinv21 + ddbetaU022*gambarinv22 + 0.33333333333333331*ddbetaU110*gambarinv00 + 0.33333333333333331*ddbetaU111*gambarinv10 + 0.33333333333333331*ddbetaU112*gambarinv20 + 0.33333333333333331*ddbetaU220*gambarinv00 + 0.33333333333333331*ddbetaU221*gambarinv10 + 0.33333333333333331*ddbetaU222*gambarinv20;

         rhs_fab(i, j, k, Idx::BU1) = 2*AbarUU00*GambarULL100*alpha + 2*AbarUU01*GambarULL110*alpha + 2*AbarUU02*GambarULL120*alpha + 2*AbarUU10*GambarULL101*alpha - 2*AbarUU10*dalpha0 + 2*AbarUU11*GambarULL111*alpha - 2*AbarUU11*dalpha1 + 2*AbarUU12*GambarULL121*alpha - 2*AbarUU12*dalpha2 + 2*AbarUU20*GambarULL102*alpha + 2*AbarUU21*GambarULL112*alpha + 2*AbarUU22*GambarULL122*alpha - BU1 - GambarU0*dbetaU10 + 0.66666666666666663*GambarU1*dbetaU00 - 0.33333333333333337*GambarU1*dbetaU11 + 0.66666666666666663*GambarU1*dbetaU22 - GambarU2*dbetaU12 + KOBU1 + KOGambarU1 + 2*alpha*(6*AbarUU10*dphi0 - 0.66666666666666663*dKsclr0*gambarinv10) + 2*alpha*(6*AbarUU11*dphi1 - 0.66666666666666663*dKsclr1*gambarinv11) + 2*alpha*(6*AbarUU12*dphi2 - 0.66666666666666663*dKsclr2*gambarinv12) + betaU0*dBU10 + betaU1*dBU11 + betaU2*dBU12 + 0.33333333333333331*ddbetaU000*gambarinv01 + 0.33333333333333331*ddbetaU001*gambarinv11 + 0.33333333333333331*ddbetaU002*gambarinv21 + ddbetaU100*gambarinv00 + ddbetaU101*gambarinv01 + ddbetaU102*gambarinv02 + 0.33333333333333331*ddbetaU110*gambarinv01 + ddbetaU110*gambarinv10 + 1.3333333333333333*ddbetaU111*gambarinv11 + ddbetaU112*gambarinv12 + 0.33333333333333331*ddbetaU112*gambarinv21 + ddbetaU120*gambarinv20 + ddbetaU121*gambarinv21 + ddbetaU122*gambarinv22 + 0.33333333333333331*ddbetaU220*gambarinv01 + 0.33333333333333331*ddbetaU221*gambarinv11 + 0.33333333333333331*ddbetaU222*gambarinv21;

         rhs_fab(i, j, k, Idx::BU2) = 2*AbarUU00*GambarULL200*alpha + 2*AbarUU01*GambarULL210*alpha + 2*AbarUU02*GambarULL220*alpha + 2*AbarUU10*GambarULL201*alpha + 2*AbarUU11*GambarULL211*alpha + 2*AbarUU12*GambarULL221*alpha + 2*AbarUU20*GambarULL202*alpha - 2*AbarUU20*dalpha0 + 2*AbarUU21*GambarULL212*alpha - 2*AbarUU21*dalpha1 + 2*AbarUU22*GambarULL222*alpha - 2*AbarUU22*dalpha2 - BU2 - GambarU0*dbetaU20 - GambarU1*dbetaU21 + 0.66666666666666663*GambarU2*dbetaU00 + 0.66666666666666663*GambarU2*dbetaU11 - 0.33333333333333337*GambarU2*dbetaU22 + KOBU2 + KOGambarU2 + 2*alpha*(6*AbarUU20*dphi0 - 0.66666666666666663*dKsclr0*gambarinv20) + 2*alpha*(6*AbarUU21*dphi1 - 0.66666666666666663*dKsclr1*gambarinv21) + 2*alpha*(6*AbarUU22*dphi2 - 0.66666666666666663*dKsclr2*gambarinv22) + betaU0*dBU20 + betaU1*dBU21 + betaU2*dBU22 + 0.33333333333333331*ddbetaU000*gambarinv02 + 0.33333333333333331*ddbetaU001*gambarinv12 + 0.33333333333333331*ddbetaU002*gambarinv22 + 0.33333333333333331*ddbetaU110*gambarinv02 + 0.33333333333333331*ddbetaU111*gambarinv12 + 0.33333333333333331*ddbetaU112*gambarinv22 + ddbetaU200*gambarinv00 + ddbetaU201*gambarinv01 + ddbetaU202*gambarinv02 + ddbetaU210*gambarinv10 + ddbetaU211*gambarinv11 + ddbetaU212*gambarinv12 + 0.33333333333333331*ddbetaU220*gambarinv02 + ddbetaU220*gambarinv20 + 0.33333333333333331*ddbetaU221*gambarinv12 + ddbetaU221*gambarinv21 + 1.3333333333333333*ddbetaU222*gambarinv22;

}
#endif