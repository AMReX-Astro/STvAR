#ifndef ET_INTEGRATION_LOADINITDATA_K_H
#define ET_INTEGRATION_LOADINITDATA_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
initialize_from_data(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& state_fab, 
        amrex::Array4<amrex::Real const> const& initial_data,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx,
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        amrex::Real Q6 = initial_data(i, j, k, InitIdx::Q6);
        amrex::Real Q7 = initial_data(i, j, k, InitIdx::Q7);
        
        state_fab(i, j, k, Idx::Phi) = Q6;
        state_fab(i, j, k, Idx::AL3) = Q7;
        

        

}
#endif